[[Image:Minimo-slashdot.jpeg|thumb|minimo in QEMU displaying it.slashdot.org]]
[[Image:GTA01-minimo.JPG|thumb|minimo on GTA01 displaying www.heise.de]]

= Installing Minimo web browser =

[http://www.mozilla.org/projects/minimo/develop.html Minimo] es un navegador web basado en Mozilla. Minimo presenta soporte total de  [http://es.wikipedia.org/wiki/AJAX AJAX] y otras ventajas. La compilación actual de Openmoko no incluye Minimo. pero aquí hay instruccioenoes sobre como correr Minimo en en un entorno Xephyr para PC, y sobre cómo usar paquetes de terceros a la vez.

* [http://bec-systems.com/web/content/view/79/9/ Instrucciones sobre cómo incluír los nuevos paquetes de OpenEmbadded en tu proyecto (en inglés)]

Estas instrucciónes deberán ser modificadas para usar imagenes personalizadas en vez de DISTRO_EXTRA_RDEPENDS -- mira el link anterior.

== Configurando el entorno para compilar ==

Si compilaste tu Openmoko usando MokoMajefile algunos de estos pasos pueden no ser familiares para ti.

Asumiendo que la raíz de tu Openmoko se encuentra en ~/workspace/moko

Primero hay que configurar las variables del entorno:
<pre>
moo@hacker:~/workspace/moko/build$ . ../setup-env 
</pre>

Después obtén Minimo de repositorio de OpenEmbadded:
<pre>
moo@hacker:~/workspace/moko/build$ bitbake minimo
</pre>

Edita el arcihvo local.conf y agrega Minimo para construir la lista de dependencias.

<pre>
MACHINE = "qemux86"
DISTRO = "openmoko"
BUILD_ARCH = "i686"
INHERIT += " devshell"
SRCDATE_eds-dbus = "now"
DISTRO_EXTRA_RDEPENDS = "minimo"
</pre>

Después de que local.conf ha agrgado los nuevos paquetes, debes refrescar las tareas de bitbake.

<pre>
bitbake task-base -crebuild
</pre>

Ahora, debes poder recontruir el sistema de raíz usando MokoMakefile.

<pre>
make openmoko-devel-image
</pre>

== Tips ==

La distribución predeterminada de Openmoko carece del archivo ''/etc/resolv.conf'' que es usado para configurar la búsqueda del sistema DNS. Sin este archivo un nombre de dominio incorrecto evitaría la navegación web. La manera más sencilla de corregír esto es copiando el archivo resolv.conf al sistema raíz de Openmoko.

<pre>
moo@hacker:~/workspace/moko$ cp /etc/resolv.conf rootfs/etc/resolv.conf
</pre>


Si la compilación falla con

<pre>
/usr/bin/ld: skipping incompatible $OMDIR/local/tmp/staging/arm-angstrom-linux-gnueabi/lib/libIDL-2.a mientras busca -lIDL-2
</pre>
(aquí Minimo se installa en [http://wiki.openmoko.org/wiki/Application_Development_Crash_Course#Setting_Up_a_Local_Overlay Local Overlay], así que tu ruta quizá sea diferente) intenta installando el paquete libidl-dev package en el huesped de tu compilación:

<pre>
sudo aptitude install libidl-dev
</pre>

== En entorno usando chroot ==

Sigue las instrucciones en [[Getting OpenMoko working on host with Xephyr]](en inglés) para simular el uso de chroot en el entorno de Openmoko.

Inicia Xephyr. No necesitas iniciar sesión en Openmoko, Minimo puede ejecutarse tal cual.

<pre>
/ $ minimo  
</pre>
{{Languages|Minimo}}

[[Category:Software ]]
[[Category:Applications]]
[[Category:Guides]]
