{{Languages|Minimo}}


[[Image:Minimo-slashdot.jpeg|thumb|minimo in QEMU displaying it.slashdot.org]]
[[Image:GTA01-minimo.JPG|thumb|minimo on GTA01 displaying www.heise.de]]

= Installing Minimo web browser =

[http://www.mozilla.org/projects/minimo/develop.html Minimo] is a Mozilla based web browser. It features full [http://en.wikipedia.org/wiki/Ajax_%28programming%29 AJAX] support and other goodies. Currently stock Openmoko build doesn't include Minimo. 

== Running on Om2008.8 ==

From the Neo, download the minimo package:

  wget http://www.ginguppin.de/files/minimo.tar.bz2

Then install it:

  opkg install /tmp/minimo_0.02\+cvs20070626-r0_armv4t.ipk

If you get the following error:

  * ERROR: Cannot satisfy the following dependencies for minimo:
        *  libfreetype6 (>= 2.3.6) *

First try:

  opkg install libfreetype6

If this does not install a libfreetype6 version > 2.3.6, you can download a newer libfreetype6 from the Angstrom repository at this location: http://www.angstrom-distribution.org/repo/?action=details&pnm=libfreetype6

Ex:

  wget http://www.angstrom-distribution.org/feeds/2008/ipk/glibc/armv4t/base/libfreetype6_2.3.6-r0_armv4t.ipk
  opkg install minimo_0.02\+cvs20070626-r0_armv4t.ipk

Using Minimo with the stock Om2008.8 gets annoying because the keyboard always takes up half the screen.  I recommend reactivating the [[Keyboard_Toggle#Reactivating_the_keyboard_toggle_under_Om2008.8|Keyboard Toggle]] so that you can hide the keyboard while browsing.



== Running in Xephyr PC environment ==

Here are instructions on how to run minimo in Xephyr PC environment and how to use other third party packages too. 

* [http://bec-systems.com/web/content/view/79/9/ Instructions for including new OpenEmbedded packages to your project]

These instructions should be updated to use a custom image rather than DISTRO_EXTRA_RDEPENDS -- see link above.

Alternatively, a binary ipkg was posted here[[http://www.ginguppin.de/files/minimo.tar.bz2]]

=== Setup build environment ===

If you have built your Openmoko using MokoMakefile some of these steps might not be familiar to you.

Assume your Openmoko root is at ~/workspace/moko

First setup build environment variables:
<pre>
moo@hacker:~/workspace/moko/build$ . ../setup-env 
</pre>

Then checkout minimo from OpenEmbedded repository:
<pre>
moo@hacker:~/workspace/moko/build$ bitbake minimo
</pre>

Edit local.conf and add minimo to build dependencies list.

<pre>
MACHINE = "qemux86"
DISTRO = "openmoko"
BUILD_ARCH = "i686"
INHERIT += " devshell"
SRCDATE_eds-dbus = "now"
DISTRO_EXTRA_RDEPENDS = "minimo"
</pre>

After local.conf has added new packages, one must refresh bitbake tasks.

<pre>
bitbake task-base -crebuild
</pre>

Now, you should be able to rebuild root fs using MokoMakefile.

<pre>
make openmoko-devel-image
</pre>

=== Tips ===

The default Openmoko distribution lacks ''/etc/resolv.conf'' file which is used to configure system DNS look-up. Without this file, failing  domain name look-up prevents web browsing. The easiest way to fix is to copy the host system resolv.conf to the rootfs.

<pre>
moo@hacker:~/workspace/moko$ cp /etc/resolv.conf rootfs/etc/resolv.conf
</pre>


If build fails with 

<pre>
/usr/bin/ld: skipping incompatible $OMDIR/local/tmp/staging/arm-angstrom-linux-gnueabi/lib/libIDL-2.a when searching for -lIDL-2
</pre>
(here minimo is installed in a [http://wiki.openmoko.org/wiki/Application_Development_Crash_Course#Setting_Up_a_Local_Overlay Local Overlay], so your path will perhaps differ) try installing the libidl-dev package on the buildhost:

<pre>
sudo aptitude install libidl-dev
</pre>

=== In chroot'ed environment ===

Following instructions in [[Getting Openmoko working on host with Xephyr]] to get yourself chroot'ed into OpenMoko environment. 

Start Xephyr. You don't need to start Openmoko session, minimo can run as is. 

<pre>
/ $ minimo  
</pre>

[[Category:Applications]]
[[Category:Guides]]
