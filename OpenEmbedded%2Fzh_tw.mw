{{Languages|OpenEmbedded}}

[[Openmoko]]，我們的套件，是使用OpenEmbedded架構而成的。OpenEmbedded可以：

* 針對多個嵌入式裝置產生 (cross-compile) 軟體套件。
* 管理不同的硬體架構，及支援跨越架構的多版本軟體。 

要取得更多資訊，請參考[http://www.openembedded.org/ Open Embedded] 網站。

== 使用OpenEmbedded建立Openmoko套件 ==

請注意，如果你是一個程式開發人員，你可能不會想要使用OpenEmbedded建立Openmoko套件。若是這種情況，你最好是使用你預建的[[Toolchain]]。建立Openmoko套件是需要花費時間、cpu及磁碟耗用，所以，若你是系統整合的人員，或者是想要客製化你的Openmoko套件，你才需要進行這個工作。

[[MokoMakefile]]，是簡化建立OpenEmbedded的設備，它也可以however it also shields you from a lot of knowledge. In case you are the aformentioned system integrator / distribution customizer, we strongly advise you to use BitBake and OpenEmbedded directly.

=== OpenEmbedded mirror ===
在OpenEmbedded中正式的Openmoko mirror可以在[[MonotoneServer]]上找到。如果你還沒有monotone database，你可以自 [[http://downloads.openmoko.org/OE/snapshots/OE.mtn.bz2 snapshot database]]下載，並且解開它：

 cd /local/pkg/oe
 wget http://downloads.openmoko.org/OE/snapshots/OE.mtn.bz2
 bzip2 -d OE.mtn.bz2

這比使用monotone 從我們的mirror中取回啟始的資料庫快速。接著，更新你的目錄，雖然它可能應該從 monotone server進行(note that this is only a monotone server which does not contain a web presence):

 mtn --db=/local/pkg/oe/OE.mtn pull
 mtn update

=== Upstream Source tarballs ===

When bitbake builds a particular OE package, it downloads the original source code of the upstream project (e.g. Linux kernel) and patches from the internet. After downloading sources, bitbake applies a series of patches to the tree. These patches have either been downloaded from the internet or are contained in the OpenEmbemdded metadata repository. The unpatched source tarballs are available from http://downloads.openmoko.org/sources/

{{todo|finish article}}

{{Languages|OpenEmbedded}}
[[Category:Software ]]
[[Category:Application Developer]]
[[Category:Openmoko]]
