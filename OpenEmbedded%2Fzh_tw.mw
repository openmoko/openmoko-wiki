{{Languages|OpenEmbedded}}

[[Openmoko]]，我們的套件，是使用OpenEmbedded架構而成的。OpenEmbedded可以：

* 針對多個嵌入式裝置產生 (cross-compile) 軟體套件。
* 管理不同的硬體架構，及支援跨越架構的多版本軟體。 

要取得更多資訊，請參考[http://www.openembedded.org/ Open Embedded] 網站。

== 使用OpenEmbedded建立Openmoko套件 ==

請注意，如果你是一個程式開發人員，你可能不會想要使用OpenEmbedded建立Openmoko套件。若是這種情況，你最好是使用你預建的[[Toolchain]]。建立Openmoko套件是需要花費時間、cpu及磁碟耗用，所以，若你是系統整合的人員，或者是想要客製化你的Openmoko套件，你才需要進行這個工作。

[[MokoMakefile]]，是簡化建立OpenEmbedded的設備。若你是aformentioned 系統整合人員/套件客製化人員的話，我們強烈的建議你直接使用BitBake及OpenEmbedded 。

=== OpenEmbedded mirror ===
在OpenEmbedded中正式的Openmoko mirror可以在[[MonotoneServer]]上找到。如果你還沒有monotone database，你可以自 [http://downloads.openmoko.org/OE/snapshots/OE.mtn.bz2 snapshot database]下載，並且解開它：

 cd /local/pkg/oe
 wget http://downloads.openmoko.org/OE/snapshots/OE.mtn.bz2
 bzip2 -d OE.mtn.bz2

這比使用monotone 從我們的mirror中取回啟始的資料庫快速。接著，更新你的目錄，雖然它可能應該從 monotone server進行(注意，它只是一個monotone server，並不包含web)：

 mtn --db=/local/pkg/oe/OE.mtn pull
 mtn update

=== Upstream Source tarballs ===

當bitbake建立了特定的OE套件時，它會從網路上下載upstream 專案的原始程式碼(如 Linux kernel)及 patches。在下載了原始碼之後，bitbake 會套用patche檔到目錄中，這些patche有的是從網路上下載下來的，或者是包含在OpenEmbemdded metadata 儲存位址中。這些 unpatched source tarballs 可以在http://downloads.openmoko.org/sources/ 這個位址下載。

{{todo|finish article}}

{{Languages|OpenEmbedded}}

[[Category:Application Developer]]
[[Category:Openmoko]]
