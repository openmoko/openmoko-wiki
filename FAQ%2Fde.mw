== Einleitung == 

=== Q: Was ist Openmoko und Neo1973? ===
A: [[OpenMoko]] ist eine Software Plattform - Der Versuch eine vollst&auml;ndig offene Softwaresuite f&uuml;r Handys zu erschaffen. Das [[FIC]] [[Neo1973]] ist das erste Telefon, welches OpenMoko unterst&uuml;tzt.

=== Q: Ab wann kann das Neo1973 gekauft werden? ===

A: Ende M&auml;rz f&uuml;r Entwickler und ab September f&uuml;r den Massenmarkt. Siehe auch [[Neo1973]] f&uuml;r aktuellere Informationen. Das Neo1973 wird weltweit verkauft. Der Versand wird auch aus der EU stattfinden. Eine Mailingliste f&uuml;r weitere Informationen zu dem Versand: [http://lists.openmoko.org/mailman/listinfo/announce the mailing list announce]

=== Q: Wie viel kostet das Phone? === 

A: $350 kostet das Entwicklerkit - Phase 1. Enth&auml;lt:
<ul>
 <li>Neo1973 Handy</li>
 <li>Batterie</li>
 <li>Headset</li>
 <li>Ladeger&auml;t</li>
 <li>Handytasche</li>
 <li>Stylus (Stift)</li>
 <li>Schl&uuml;sselband</li>
 <li>512 MB MicroSD Karte</li>
 <li>USB Verbindungskabel</li>
 <li>Anleitung und Garantiebescheinigung</li>
</ul>

$75 f&uuml;r das AutoKit. Enth&auml;lt:
<ul>
 <li>Halter f&uuml;r die Windschutzscheibe</li>
 <li>Autoladeger&auml;t</li>
 <li>externe Antenne</li>
</ul>

$200 f&uuml;r die Hacker's Lunchbox. Enth&auml;lt:
<ul>
 <li>Entwickler-/[[Debug Board]]</li>
 <li>Batterie</li>
 <li>Ladeger&auml;t f&uuml;r das Entwicklerboard</li>
 <li>FPC (Steckverbinder f&uuml;r den jtag port)</li>
 <li>Trageriehmen</li>
 <li>Debug Kabel (USB)</li>
</ul>

=== Q: Was muss ich machen? ===

A: Das Phase1 Handy ist f&uuml;r Entwickler ab Ende M&auml;rz erh&auml;ltlich. Es ist nicht f&uuml;r Endanwender geeignet und wird nur rudiment&auml;re Funktionalit&auml;t besitzen. Die Entwicklung der Software wird bis zur Auslieferung an den Massenmarkt fortgesetzt.

Ein Interessent sollte:

* wissen, dass es in ca. 6 Monaten ein neues Handy mit schnellerer CPU, GSM etc. geben wird
* Spass am hacken von Ger&auml;ten besitzen
* Seinen Weg durch Prototypen (Software) mit wenig Dokumentation finden
* den Traum eines offenen Ger&auml;tes teilen
* kein Endnutzerger&auml;t erwarten
* neue Ideen f&uuml;r das Mobile Computing Zeitalter mitbringen
* 350$ besitzen

Idealierweise zus&auml;tzlich:

* Fehler finden und patches einspielen k&ouml;nnen
* Gerne mit einer Community zusammenarbeiten um die Software zu verbessern

==Software==

=== Q: Gibt es eine Beschreibung und Liste der Software (OpenMoko)? ===

A: Siehe [[OpenMoko]]

=== Q: Wie kann ich mit OpenMoko Software installieren und verwalten? ===

A: ipkg: http://handhelds.org/moin/moin.cgi/Ipkg

=== Q: Wie kann ich Programme f&uuml;r das Neo1973 &uuml;bersetzen? ===

A: Siehe [[Toolchain]].

=== Q: Gibt es einen Emulator f&uuml;r OpenMoko? ===

Zitat der Originalseite:

 *XorA guesses that if your first question is "is there an emulator"
  then you're not actually ever going to do dev work :-)

====QEMU====
QEMU ist ein guter Einstiegspunkt, es sollte m&ouml;glich sein, jede OpenMoko Programme laufen zu lassen. Einstieg: http://www.aurel32.net/info/debian_arm_qemu.php

[[User:Jebba|Jeff]] hat ein Image zum Testen erstellt, siehe auch [http://fabrice.bellard.free.fr/qemu/ qemu], wenn gew&uuml;nscht:
ftp://ftp.blagblagblag.org/pub/BLAG/developers/jebba/openmoko/

Als l&auml;ngerfristiges Ziel plant FIC ein Device f&uuml;r QEMU zu erstellen. Im Moment kann MACHINE="qemuarm" verwendet werden.

====Xoo====
ist ein weiterer [http://projects.o-hand.com/xoo Xoo].

Koen says: "Xoo should be enough for most apps people will develop, since most don't need access to the gsm uart directly. If you're hardcore you could use qemu + xoo, but that still doesn't emulate all the hardware quirks (e.g. unaligned access)".

(Zusammenfassung:
Xoo sollte f&uuml;r die Entwicklung ausreichen. Sollte mehr ben&ouml;ntigt werden, kann qemu + xoo kombiniert werden.)

Update: Stefan Schmidt hat die Mock-ups angepasst und eine kleine Beschreibung f&uuml;r xoo geschrieben. In seinen Worten:

It's not really useable at all, as you need a really high screen resolution to fit the whole picture on your screen. And of course the dpi are wrong. Even no buttons because I can't remember where they are at the case.

http://www.datenfreihafen.org/~stefan/OpenMoko/neo1973-xoo-device.tar.bz2

Start with 'xoo --device /path/to/neo1973.xml'
Mehr Informationen gibt es [[Getting_Openmoko_working_on_host_with_Xoo|hier]].

====Xephyr====
Oder verwende Xephyr f&uuml;r lokal &uuml;bersetzte Programme (z.B. matchbox svn + openmoko):
 Xephyr -screen 480x640 -nolisten tcp -ac :1 &
 export DISPLAY=:1
 export LD_LIBRARY_PATH=/usr/local/lib
 matchbox-window-manager -display $DISPLAY -use_titlebar no \
  -use_super_modal yes -use_lowlight yes -use_dialog_mode static \
  -use_cursor yes &
 matchbox-panel --geometry=480x44 --end-applets=clock &
 openmoko-footer &
 openmoko-taskmanager &

=== Q: Wo finde ich ein Tutorial f&uuml;r ein 'Hello, world!' f&uuml;r OpenMoko? ===

A: http://www.gtk.org/tutorial/

=== Q: K&ouml;nnen PalmOS Anwendungen nach OpenMoko portiert werden? ===

A: Das portieren von "Garnet" OS (oder "Palm OS") Programmen nach Linux ist keine einfache Aufgabe. Ein Emulator hierf&uuml;r wird Teil der ACCESS Linux Platform.

Der Aufbau von PalmOS unterscheidet sich stark von Linux: Es verwendet nicht immer den Ansatz "everything is a file"; der Speicher ist als "Suppe" von Eintr&auml;gen realisiert (das ist nur teilweise richtig, da eine Berechtigung zum L&ouml;schen von Dateien aus dem Flashspeicher ben&ouml;tigt wird, aber aus dem Standpunkt eines Entwicklers gesprochen, kommt es dem schon sehr nahe). Auch die grafische Oberfl&auml;che ist sehr unterschiedlich zu GTK. Das Ergebnis: Eine sehr gut programmierte Anwendung, welche sorgf&auml;ltig die Kernalgorithmen von der Oberfl&auml;che und die Eingabe und Ausgabe trennt, kann durch ersetzen einiger Komponenten portiert werden. Eine Anwendung, welche mehr menschlich programmiert wurde, vermischt die Komponenten an einem bestimmten Punkt, so dass das Portieren letztendlich eine gro√üe Herausforderung wird.

Die ACCESS Linux Platform enth&auml;lt POSE, einen Emulator, welcher ein PalmOS auf einem Linux Host simuliert. Dieser Emulator existiert seit einiger Zeit; es wird erwartet, dass er auch auf OpenMoko laufen kann. Dies ist aber eher eine kurzfristiges "Plaster" als eine Langzeitl&ouml;sung.

=== Q: Ist Java vorhanden? ===
A: Wahrscheinlich, wenn Du uns hilfst es zum Laufen zu bekommen. Ein guter Ort um das Thema weiter zu verfolgen: [http://projects.openmoko.org/projects/java-pkg/ projects.openmoko.org] und [https://phoneme.dev.java.net/ PhoneME].

=== Q: Was sind die wichtigsten X11 Details? ===

A: Siehe [http://lists.openmoko.org/pipermail/community/2007-January/001353.html xdpyinfo output].

=== Q: Funktioniert OpenMoko auch auf anderer Hardware? ===

A: Du kannst es auf deinem [[How_to_run_OpenMoko_Apps_on_PC|PC]] laufen lassen. Oder auch: [http://www.datenfreihafen.org/~stefan/weblog//archives/2007/02/#e2007-02-18T15_27_07.txt OpenEZX and HTC] und [http://dominion.kabel.utwente.nl/koen/cms/openmoko-running-on-an-ipaq iPaq hx4700].
