{{Languages}}
QtMoko is a [[Debian]] based distribution for the [[Neo FreeRunner]]. The phone and user interface are based on [[Qt Extended Improved]] formerly known as [[Qtopia / Qt Extended on FreeRunner|Qtopia]]. The QtMoko wiki can be found [http://qtmoko.org/ here].

===Download===
Further information on QtMoko and the current state of development can be found on [http://www.qtmoko.org http://www.qtmoko.org].
==== Sourceforge Download ====
Download the following files from [https://sourceforge.net/projects/qtmoko/files/ radekp download] to you desktop computer:
* latest
** https://sourceforge.net/projects/qtmoko/files/
==== OpenMobile.nl Download ====
This downloadable QtMoko-Image does not need the installation procedure of the following sections:
* OpenMobile Installer is a zip-file that contains images.
* The installation processes flashes Qi and other images
* you have to create to partitions 1=FAT 2=SWAP on your SD-Card (e.g. 2GB SD, Partition 1: FAT16, Partition 2: 128MB as swap - [[fdisk]] type 82)
* download [http://www.openmobile.nl/modules/download_gallery/dlc.php?file=54 qtm-installer-v26.zip] and unpack the file on the FAT-partition of your Mirco-SD card.
* Insert Mirco-SD in your freerunner and boot from SD-Card (press Power & AUX-Button together to get boot menue)
* Select boot from Mirco-SD and after 3 automatic reboots and flashing the QtMoko is installed including Navit.

===Installation===
If you flash the FreeRunner with a kernel image from QtMoko, then you must install the kernel and the root file system with [http://wiki.openmoko.org/wiki/Dfu-util#Binaries_dfu-util dfu-util]. 
{{Note|You need a fully charged Freerunner for installation.}}


==== Installation on SD card with Qi ====
Installing QtMoko on your microSD Card depends on the Bootloader you are using, ''uBoot'' or ''Qi''.

If you have [[Qi]] installed then you can install QtMoko on the SD card. This seems to be useful if you want to work with different distribution and you can change the distribution just by changing the Mirco SD card in your FreeRunner. 
{{Note|Installation in NAND-Memory with Qi is possible without errors, but with an installed bootloader [[Qi]] the boot process will terminate (with Qi installed by Android, which is modified). Install a non-Android Qi version or u-Boot instead!}}

If you use ''Qi'', you only need an ext2 partition into your ÂµSD Card where you uncompress the root filesystem image file [http://sourceforge.net/projects/qtmoko/files/ qtmoko-debian-v26.tar.gz]. In this case Qi Bootloader is going to look for the kernel image into the <tt>/boot</tt> directory for file named <tt>uImage-GTA02.bin</tt> .

==== Installation in NAND Memory with u-Boot ====
If you have [[Qi]] or [http://wiki.openmoko.org/wiki/Manuals/Android Android] (with a modified Qi) installed on your Freerunner then install u-boot again as a [[bootloader]] by downloading a u-boot-binary on http://downloads.openmoko.org/distro/unstable/daily/ otherwise the boot process will terminate and you have to install u-Boot.

All versions of the GTA02 (Neo FreeRunner) that have been sold to the public are version 5 hardware, so look for a file with "gta02" and "v5" in the name, for example:
[http://downloads.openmoko.org/distro/unstable/daily/om-gta02/20100131/u-boot-gta02v5-1.3.1+gitr650149a53dbdd48bf6dfef90930c8ab182adb512-r1.bin u-boot-gta02v5-1.3.1.bin] (linked U-Boot-Version from 31.Jan 2010):

  sudo dfu-util -a u-boot -R -D u-boot-gta02v5-1.3.1.bin

==== Installation of Kernel and Root-FS NAND-Memory ====
Switch off your FreeRunner and press the AUX and Power-On button at the same time. Your FreeRunner is showing the following U-Boot Menu:

   *** BOOT MENU (NOR) ***

   Boot
   Boot from Mirco SD (FAT/ext2)
   Set Console to USB
   Set Console to Serial
   Reboot
   Power Off  

The FreeRunner will stay in this mode for only 30 sec. Within this time you have to start <tt>dfu-util</tt>. If you want to flash the kernel image (you will need to be root on your PC) then you have to start the following command in the 30sec your see the BOOT MENU (use kernel and rootfs from [http://sourceforge.net/projects/qtmoko/files/ http://sourceforge.net/projects/qtmoko/files/]):

 # for the Neo FreeRunner:
 dfu-util -d [[USB Product IDs|0x1d50:0x5119]] -a kernel -R -D  uImage-v24.bin

and finally the root fs with this one:

 # for the Neo FreeRunner:
 dfu-util -d [[USB Product IDs|0x1d50:0x5119]] -a rootfs -R -D qtmoko-debian-v24.jffs2

====Preparations on the Connected PC/Laptop====
* To enable connections just by using the hostname <tt>openmoko</tt> edit the <tt>/etc/hosts</tt> and add line  
  192.168.0.202   openmoko
* Enable internet connection via [[USB Networking]] so that the installation of packages will be possible.

==== First Boot ====
After finishing the installation without errors you have to start the FreeRunner and calibrate the  touch screen. Then you see the installed ''QtMoko'' on your device. 
[[Image:qtmokomain.png|200px|thumb|QtMoko after first boot]]

====First Login====
If you want to login to your FreeRunner set up a network connection (see [[USB Networking]]) with USB cable and start:
   desktop# ssh -X -l root 192.168.0.202

The root password is empty so set it for security reason especially when you open the ssh-daemon on the WLAN network interface. Define root password as usual on a linux box with
   neo# passwd
If you have established the internet connection via USB cable then update the repository data:
   neo# apt-get update 
If you want to check if the internet connection is available on your freerunner ping the OpenMoko web server with:
   neo# ping 88.198.93.221
   neo# ping wiki.openmoko.org
If the first ping works and the second doesn't then check the DNS server settings (see [[USB Networking]]).

==== Setting Time and Date ====
Set the time and date on from your linux box with
<pre>
ssh root@openmoko "date -us @`date -u +%s`"
</pre>
sync the hardware clock with the system time to make your change persist over reboots:
<pre>
# hwclock --systohc  
   DOES NOT WORK - no access to Hardware Clock
</pre>
If you want to set the time with a NTP Client install the following package, if you have a network connection available (see [[USB Networking]])
<pre>
# apt-get install ntpdate
# ntpdate-debian
</pre>
For further detail see [[Setting Date and Time]].

== Usage ==
=== Size Root File System ===
If you want to install e.g. [[Twinkle]] and [[Navit]] on QtMoko the size of internal NAND memory is not sufficient (Twinkle need > 100MB). By creating symbolic links some memory problems can be avoided. 
{{Note|'''(Size Root Filesystem)''' Create symbolic links from root file system to SD-card to save internal memory.If some folders are symb-linked to SD-Card (with e.g. ext2 partition), e.g.
  # mkdir /media/card/share
  # mkdir /media/card/share/navit
  # ln -s /media/card/share/navit /usr/share/navit 
It recommended to use an ext2-partition. After creating symb-links install software.}}

Consider installing QtMoko on MircroSD instead with [[Qi]], if you want to make use of debian applications that exceed NAND memory capacity.

=== Login ===
If you want to login to your FreeRunner set up a network connection (see [[USB Networking]]) with USB cable and start:
   desktop# ssh -X -l root 192.168.0.202
or if hostname is defined in <tt>/etc/hosts</tt>
   desktop# ssh -X -l root openmoko
=== Installation of Applications ===
If you want to install applications (e.g. <tt>myapplication</tt>) login on your freerunner 
  # apt-get install myapplication
Replace <tt>myapplication</tt> by the package name of application name you want to start, e.g. if you want to install the command line editor <tt>vim</tt>.
  # apt-get install vim
==== Navit ====
 
===== Navit Installation =====
If you want to install e.g. the application [[Navit]], you have to install the following packages. Navit needs and X-Server and it will run under [[QX]].
  # apt-get install flite
  # apt-get install unzip
The zip-package is necessary to unzip the [http://www.openmobile.nl/media/download_gallery/navit-qtm.zip navit-qtm.zip] package.  
  # cd /media/card
  # mkdir download
  # cd download
  # wget http://www.openmobile.nl/media/download_gallery/navit-qtm.zip
  # cd /
During <tt>unzip</tt> you will be asked to replace <tt>/opt/qtmoko/bin/ppp-network</tt>. This has to be done to solve problems with DNS over GPRS. Backup  <tt>ppp-network</tt> file before unzipping <tt>navit-qtm.zip</tt>. 
  # cp /opt/qtmoko/bin/ppp-network /opt/qtmoko/bin/ppp-network.bak
  # unzip /media/card/download/navit-qtm.zip
  # rm /media/card/download/navit-qtm.zip
Unzipping the file will overwrite the following files too:
  /opt/qtmoko/etc/qx/favourites.conf
  /opt/qtmoko/etc/qx/profiles.conf
{{Note|Unzip extracts and overwrites the network settings files mentioned above. Due to this fact the usb0 MAC address changes for the USB connection to your freerunner. E.g. under Ubuntu 10.04 the new network interface for usb0 has to configure again}}

Now you have to restart your Freerunner, but you can also try from the commandline of your neo:
  # echo 1 > /proc/sys/vm/overcommit_memory
After restart you can start [[Navit]] under [[QX]].
[[Image:QX_Navit1.png|150px|thumb|Navit in QX Main Menu]]

===== Download Maps =====
Create a folder <tt>MapsNavit</tt> on your SD card
  # mkdir /media/card/MapsNavit
The navit QT package [http://www.openmobile.nl/media/download_gallery/navit-qtm.zip navit-qtm.zip] from http://www.openmobile.nl the <tt>navit.xml</tt> is predefined for benelux maps and will try to load <tt>osm_benelux.bin</tt> that should be store at
  /media/card/MapsNavit/osm_benelux.bin
If you want to use map for another country you can just store a downloaded [[Navit]]-Map in that folder and rename it <tt>osm_benelux.bin</tt>. If the map name should make sense, then you have to edit the <tt>navit.xml</tt>. See [[Navit]]-manual for details. You can find the <tt>navit.xml</tt> at:
  # /usr/share/navit/navit.xml
Create the folder <tt>.navit</tt> in the home directory on your FR and copy <tt>navit.xml</tt> to directory:
  # cd ~
  # mkdir .navit
  # cp /usr/share/navit/navit.xml .navit/navit.xml 
If you have the editor <tt>vim</tt> installed then edit the file at line 376 approx.:
  # vim ~/.navit/navit.xml
If you have downloaded the file <tt>germany.bin</tt> your mapset-tags should look like this:
<pre>
 <!-- Mapset template for openstreetmaps -->
 <mapset enabled="yes">
   <map type="binfile" enabled="yes" data="/media/card/MapsNavit/germany.bin"/>
 </mapset>
</pre>
{{Note|Both MAPSET and MAP have to be  enabled to work with the OSM-map in Navit.}}

===== Starting Navit =====
[[Image:QX_Navit_Launch.png|150px|thumb|Launch Navit in QX]]
* Open Main Menu by clicking on the green Q-Topia "Q"-Box.
* Open Applications (4 Boxes, red, yellow, green, blue)
* Scroll down and open [[QX]]
* Select Navit
* Click on the white Paper Icon on the bottom left to open the context menu of the [[QX]] application.
* Select Launch to start Navit.
* Exit with AUX-Button without stopping navit

=== VoIP ===
==== Integrated VoIP-Client ====
QtMoko has an integrated VoIP-Client, which would be perfect to use a SIP-Account to do free of charge mobile communication world wide. But at the moment the integrated VoIP-Client does not work, due to some strange problems in Version v24 (see [http://qtmoko.org/wiki/Main_Page QtMoko-Wiki] for current status of development).

[http://wiki.openmoko.org/wiki/Android_usage Android on Freerunner] has an integrated SIP-Client [[SipDroid]] that has strange audio problems as well (see http://sipdroid.org ). Maybe there is an underlying problem the
* the integrated VoIP-Client of QtMoko and
* [http://www.google.de/search?q=Sipdroid+Audio+Problem SIPdroid Audio] on [[Android]]
have in common.

==== Twinkle/Linphone ====
See [[Twinkle]] for further details or the official Website [http://www.twinklephone.com/ http://www.twinklephone.com/] 
<pre>
  apt-get install twinkle
</pre>
For installation of Twinkle your need 105MB. It would be necessary to install QtMoko on MircoSD.
{{Error| Installation of Twinkle with apt-get stops with errors (Test: 19.11.2010)}}
You can use [[Linphone]] ([http://www.linphone.org http://www.linphone.org]) instead, which will use 83MB.
<pre>
  apt-get install linphone
</pre>
See additional information on the OpenMoko-[[Linphone]] page.

== PIM Storage and Import ==
As visible on [http://qtmoko.org/wiki/Main_Page QtMoko-Wiki] Syncing Calendar data is not working at the moment. Some work has be done (Thanks to [http://mossroy.free.fr/ics2qtcal/ mossroy]), so that iCal-Files (ics) can be imported to your QtMoko calendar via a perlscript [http://wiki.openmoko.org/wiki/PIM_Storage#Import.2FExport_of_Calendar_Data_for_PIM-Storage ics2qtcal.pl]. Choose the current version from [http://mossroy.free.fr/ics2qtcal/ http://mossroy.free.fr/ics2qtcal/]. 

The main job of the scripts are:
# deleting old appointments in Qt-Calendar
# importing the an ics-file into the Qt-Calendar. The ics-File can be an exported  calendar in an iCal File (e.g. <tt>mycalendar.ics</tt>) which is transfered to your Neo.
# import <tt>mycalendar.ics</tt> with scripts into your SQLite Database.



===Install Script===
The following installation script 
* downloads the scripts and stores them into the directory <tt>/usr/local/bin/</tt>,
* makes them executable,
* creates a file <tt>/usr/share/applications/syncal.desktop</tt> for [[QX]] and
* creates a file <tt>/usr/local/bin/syncal</tt> for starting the synchronisation. Please edit the file with your username and password for accessing the groupware server you stored the ics-file.
<pre>
#!/bin/sh
# INSTALL SCRIPT FOR ICS2QTCAL
# ----------------------------
# Edit the following variable for a new versions
vURL="http://mossroy.free.fr/ics2qtcal/v0.4"
cd /usr/local/bin
wget "$vURL/ics2qtcal.pl"
wget "$vURL/ics2qtcal.sh"
wget "$vURL/deleteqtcalappointments.pl"
wget "$vURL/install_dependencies.sh"
wget "$vURL/remotesync4ics2openmoko.sh"
wget "$vURL/sync4ics2openmoko.sh"
sh ./install_dependencies.sh
rm ./install_dependencies.sh
chmod u+x *.sh
# insert synccal in QX-favourites and make backup of old favourites.conf
cd /opt/qtmoko/etc/qx/
cp ./favourites.conf ./favourites.conf.$$
cat ./favourites.conf.$$ | sed 's/list=/list=synccal, /g' | favourites.conf
echo "generate synccal.desktop"
vSyncCal="/usr/share/applications/synccal.desktop"
echo "[Desktop Entry]" > $vSyncCal
echo "Version=1.0" >> $vSyncCal
echo "Name=SyncCal" >> $vSyncCal
echo "Name[de]=SyncCal" >> $vSyncCal
echo "Name[fr]=SyncCal" >> $vSyncCal
echo "Comment=Syncing remote and local ics-file into Qt-Calendar." >> $vSyncCal
echo "Comment[de]=Script fuer den Import von ics-Dateien" >> $vSyncCal
echo "Exec=synccal" >> $vSyncCal
echo "Icon=synccal" >> $vSyncCal
echo "StartupNotify=true" >> $vSyncCal
echo "Terminal=false" >> $vSyncCal
echo "Type=Application" >> $vSyncCal
echo "Categories=GTK;Utility;Dialog;" >> $vSyncCal
echo "GenericName=SyncCal" >> $vSyncCal
echo "GenericName[de]=SyncCal" >> $vSyncCal
# Done synccal.desktop ----------
echo "Generate syncal"
vSyncCal="/usr/local/bin/syncal"
echo "#!/bin/sh" > $vSyncCal
echo "vUser=\"myusername\"" >> $vSyncCal
echo "vPWD=\"mypassword\"" >> $vSyncCal
echo "vICS1=\"https://www.example.org/caldav/calendar1.ics\"" >> $vSyncCal
echo "vICS2=\"https://www.example.org/caldav/calendar2.ics\"" >> $vSyncCal
echo "remotesync4ics2openmoko.sh -u $vUser -p $vPWD $vICSl $vICS2" >> $vSyncCal
chmod u+x $vSyncCal
</pre>
You need to add a profile in [[QX]]-favourites and a desktop-definition file in 
  /usr/share/applications/syncal.desktop  
because without the desktop-definition file an application will not be visible in [[QX]]-favourites.

==Favorites==
[[Image:deletefavorites.png|200px|thumb|Delete Icons from Favorites in Task Manager]]

===QtMoko Favorites===
====Add to Favorites====
You might prefer some applications and you use them more frequent. Then you might want them to add to your '''favorites'''. 
* Go the application list and select (highlight, but do not start) application. 
* click on the paper icon on bottom left and select ''Add to Favorite''. 
Then you will have this Icon in the favorites menu (yellow star in main menu) too.

====Delete from Favorites====
A bit more difficult (i.e. more hidden in QtMoko) is to delete icons from the favorites menu.
* start '''Task Manager''' in main menu by pressing the AUX-Button on you freerunner.
* You will see the list of favorites
* Select the application your want to remove from favorites (keep pressed for a few seconds on the application until the context menu appear. The icon you want to delete should not be selected before.
* select '''delete''' from context menu and the icon disappears from favorites.

=== Adding QX Favourites ===
For adding Favourites in the X-Server environment see [[QX]].

== Error Handling and Workarounds ==
During the installations above, the following problem occured:
=== Xdialog Problem with Gdk-WARNING===
When encouter a GdK-Warning using Xdialog in scripts you can remove the warning with [http://www.linuxhowtos.org/System/sed_tutorial.htm sed].

  sed 's/Gdk-WARNING ... locale not supported by C library//g

This warning is part of the return string of an inputbox in xdialog.
{{Note|This application sed is a workaround. The best solution is a modifacition that removes the GdK-warning itself.}}
Embedded in a script [http://www.grymoire.com/Unix/Sed.html sed] will remove the warning from the input string. A example script (modified from [http://xdialog.free.fr http://xdialog.free.fr]) will work like this:
<pre>
  #!/bin/sh
 
  Xdialog --title "INPUT BOX" \
     --inputbox "Enter URL:" 18 45 \
     "http://www123.Example-Test.com" 2> /tmp/inputbox.tmp.$$
  
  retval=$?
  input=`cat /tmp/inputbox.tmp.$$`
  rm -f /tmp/inputbox.tmp.$$
  
  
  input=`echo $input | sed 's/Gdk-WARNING ... locale not supported by C library//g'`
  # remove invalid character from URL
  input=`echo $input | sed 's/[^a-zA-Z1-9\/:\. \-]//g'`
  
  case $retval in
    0)
      echo "Input string is '$input'";;
    1)
      echo "Cancel pressed.";;
    255)
      echo "Box closed.";;
  esac
</pre>
To test this script on your freerunner, you have to start it from the terminal in [[QX]]. Source of the xdialog script is used from [http://xdialog.free.fr http://xdialog.free.fr].

=== Apt-Get Problem jffs2 ===
'''[Apt-Get] (jffs2)  Couldn't make mmap ...:''' (solved with the following [http://lists.laiskiainen.org/pipermail/apt-rpm-laiskiainen.org/2008-November/000884.html workaround])
If that happens regularly, create two scripts <tt>apt-start</tt> and <tt>apt-stop</tt>. These scripts are used before and after <tt>apt-get</tt> use. 
==== Create an APT-START Script ====
* start <tt>vi</tt> for the script <tt>apt-start</tt>
  # vi /bin/apt-start 
* press "I" for insert and enter the following code:
  #!/bin/sh
  mount -t tmpfs none /var/cache/apt
  mkdir -p /var/cache/apt/archives/partial
  apt-get update
  echo "apt-get can now be used"
  echo "stop with apt-stop"
* press ESC and then '''":w"'''
* press '''":q"''' for quit.
* make the script executable with chmod:
   chmod u+x /bin/apt-start

==== Create an APT-STOP Script ====
* start <tt>vi</tt> for the script <tt>apt-stop</tt>.
  # vi /bin/apt-start 
* press "I" for insert and enter the following code:
  #!/bin/sh
  umount /var/cache/apt
  echo "Now old settings for apt-get are restored"
* press ESC and then '''":w"'''
* press ":q" for quit.
* make the script executable with chmod:
   chmod u+x /bin/apt-stop

==== Usage of Scripts ====
If you to install software use the scripts before and after apt-get call:
  apt-start
  apt-get install mysoftware
  apt-stop
Replace <tt>mysoftware</tt> with the package you want to install e.g. <tt>linphone</tt>.

== Links ==
* [http://qtmoko.org/wiki/Main_Page QtMoko Wiki]
* [http://sourceforge.net/projects/qtmoko/files/ QtMoko Download]


[[Category:Qt Moko| ]]
