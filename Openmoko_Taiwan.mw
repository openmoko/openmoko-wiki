==訓練課程-2008/08/09-新竹==

Openmoko 一直致力於推動台灣地區的手機軟體教育計畫，九十七學年度開始 Openmoko 將與台灣地區多所學校合作，將 Openmoko 平臺以及 Neo FreeRunner 導入學校課程。負責台灣地區市場行銷的 Jollen Chen 於 8/9 (六) 至清華大學自強基金會進行 Openmoko 體驗式的教育訓練，此訓練使用了即將釋出給學校使用的 Openmoko 教材。現場帶領 40 名業界朋友，實際體驗 Free Your Phone 的理念。現場反應相當熱絡。在這裡提供當天進行訓練的教材，對 Neo FreeRunner 有興趣的朋友請不吝指教。

* 下載講義：[http://people.openmoko.org/jollen/Om-training-Om2007.2-dev-v1.0-rc2.pdf Om-training-Om2007.2-dev-v1.0-rc2.pdf]

===課程簡介===

Openmoko 是全世界第一個開放式的行動通訊平臺，也是一個 open source 專案。Openmoko 於 2008 年 7 月 4 日正式推出第二代手機產品 Neo FreeRunner 後，受到極大的迴嚮與討論，西方媒體更是不斷報導。為了讓大家能更深入了解 Openmoko 專案的內容、Openmoko 技術平臺，以及 open mobile platform 的商業模式，特別邀請 Openmoko 大中華區行銷部的負責人為大家規劃實用的入門課程。本課程涵蓋 Openmoko 技術架構、開發環境建立、開放手機平臺趨勢、商業模式以及行銷策略，內容完整精彩。

===課程對象===

對 Openmoko 技術架構、開發環境建立、開放手機平臺趨勢、商業模式以及行銷策略有興趣的朋友。

===課程大綱===

*Openmoko 開源計畫與社群
*開放手機平臺大革命
*Openmoko software stack: Om 2007.2、ASU、FSO
*開放手機的商業模式: 以 Openmoko 為例
*Mobile 2.0 行銷策略與 Openmoko 做法
*Neo FreeRunner 介紹與開發環境建立 [http://people.openmoko.org/jollen/Om-training-Om2007.2-dev-v1.0-rc2.pdf Om-training-Om2007.2-dev-v1.0-rc2.pdf]
*撰寫第一個 Neo FreeRunner 應用程式 [http://people.openmoko.org/jollen/Om-training-Om2007.2-dev-v1.0-rc2.pdf Om-training-Om2007.2-dev-v1.0-rc2.pdf]
*會後討論

==Richard Stallman 台灣區演講==

Openmoko 大中華區行銷部安排自由軟體基金會創辦人 Richard Stallman 來台演講。時間如下：

* 台北場：5/14 (Wed.) 於淡江大學，台北。時間：10:00~13:00。
* 新竹場：5/15 (Thr.) 於清華大學，新竹。時間：19:00~22:00。

{| cellspacing="5" cellpadding="0" style="padding: 2%; margin:0em 0em 1em 0em; border:1px solid #c8bbbf; background:#ECE5B6; width:100%" 
| 一睹大師風采！<br /><br />Openmoko、清華大學電通中心與清華大學資工系一起邀請您來新竹聽演講！<br />
Openmoko與淡江大學資工系一起邀請您來台北聽演講！
|}
Richard Stallman 是 GNU Compiler Collection (GCC) 與 GNU Debugger (GDB) 的原始作者與開發者，GCC 與 GDB 是很廣為使用且有名的自由軟體。Richard 於 1984 年發動 GNU operating system 發展計畫，並在 1985 年成立 Free Software Foundation（自由軟體基金會），接著在 1989 年寫出第一個 GPL （GNU General Public License）條款。GPL 至今已是最重要的自由軟體授權條款，至今有超過 60% 的自由軟體都是採取 GPL 授權規範。因應商業化需要，GPLv3 在經過長時間的討論後，也於 2007 年 6 月正式釋出。

Richard 將於 5 月 12 來台，並親自發表演說。Richard 本次來台將有二場公開演講，首場時間是 5/14(Wed.) 於淡江大學舉辦，第二場將在 5/15(Thr.) 於清華大學舉辦。台北場的講題為「The Danger of Software Patents」，Richard 將保留 1 個小時以上的時間與大家進行論壇討論。歡迎事先準備好您的問題來請益自由軟體之父。清大場的講題為「The Free Software Movement and the GNU/Linux Operating System」，Richard 將講述他的自由軟體運動歷程，同時也會保留 1 個小時以上的時間與大家進行討論。

=== 台北場：5/14(Wed.) 淡江大學 ===

*講題：The Danger of Software Patents
*時間：10:00~13:00
*地點：淡江大學 鐘靈中正堂
*摘要：
    Richard Stallman will explain how software patents obstruct
    software development.  Software patents are patents that cover
    software ideas.  They restrict the development of software, so
    that every design decision brings a risk of getting sued.  Patents
    in other fields restrict factories, but software patents restrict
    every computer user.  Economic research shows that they even
    retard progress.

=== 新竹場：5/15(Thr.) 清華大學 ===

* 講題：The Free Software Movement and the GNU/Linux Operating System 
* 時間：19:00~22:00
* 地點：清華大學　大禮堂
* 摘要：
    Richard Stallman will speak about the goals and philosophy of the
    Free Software Movement, and the status and history of the GNU
    operating system, which in combination with the kernel Linux is
    now used by tens of millions of users world-wide.

=== 交通資訊 ===

清華大學
*國道一號（中山高）: 約95公里下新竹交流道，沿光復路往新竹市區方向直走約一公里，即可到達清大正門。
*火車：新竹火車站搭1路、2路及1甲公車。沿SOGO百貨與金石堂中間小路，過SOGO一公尺有公車站牌。
*高鐵：高鐵接駁車可直達清大正門。

淡江大學
*因校園車位相當有限，故不建議開車前往。
*捷運：淡水線至淡水站（終點）下載，可轉搭指南客運「淡水捷運站至淡江大學」接駁車。
*公車：於台北市北門站搭指南客運「北門-承德路-淡江大學」線，可直達終點站淡江大學。（費用：三段票，45元。）

=== 活動訊息 ===

標題：自由軟體基金會創辦人 Richard Stallman 來台演講

自由軟體基金會創辦人、同時也是知名軟體 GNU Compiler Collection (GCC) 與 GNU Debugger (GDB) 的原始作者與開發者 Richard Stallman 將於 5 月 12 日來台並發表演說。Richard 於 1984 年發動 GNU operating system 發展計畫，並在 1985 年成立 Free Software Foundation（自由軟體基金會），接著在 1989 年寫出第一個 GPL （GNU General Public License）條款。GPL 至今已是最重要的自由軟體授權條款，至今有超過 60% 的自由軟體都是採取 GPL 授權規範。因應商業化需要，GPLv3 在經過長時間的討論後，也於 2007 年 6 月正式釋出，並受到產業界高度重視與討論。

睽違三年，Richard Stallman 再度來台，將在台北與新竹各發表一場公開演說。Richard 提到「希望能讓大家了解 GNU operating system，以及自由軟體（free software）的真正意義。」除了發表與自由軟體相關之演說外，Richard Stallman 也會和現場聽眾進行公開討論，這是一個向 Richard 當面請益的好機會。

Richard 本次來台預計將發表與「自由軟體運動」以及「軟體專利威脅」有關之演說。所有活動都是免費參加，Richard 同時也非常想聽到來自各界對自由軟體的聲音。詳細活動資訊請參閱 Openmoko Wiki 活動頁面。

* 活動頁面：http://wiki.openmoko.org/wiki/Richard_Stallman/zh_tw

* 活動連絡人：Jollen Chen <jollen@openmoko.org> / Chelsea Wei <chelsea@openmoko.com>

=== 新聞稿 ===

新聞稿(Press Release)-Openmoko-自由軟體基金會創辦人Richard Stallman來台

台北--2008年5月8日 -- 自由軟體基金會創辦人、同時也是知名軟體GNU Compiler Collection (GCC) 與GNU Debugger (GDB)的原始作者與開發者Richard Stallman 將於5月12日來台。睽違三年，自由軟體運動精神領袖Richard Stallman再度來台，並將分別於5月14日上午10點於淡江大學鍾靈中正堂，以及5月15晚間7點於清華大學大禮堂發表公開演說。

負責接待的 Openmoko提到「Richard希望能讓大家了解GNU operating system，以及自由軟體 （free software）的真正意義。」Richard Stallman於1984年發起GNU operating system發展計畫，並在1985年成立 Free Software Foundation（自由軟體基金會），接著在1989年寫出第一個GPL （GNU General Public License）條款。GPL是非常重要的自由軟體授權條款，至 今有超過 60% 的自由軟體都是採取GPL授權規範。因應商業化需要，GPL第三版在 經過長時間的討論後，於2007年6月正式釋出，受到產業界高度重視與討論。Richard 本次來台預計將發表與「自由軟體運動」以及「軟體專利威脅」有關之演 說，Richard Stallman這次也將說明GPL第三版新增有關軟體專利條款的部份。

過去大家經常誤解Free Software（自由軟體）與Open Source（開放源碼）的意 義，事實上這是完全不一樣的事情。Free Software不等於Open Source，Richard Stallman這次來台也特別希望能讓說明這二者的關係。Richard 自已也做了很清楚 簡單的解釋，他說「Open Source只是Free Software Movement的一個口號，這是 完全不同的二件事情，Open Source並不是自由軟體運動的代表。」

Richard Stallman提到，大家所習慣的「Linux」應該被稱為「GNU/Linux」或是 「GNU operating system」。GNU operating system 計畫於1984年由Richard Stallman發起，此計畫的用意是發展一套保障使用者使用自由的作業系統，當GNU operating system大多數主要的軟體都已經開發完成時，唯獨最重要的作業系統核 心「Hurd」一直未能有進展。此時，Linux核心發展計畫堀起，並取代 Hurd核心成 為GNU operating system的作業系統核心，但事實上，整套作業系統仍然包含許多 GNU軟體。

Linux並不能單獨使用，Linux核心必須搭配許多GNU operating system計畫下的軟 體，才能運作。因此Richard希望向大家說明，Linux只是一個作業系統核心，整個 作業系統環境應稱為GNU/Linux，或是GNU operating system。

媒體連絡窗口:

Chelsea Wei 魏嘉瑩<br />
Openmoko Inc.<br />
+886 2 8751 5071 Ext. 2866<br />
chelsea@openmoko.com

<p>###</p>

=== Press Coverage ===

* Linux 台灣, http://www.linux.org.tw/node/548
* 科技日報, http://www.hope.com.tw/News/ShowNews.asp?O=200805051647268304
* 清華公佈欄, http://infonet.et.nthu.edu.tw/bbs_p1.php?op=showContent&id=724&sub1=Academic
* Jollen's Blog, http://www.jollen.org/blog/2008/05/richard_stallman_speech_taiwan.html
* DigitalWall, http://www.digitalwall.com/scripts/displaypr.asp?UID=10028
* OpenFoundry, http://www.openfoundry.org/component/option,com_content/Itemid,296/id,1550/lang,tw/task,view/
* COdE fr3@K ,http://fsfoundry.org/codefreak/2008/05/04/richard-stallman-talks-in-taiwan/
* Andrew Chang, http://andrewtw.wordpress.com/2008/05/03/richard_stallman/
* tw.bbs.comp.linux, http://groups.google.com.tw/group/tw.bbs.comp.linux/browse_thread/thread/b62d2cf224cc4030
* 大華技術學院資訊工程學系, http://www.csie.thit.edu.tw/announce/newDsp.asp?id=353
* 交通大學資訊工程學系, http://www.cs.nctu.edu.tw/cht/announcements/post_t.php?news_sn=1089&class=5
* Techlife科技生活, http://www.techlife.com.tw/01News/01news.asp?NID=33041

==Digitimes 名人講堂-2008/02/22==

名人講堂：OpenMoko總裁Sean Moss-Pultz
開放式手機時代來臨 Mobile 2.0美夢不遠
2008/02/22 - 觀點 - 沈勤譽／電子時報 

手機早已成為最普及的消費性電子產品，現在每年有12億支的市場規模，遠遠超過PC的2億~3億台，而且手機是隨身攜帶的產品，是非常個人化的東西，你可以隨時更換自己手機的鈴聲、桌布甚至外殼，凸顯個人化的特色，這是其他產品無法比擬的。

儘管手機整合的功能愈來愈豐富，但多數使用者僅用到其中很小部分功能，多數功能都不是自己需要的，就算市面上同時有200款手機可供選擇，絕大多數使用者並無法從中挑選出真正符合自己需求的產品，因為手機出廠時功能就已固定了。

每當我們需要特定的新功能時，就必須重買1支新手機，雖然多數人都已習慣這樣的遊戲規則，但從技術面來看，這是相當不可思議的事情，有愈來愈多的人在問：為什麼我不能客製化或自由修改我的手機？如果有一個開放的手機平台，能讓我們隨心所欲的客製化手機軟體，或是自由更換布景主題，手機將有革命性的變化。

Web2.0方興未艾 Mobile 2.0蠢蠢欲動

就如網路走向Web2.0的浪潮一樣，相信手機終究也會走向Mobile2.0的架構，以使用者為導向，變成由使用者自行客製化、或為使用者客製化的手機生產模式，只要是完全開放的手機平台，就可以提供修改的自由、樂趣與彈性。

開放式手機的真正力量，並不只是來自於這些裝置本身，更重要的是與使用者進行互動，當手機硬體不再被硬體裝置限制時，硬體裝置的重要性將逐漸降低，軟體開發者可以在相同的硬體裝置上修改或增加軟體，而不需要購買新手機。

以往的手機軟體都是封閉式的，開發者無法取得軟體開發套件(SDK)及原始碼，2007年蘋果推出的iPhone，帶來新的手機使用概念，而Google推出的Android平台，則帶來開放式手機平台的曙光，對於開放式手機時代的來臨，都有推波助瀾的效果。

OpenMoko是全球第1個推出以Linux為基礎的開放式手機平台的公司，我們不僅提供所有的開放原始碼下載，並在2007年推出第1個實體產品Neo 1973，透過網路銷售給開發商，預計下半年就會與電信營運商合作，並銷售給一般大眾，而這些開發商開發出來的應用軟體，也都可開放給所有的大眾下載使用，就如現在的Linux電腦一樣。

Linux不等於開放平台 標準化未必成功

儘管許多手機廠商也都有開發Linux手機，甚至摩托羅拉(Motorola)等廠商還組成類似LiMo基金會這樣的組織，而Google Android平台也是採用Linux系統，但從策略上來看，他們並非是真正的開放式手機平台，充其量只是為會員建構商機罷了。

有人認為Linux手機必須透過這些組織進行標準化，才能讓電信業者快速導入各種行動數據服務，不過，包括iPhone、黑莓機(Blackberry)甚至諾基亞的Ovi，其實都是採用自家的系統，並不是走標準化的方向，這些產品或服務之所以能夠成功，標準化並非充分條件。

有些手機廠商每年推出數10款的手機，有些廠商每年僅推出幾款產品，但都相當令人驚豔，任天堂、蘋果(Apple)或是RIM這些廠商，一心想開發出偉大的產品，使用誰家的作業系統，到底有沒有標準化，反倒不是那麼重要的事情。

Linux 開放社群有一個特色，就是大家是先發展好的軟體核心，再來考慮標準化的工作，而不是像有些人先將規格標準化，再按照這些標準去開發軟體，這是本質上的截然不同；我們所做的開放手機平台，也是以做出好產品為主要目標，而不是先加入LiMo基金會或開放手機聯盟(Open Handset Alliance)這些組織尋找商機。

我們無意參與這些標準化的組織，因為我們的主要目標並非是打入電信業者供應鏈，我們現在透過網路直接銷售給開發者，以歐美客戶為主，全球光是這些軟體開發者就有600萬人，我們可以在這個利基市場找到一席之地，未來仍有機會慢慢擴展到大眾市場。

台灣廠商重硬輕軟 自主空間將受限

台灣手機廠商幾乎清一色採用微軟(Microsoft)Windows Mobile平台，如此一來不僅要支付一筆可觀的授權費用，且缺乏軟體的自主性；部分廠商雖開發Linux平台手機，但多數均與軟體業者合作核心程式 (kernel)，然後自行開發中介軟體(middleware)及應用層，這樣仍無法完全掌握所有的軟體。

其實台灣廠商在硬體方面的實力相當強，但最大的問題在於重硬輕軟，完全採用別人的軟體平台，就無法控制軟體；不管是微軟或Google，他們都希望自家的平台給愈多人用愈好，不是只想跟宏達電或少數幾家台灣廠商合作而已，宏達電在硬體技術的能力大家有目共睹，不過在軟體及行銷方面很有許多挑戰，這是台灣手機廠商普遍面臨的問題。

我們透過開放式手機平台，讓全球所有開發者都變成我們的研發人員，不僅減少人力成本，也讓使用者得以開發自己真正需要的功能；目前我們已經累積了1,500個軟體package，像是1個個的模組，未來可以推出「空機」，僅有基本的撥話功能，這些模組都讓使用者自行選擇免費下載，打造完全屬於自己的客製化手機；也希望這種整合軟體、硬體及製造的開放式手機，能為台灣手機產業走出一條創新的路。

(Sean Moss-Pultz口述、沈勤譽整理)。
Moss-Pultz畢業於加州大學物理學系，長期在大眾集團服務，曾在集團內眾銓通訊、大眾電腦服務，曾任大眾電腦行動通訊部門主管，負責主導Linux開放手機平台的專案，後來該部門獨立成我本墨客(OpenMoko)公司，由他擔任總裁，現有員工約80人

==校園巡迴九十六學年度==

===新聞稿===

Openmoko與各大名校聯手推動行動通訊教育課程 2008/02/14
開放源碼手機廠進駐校園培養工程師

2008年2月14日---世界開放源碼手機軟體大廠Openmoko表示，從九十六學年度下學期開始，即將與台灣各大資訊通訊相關學系、科技大學共同展開一系列的巡迴開放源碼課程，讓學生能夠在學校進行「手機軟體」的研究計畫。Openmoko此舉為業界的一個先驅挑戰，選擇在台灣進行Openmoko平台的人才培育，作為長期開發該產業資源的根基。 配合學校的教育課程外，同時Openmoko也將提供暑期實習機會給學生，並預計吸收優秀的人才在畢業後進入Openmoko工作。  

Openmoko總經理Mr. Sean Moss-Puitz強調，除了致力發展Linux作業系統的行動通訊平台，公司並以推動free and open source software (FOSS)專案為主要的經營策略。他更指出，Openmoko看好台灣開放手機市場的發展前景，長期經營社群關係，並將大多數的研發資源投資在台灣，所以在台北內湖科學園區建立起全世界第一個 Openmoko開源手機體驗實驗室，提供開發者以及社群人員一個更為開放的討論空間。

Openmoko此次校園演講結合企業實務經驗與學術討論，帶給國內多所大專院校資訊相關科系學生豐富精彩的開放Linux平台與行動通訊觀念。此次校園巡迴演講將鎖定開放手機的未來為主題，並且融合多項時下熱門話題，包含智慧型手機、行動2.0時代、作業系統技術等多項領域，除此之外，並將於現場提供Openmoko最新款產品 Neo FreeRunner讓學生親身體驗，一窺未來手機的風貌；從創意思考、技術討論，到產品研發等完整流程，讓學生可以一次獲取所有最新資訊。

Openmoko大中華區行銷部 Jollen Chen 指出，Openmoko對於能夠和學生面對面交流非常開心，也格外重視此次校園演講計畫，期望能透過學生之間的交流，尋找對此研究領域專精的年輕學子，也希望透過學生的另類思考帶給Openmoko更多進步空間。

此次校園巡迴演講將於2月22日正式起跑，首站即為國內首屈一指的指標大學國立成功大學，陸續將於2月27日於國立交通大學、3月3日於中原大學、3月18日於逢甲大學、3月26日於元智大學、3月28日於國立東華大學等多所大專院校正式登場。

===參與學校===

Openmoko 因為開放源碼的特性，因此很適合教學與研究場合。Openmoko 在2月份到6月份之間，於以下以學校進行教育課程。

* 成功大學：2/22（五），02:30PM~04:00PM，資訊工程學系 4263教室（資工講座）
* 交通大學：2/27（三），01:30PM~03:30PM
* 中原大學：3/03（一），02:00PM~04:00PM，電學105講堂
* 元智大學：3/26（三），07:00PM~09:00PM
* 東華大學：3/28（五），02:00PM~04:00PM
* 昆山大學：4/07（一），09:00AM~12:00PM
* 中原大學：4/09（三），06:10PM~07:40PM
* 淡江大學（研究所）：4/10(四)，02:10PM~04:00PM
* 淡江大學（大學部）：4/18(四)，03:10PM~05:00PM
* 中正大學：4/28(一），02:00PM~04:00PM

==Openlab Opening-2007-11-17==

Openlab 的成立目的是為了與台灣地區的社群與學校進行互動，大中華區行銷部特別規劃了開幕活動。

* 活動時間 ：2007-11-17 (Sat.), 01:30PM~04:35PM
* 活動地點：台北市內湖區陽光街３００號（大眾電腦大樓）７樓


===活動表===

{| border="1" 
|+ 活動時間表
|-
! width="120" | 時間 !! width="150"", align="center" | OpenLab Talks（社群活動）<br>地點: OpenLab !! width="120" | 時間 !! width="150", align="center" | OpenLab Seminar（額滿）<br>地點: Jollen's Training Center
|-
| 01:30PM~01:40PM || OpenLab 實驗室理念與使用說明 || 01:30PM~03:00PM || Linux 驅動程式架構　 
|-
| 01:40PM~02:00PM || 如何取得 Openmoko 官方協助與支援 || 　 || Linux 驅動程式架構　 
|-
| 02:00PM~03:00PM　|| 與 Openmoko 自由對話 || 　 || Linux 驅動程式架構　 
|-
| 03:00PM~03:30PM || Tea & Talks & Neo 體驗 || 　 || 　 
|-
| 03:30PM~04:00PM || 現場立即取得 Openmoko 官方協助 || 03:30PM~04:00PM || Openmoko 入門與開發環境安裝教學 (1/2)　 
|-
| 04:00PM~04:30PM || Openmoko Education Program & Training 規劃 || 04:00PM~04:30PM || Openmoko 入門與開發環境安裝教學 (2/2)
|-
| 04:30PM~04:35PM || Openmoko 教育訓練免費講義發放（限量）　 || 　 || 　 
|-
|}

===公關稿===

Openmoko是全世界第一個 100% 開放源碼（open source）的 Linux 手機軟體平臺。Openmoko 的 project leader, Mr. Sean Moss-Pultz, 於FIC（大眾電腦，臺灣）內部培育這項計畫，並於二零零六年十一月正式對外公開推出。Openmoko, Inc.（我本墨客股份有限公司）也於二零零七年十月二十三日正式成立，很難想像，這個全球知名的開放源碼 Linux 手機專案的研發總部就位於台灣台北市內湖區。

OpenLab 要公開了。為了讓台灣的朋友們，都能近距離與這個全球知名的 open source 專案接觸，Openmoko, Inc. 特別設立了「OpenLab」，讓社群朋友與學校都能到現場與 Openmoko 進行互動，或是學習 Linux 手機技術。 

發佈於 2007 年的 Openmoko 開放源碼專案研發總部設在台灣，為了與台灣的 open source 社群互動並回饋社群，Openmoko 特別贊助成立了 OpenLab。這是一個實體的開放空間，任何人都可以來到 OpenLab 實驗室，與 Openmoko 開發者對話、了解如何參與 Openmoko 專案、與社群朋友聊天聚會。OpenLab 歡迎社群朋友自由使用，也能將這裡當做技術交流的固定聚會場所。

當然，Openmoko 贊助成立 OpenLab 的目的也希望能在台灣推廣 FOSS（Free & Open Source Software）的精神。OpenLab 將在台北時間 11/17(六) 正式開幕並運轉。在此邀請台灣的社群朋友來參與 Openmoko OpenLab 的開幕活動。活動報名網址：http://wiki.openmoko.org/wiki/Openmoko_OpenLab_Opening/zh_tw

{{Languages|Openmoko Taiwan}}
