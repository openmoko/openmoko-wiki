
{{Languages|OpenEmbedded}}

[[Openmoko]], 是用OpenEmbedded构建的。OpenEmbedded将做到：

* 为多个嵌入式目标环境生成（交叉编译）软件包。
* 处理不同的硬件体系结构，提供多个版本来支持这些不同的体系结构。 

更多的信息请查阅网站 [http://www.openembedded.org/ Open Embedded]。

== 使用OpenEmbedded建立Openmoko套件 ==

请注意，如果你是一个程序开发人员，你可能不会想要使用OpenEmbedded建立Openmoko套件。若是这种情况，你最好是使用你预建的[[Toolchain]]。建立Openmoko套件是需要花费时间、cpu及磁盘耗用，所以，若你是系统整合的人员，或者是想要客制化你的Openmoko套件，你才需要进行这个工作。

[[MokoMakefile]]，是简化建立OpenEmbedded的设备。若你是aformentioned 系统整合人员/套件客制化人员的话，我们强烈的建议你直接使用BitBake及OpenEmbedded 。

=== OpenEmbedded mirror ===
在OpenEmbedded中正式的Openmoko mirror可以在[[MonotoneServer]]上找到。如果你还没有monotone database，你可以自 [http://downloads.openmoko.org/OE/snapshots/OE.mtn.bz2 snapshot database]下载，并且解开它：

 cd /local/pkg/oe
 wget http://downloads.openmoko.org/OE/snapshots/OE.mtn.bz2
 bzip2 -d OE.mtn.bz2

这比使用monotone 从我们的mirror中取回启始的数据库快速。接着，更新你的目录，虽然它可能应该从 monotone server进行(注意，它只是一个monotone server，并不包含web)：

 mtn --db=/local/pkg/oe/OE.mtn pull
 mtn update

=== Upstream Source tarballs ===

当bitbake建立了特定的OE套件时，它会从网络上下载upstream 项目的原始程序代码(如 Linux kernel)及 patches。在下载了原始码之后，bitbake 会套用patche文件到目录中，这些patche有的是从网络上下载下来的，或者是包含在OpenEmbemdded metadata 储存地址中。这些 unpatched source tarballs 可以在http://downloads.openmoko.org/sources/ 这个地址下载。

{{todo|finish article}}
[[Category:Software ]]
[[Category:Application Developer]]
[[Category:Openmoko]]
