= Neo1973 - Seite =

== Namensauflösung ==

Standardmäßig hat das Neo1973 eine Netzwerkschnittstelle usb0, die mit einem im Kernel einkompilierten (g_ether) Ethernet Dadget arbeitet.

Wenn Sie auf dem Neo voll qualifizierte Hostnamen im Internet erreichen wollen, müssen sie einen DNS-Server definieren. Dazu erstellen Sie die Datei /etc/resolv.conf, die mindestens diese Zeile enthält:

 nameserver xxx.xxx.xxx.xxx

z.B. nameserver 192.168.1.1

Danach können Sie auf dem Neo Ihre OpenMoko 2007.2 Pakete mit "ipkg update && ipkg upgrade" aktualisieren.

Ein besserer Ansatz ist ein symbolischer Link

 ln -s /var/run/resolv.conf /etc/resolv.conf


Danach erstellen Sie die datei /etc/network/if-up.d/08setupdns, die folgende Zeilen enthält:

 #!/bin/sh -e
 echo  nameserver 192.168.0.200 > /var/run/resolv.conf

Auf diese Weise wird diese Datei vom PPP-Paket korrekt behandelt, wenn eine Einwahl per GPRS stattfindet.


== Routing ==

Sie benötigen eine zusätzliche Route für die Verbindung ins Internet. Diese verbindung kann von Ihrem PC geroutet werden (siehe unten), wenn der PC das Standardrouting-Ziel ist. Sie erreichen dies durch das Hinzufügen von

 gateway 192.168.0.200

zu Ihrer /etc/network/interfaces im Abschnitt usb0.

= Desktop-Seite =

== Manuelle Methode ==

Nach dem Verbinden mit dem Gerät laden Sie das Modul usbnet und konfigurieren Sie die Schnittstelle usb0 (als root):
<pre>
ifconfig usb0 192.168.0.200 netmask 255.255.255.0
</pre>
Wenn Ihre eth0 Schnittstelle sich im selben 'Bereich' (z.B. 192.168.0.105) befinet, dann können Sie folgendes tun:
1. Neo anpingen:
 # ping -I usb0 192.168.0.202
2. Route zum Neo hinzufügen:
 # /sbin/route add -host 192.168.0.202/32 dev usb0
3. Einloggen auf dem Neo:
 # ssh root@192.168.0.202


Wenn Sie keine notwendigen Module zum Erzeugen von usb0 haben, stellen Sie sicher, dass folgende Kernel Optionen aktiviert sind:
* CONFIG_USB_USBNET
* CONFIG_USB_NET_CDCETHER
Beide Optionen sind unter Device Drivers -> USB support -> USB Network Adapters zu finden. Für weitere Informationen siehe [http://www.linux-usb.org/usbnet/ usbnet driver homepage].

== Automatische Methode ==

Die Information entnehmen sie dem [http://blog.haerwu.biz/2007/03/22/hotpluging-usbnet/ Hotplugging usbnet], geschickt von Marcin 'Hrw' Juszkiewicz.


=== Debian oder ähnliche ===
Editieren Sie /etc/network/interfaces wie folgt:
<pre>
allow-hotplug usb0
iface usb0 inet static
        address 192.168.0.200
        netmask 255.255.255.0
        network 192.168.0.0
        post-up iptables -A POSTROUTING -t nat -j MASQUERADE -s 192.168.0.0/24
        post-up echo 1 > /proc/sys/net/ipv4/ip_forward
        post-up iptables -P FORWARD ACCEPT
</pre>

=== Ubuntu (getestet mit Feisty und Gutsy) ===
Editieren Sie /etc/network/interfaces:
<pre>
auto usb0
iface usb0 inet static
        address 192.168.0.200
        netmask 255.255.255.0
        network 192.168.0.0
        up iptables -A POSTROUTING -t nat -j MASQUERADE -s 192.168.0.0/24 &
        up echo 1 > /proc/sys/net/ipv4/ip_forward &
        up iptables -P FORWARD ACCEPT &
        down iptables -D POSTROUTING -t nat -j MASQUERADE -s 192.168.0.0/24 &
</pre>

Wenn Sie das Kommando "echo 1 > /proc/..." manuell ausführen, könnte sudo nicht ausreichen, denn das Kommando sudo muss unter der Shell bash ausgeführt werden.

Ubuntu Fiesty und Gusty haben offenbahr einen Fehler, dass ifdown nicht ausgeführt wird, solange die Schnittstelle "unplugged" ist. Das bedeutet, dass es nur dann funktioniert, wenn das System neu gebootet wird.

Man kann die Datei /etc/udev/rules.d/85-ifupdown.rules patchen, indem man zwei Zeilen am Ende der Datei editiert:
<pre>
SUBSYSTEM=="net", DRIVERS=="?*", GOTO="net_start"
GOTO="net_end"

LABEL="net_start"

# Bring devices up and down only if they're marked auto.
# Use start-stop-daemon so we don't wait on dhcp
ACTION=="add",          RUN+="/sbin/start-stop-daemon --start --background --pidfile /var/run/network/bogus --startas /sbin/ifup -- --allow auto $env{INTERFACE}"

LABEL="net_end"

ACTION=="remove",       RUN+="/sbin/start-stop-daemon --start --background --pidfile /var/run/network/bogus --startas /sbin/ifdown -- --allow auto $env{INTERFACE}"
</pre>

Der Fehler besteht darun, dass LABEL="net_end" an falscher Position steht.





<span id="bottom"></span> 
{{Languages|USB Networking}}

[[Category:Hardware]]
[[Category:Implemented]]
