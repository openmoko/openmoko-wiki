= Introduction =

A toolchain is a set of tools that allows you to compile code. For OpenMoko, we have to differenciate the following use-cases:

* Developing a single application

For this, you should use a prebuilt toolchain from the OpenMoko project. Here you can find a recipe to get started with this toolchain leading you through a series of steps to compile a project and run it on your target device. You might have heard about [[OpenEmbedded]], however as an application programmer, you should '''not''' be using [[OpenEmbedded]].

* System Integration and customizing a distribution

For this task, you should use [[OpenEmbedded]] which builds its own cross compiler during the bootstrapping/build process. System Integration and customizing a distribution is out of scope of this page.

= Prerequisites = 

You should be reasonably familiar with Linux and its command line tools, have an x86-compatible computer with at least 1G of free disk space. You should have experience with compiling programs from source using your local compiler. The remainder of this document will also assume you have write access in your home directory (~) and <tt>/usr/local/</tt>. If this is not the case, please call your local administrator for help.

= Downloading and installing the toolchain =

The prebuilt toolchain can be downloaded from [[http://downloads.openmoko.org/toolchains downloads.openmoko.org]]:

 mkdir ~/sources
 cd ~/sources
 wget http://downloads.openmoko.org/toolchains/openmoko-x86_64-arm-linux-gnueabi-toolchain.tar.bz2

Next, you want to extract it on your filesystem. This toolchain is ''not'' relocatable, it needs to be installed into <tt>/usr/local/openmoko/</tt>:

 cd /
 tar xjvf ~/sources/openmoko-x86_64-arm-linux-gnueabi-toolchain.tar.bz2

The prebuilt toolchain is for x86_64 now.  You could build it on your own with OE:

 bitbake meta-toolchain-openmoko

Finally, everytime you want to use this toolchain, you need to alter some environment variables, so that your tools will be found. The toolchain provides a script to do that, so the only thing you need to do is to source it:

 source /usr/local/openmoko/arm/setup-env

= Using the toolchain to build a sample project =

First, download the sample project and extract it into your filesystem:

 cd ~/sources
 wget http://downloads.openmoko.org/development/openmoko-Sample-Project-20071130.tar.bz2

 mkdir ~/coding
 cd ~/coding
 tar xjvf ~/sources/openmoko-Sample-Project-20071130.tar.bz2

Since this is the first time you configure the project, you need to call <tt>./autogen.sh</tt> instead of the usual <tt>./configure</tt> to configure your sources.

 cd ~/coding/openmoko-Sample-Project-20071130
 ./autogen.sh --host=arm-angstrom-linux-gnueabi \
              --target=arm-angstrom-linux-gnueabi \
              --prefix=/usr/local/openmoko/target/sample

You can then call <tt>make install</tt> to compile the sourcetree and install it into the configured prefix.

 make install

= Copying the sample project to the device and run it =

Once <tt>make install</tt> finished successfully, your binaries and data will be found in /usr/local/openmoko/target/sample. You can now copy these onto the device (i.e. over USB ethernet or with an SD card) and run them there.

= Where to go from here =

{{todo|write}}

= Advanced topics =

== Installing additional libraries into the toolchain ==

{{todo|write}}

== Packaging your application ==

We have included a script to make an ipkg out of your application. You need to supply the path to the filesystem, a version number, a description, and an author / contacts string.

 xgenpackage /usr/local/openmoko/target/sample 1.0 "My Sample Project" "openmoko@openmoko.org"

Note that while you can redistribute the generated ipkg, be aware that this is a bare-bones ipk that contains no further information, i.e. you will lack library dependencies.

{{todo|hint how to get the package included in OE}}

= Troubleshooting =

{{todo|write}}

{{Languages|Toolchain}}

[[Category:OpenMoko]]
