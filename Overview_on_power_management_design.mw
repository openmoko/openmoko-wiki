== State diagram ==
* Normal Mode
* Sleep Mode 
* Poweroff Mode
* Slow Mode ??

There has also been discussion (from Cesar) on the kernel list about exploiting the PM suspend and resume driver APIs on a more finegrained basis to tailor consumption to what the device finds itself doing, maybe driven by what dev nodes have handles open on them.

== Profile of suspend/resume ==
* Estimate suspend current 
System only keeps two power sources, AUTO3v3 and DOWN2 1v8, when it is in suspend. Theoretically, the suspend current should be the sum of the current of all modules which are in sleep/suspend mode connected these two power channels. So we have to know the current consumption of following modules which are in sleep/suspend mode individually.

** Glamo
** BT
** AMP
** WLAN
** SDRAM
** NAND 
** LCM

* Wake-up source
The following modules/events are listed as wake-up sources for GTA02 so far. 

** GSM:OK 
***But the suspend current is somehow too high (18mA). Need more investigation. 
** WiFi:[Not verified/implemented]
** PMU
*** Power key:[OK]
*** RTC(alarm clock):[Not verified/implemented]
*** USB insert: [Not verified/implemented]
** Aux key:This button is used as NOR booting control. It would not enable as wake-up source anymore. 
** Jackinsert [Not verified/implemented]

== GPIO config == 
* gpio config on A5
* gpio config when system get into sleep mode (suspend)
* config of glamo in sleep mode 

== Automated suspend/resume testing ==
Initial idea is to provide an environment to test suspend/resume process and collect the suspending current. 
Basically, we could use multimeter with GPIB to achieve the whole process automatically.
