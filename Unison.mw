== Overview ==

[http://www.cis.upenn.edu/~bcpierce/unison Unison] is a file-synchronization tool for Unix and Windows. It determines all differences between two directory trees and lets the user decide, how to proceed with every differing file.

Unison comes in two flavors:
* Text mode only version (debian package name: unison)
* GTK-based graphical version (debian package name: unison-gtk)

Unison can sync 
* between two directory trees on the same computer or 
* between directory trees on two separate machines.

For syncing desktop machine and Neo we use the latter. The recommended way to do this is the [http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#rshmeth remote shell method]:

We start unison or unison-gtk on the desktop PC. The program will connect to the Neo via ssh and start a text-only instance of unison on the Neo to retrieve new files or deltas and to modify files on the Neo.

{{note|The following deals with Unsion on '''Linux'''. It should apply for a [http://wiki.openmoko.org/wiki/Neo1973_and_Windows#USB_Ethernet_emulation network connection from a Windows machine] as well. Check [http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#ssh-win unison manual] for details!}}


== SSH Setup ==

For this to work, ssh must not output any text itself, because unison parses the first line of console output to determine the version of unison on the remote computer: 

* So we should setup ssh for public key authentication as described under [http://wiki.openmoko.org/wiki/USB_Networking#SSH_Keys USB Networking].
* If you are working with more than one distribution to boot from or even with more than one device, I found it convenient to make them all use the same host key (/etc/dropbear/dropbear_rsa_host_key).

== Installation ==

On the Neo we use the text version of unison. Since there's no native opkg file available currently, we take the [http://packages.debian.org/lenny/armel/unison/download debian package (armel)]. Extract the file unison-2.27.57, copy it to /usr/bin on neo and create a symlink by the name of unison! 

When calling Unison via ssh, the console must only show the unison version information:
<pre>
user@desktoppc:~$ ssh moko unison -version
unison version 2.27.57
</pre>

== Configuration ==

Unison allows for multiple configuration profiles on the desktop PC. My ~/.unison/moko.prf looks like this:
<pre>
# Unison preferences file

label      = Syncing Openmoko

# the directories on the desktop and on the neo
root       = /home/user/Openmoko/data
root       = ssh://root@moko//media/mmc4

# common options (You can 'outsource' settings as include file. Comment out, if not needed! )
include Common.opt


# Do not compare modification time
times      = false

########### Music ##############
path       =      music

########### GPS Data ###########
path       =      gps
ignore     = Path gps/Maps/*
ignorenot  = Path gps/Maps/OSM

</pre>

== Using Unison ==

On first execution of unison on the desktop with the above profile
<pre>
unison-gtk moko
</pre>
unison will ask you to create a new hash archive. Depending on your directory tree, this may take a while. After that you may choose how to proceed with differences.

On the second call unison is actually able to detect changes and will automatically suggest appropriate actions on how to sync the directory trees:

[[Image:UnisonScreenshot1.png|thumb|908px|center|Unison-GTK syncing with the Neo]]

Unison can integrate programs for comparing and merging files during synchronization and offers a great number of other usefull options (see the [http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html manual]).

[[Category:Applications]]
