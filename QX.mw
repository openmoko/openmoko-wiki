QX is a X-Server that runs under [[Qt Extended]]. Especially in the distribution [[QtMoko]] it is used to run applications like:
* [[Navit]] 
* [[Linphone]]
under Qt Extended. 

== Starting Applications ==
You can start applications that need the X-Server with the following steps in [[QtMoko]]:
# Open Main Menu by clicking on the green Q-Topia "Q"-Box.
# Open Applications (4 Boxes, red, yellow, green, blue)
# Scroll down and open QX
# Select the application that needs the X-Server (e.g. [[Navit]])
# Click on the white Paper Icon on the bottom left to open the context menu of the QX application.
# Select "Launch" to start application
With the AUX-Button you can exit the X-Server environment without quitting the application.
== Screenshots ==
{| cellspacing="0" class="sortable wikitable" border="0" style="font-size: 85%; text-align: left; width: auto; background:#CCCCC;"
|-
! 
[[Image:QX_Navit1.png|250px|thumb|Use QX-Menu-Button at bottom left]]
! 
[[Image:QX_Navit_Launch.png|250px|thumb|Select Launch to start Navit in QX]]
|-
|}
* In Settings you can change the launch settings of the selected application
* with Favourites you can select the predefined applications you can add to your favourites menu.

==QX Favorites==
[[Image:qxfavorites.png|200px|thumb|Favorites in QX with Linphone-icon added]]

[[QX]] is the X-Server in QtMoko you can add favorites to the QX-Menu too by manual editing the files in:
  /opt/qtmoko/etc/qx
The file 
  favourites.conf
detemines the list of application you will see after starting [[QX]]. The file looks like this:
  [Apps]
  list=navit, tangogps
The applicationsnames must exist and need an entry in the <tt>profiles.conf</tt> file.
The file
  profiles.conf
defines the QX-settings for the application. E.g. navit needs the GPS-daemon to be started and the auto-dim function of the display is disabled. These settings can be defined for the applications individually. The file contains profile records like the following for <tt>tangogps</tt> and <tt>navit</tt>:

  [tangogps]
  antidim=true
  antisuspend=true
  gps=true
  init=gpsd /dev/ttySAC1
  kbd=false
  qvga=false
  rotate=false
  wm=true
 
  [navit]
  antidim=true
  antisuspend=true
  gps=true
  init=gpsd /dev/ttySAC1
  kbd=false
  qvga=false
  rotate=false
  wm=true
{{Note|You do not need a profile definition for the application to be launched in QX. Just a desktop-definition file in the folder:
  /usr/share/applications
}}

===Add to QX-Favourites===
The following explainations show the internal structure of the QX application management. It is helpful to create installation scripts for QX.

You have installed or programmed an application  with the name <tt>myapp</tt>. Test the application in the QX-terminal if it works properly. Now we add this application <tt>myapp</tt> to the application list in <tt>favourites.conf</tt>. We do this e.g. with vi:
  # vi /opt/qtmoko/etc/qx/favourites.conf

The file look like this (press "I" for switching to INSERT mode):

  [Apps]
  list=navit, tangogps, myapp

Add <tt>myapp</tt> press ESC and :w for "write to file" and ":q" for "quit VI".
{{Note|You can use programs for myapp (e.g. a shell script with xdialog), that have a desktop-definition file in the directory:
  /usr/share/applications
If you want to use your own scripts in QX with an icon, create a desktop-definition file first (see <tt>synccal.desktop</tt> as an example below) and save this file in <tt>/usr/share/applications</tt>.
}}

Now we have to add a profile record for <tt>myapp</tt> in file <tt>profiles.conf</tt>. We do this e.g. with vi:
  # vi /opt/qtmoko/etc/qx/profiles.conf
The file is depended on your settings could look like this  and e.g. the following lines (press "I" for switching to INSERT mode):

  [myapp]
  antidim=false
  antisuspend=true
  gps=false
  init=
  kbd=false
  qvga=false
  rotate=false
  wm=false

Then press "ESC" and ":w" for "write to file" and ":q" for "quit VI".

===Listed Favourites===
The available applications for the favourites in QX are defined in the directory:
  /usr/share/applications
====Example desktop-definiton file for navit====
The files have the extension <tt>.desktop</tt> and have the following structure (e.g. <tt>navit.desktop</tt> is defined like this:
<pre>
[Desktop Entry]
Version=1.0
Name=Navit
Name[de]=Navit
Name[fr]=Navit
Comment=The open source vector based navigation program with routing engine
Comment[de]=Ein vektorbasiertes Navigationsprogramm
Comment[fr]=Le logiciel opensource de navigation vectorielle
Exec=navit
Icon=navit
StartupNotify=true
Terminal=false
Type=Application
Categories=GTK;Utility;Geography;
GenericName=Navit
GenericName[de]=Navit
</pre>
You can define the
* Name,
* Comment and
* Generic Name 
for differnent languages. The main variable is <tt>Exec=...</tt>, because it defines the command executed, when you click on the icon in QX.

{{Note|The navit icons are stored in:
<pre>
/usr/share/icons/hicolor/22x22/apps/navit.png
/usr/share/icons/hicolor/128x128/apps/navit.png
</pre>
The icon should be located in:
<pre>
/usr/share/pixmaps/
</pre>
So copy the icon into the pixmap directory:
  cp /usr/share/icons/hicolor/128x128/apps/navit.png /usr/share/pixmaps/navit.png
}}

====New desktop-definiton file for SyncCal====
As an example we want to use the shellscript of [http://mossroy.free.fr/ics2qtcal/ Mossroy] for syncing an iCal-file into the Qt-Calendar (see [[QtMoko]]). 
 vi /usr/share/applications/synccal.desktop
We call the desktop-definition file <tt>synccal.desktop</tt> and enter the following definitions:
<pre>
[Desktop Entry]
Version=1.0
Name=SyncCal
Name[de]=SyncCal
Name[fr]=SyncCal
Comment=Syncing remote and local ics-file into Qt-Calendar.
Comment[de]=Ein perlbasiertes Script fuer den Import von ics-Dateien in QtMoko
Exec=synccal
Icon=synccal
StartupNotify=true
Terminal=false
Type=Application
Categories=GTK;Utility;Dialog;
GenericName=SyncCal
GenericName[de]=SyncCal
</pre>
If you want to have a special icon for your new application see free e.g. [http://www.100000freecliparts.com/clipart/Icons/index.html 100000 Free Clipart] and store the icons in the following directory with the name <tt>synccal.png</tt>.  
<pre>
/usr/share/pixmaps/synccal.png
</pre>
The name is defined by the definition:
  Icon=synccal
in the file <tt>synccal.desktop</tt>.

===Remove QX-Favorites===
You just have to remove the application name from the list of applications in:
  /opt/qtmoko/etc/qx/favorites.conf
You do not need to remove the application profile for your application in <tt>profiles.conf</tt>.

If you want to remove an application not only from the favourites list and from the list of available application in [[QX]] then remove the desktop-definition file in the folder:
  /usr/share/applications  
[[Category:Qt based distributions]]
