{{Languages|tangoGPS}}
{{Application|tangoGPS}}

{{ApplicationBox|
Name=[[TangoGPS]]|
Description=    TangoGPS is a map application which can utilize Neo's built-in GPS to show your current location. It automatically downloads maps from http://openstreetmap.com and you can download map tiles for offline use too.|
Screenshot=TangoGPS1.jpg|
Homepage=http://www.tangogps.org|
TestedOn=Om 2008.8|
PackageName=tangogps
}}


__TOC__

tangoGPS is a map application which can utilize Neo's built-in GPS to show your current location.

[[Image:TangoGPS1.jpg]]

Website: http://www.tangogps.org


== Running tangoGPS ==
=== [[Om 2008.8]] ===

From the freerunner connected to the internet:
<pre>
opkg update
opkg install gpsd
</pre>
{{note|I experienced hangups if gpsd was not installed.}}
<pre>
opkg install http://www.tangogps.org/downloads/tangogps_0.9.5-r0_armv4t.opk
</pre>
If opkg complains about not being able to acquire a lock, try:
<pre>pkill packagekit</pre>
To get gpsd working on the FreeRunner you have to change the configuration according to [[Gpsd#GPS_on_GTA02]].
Then start gpsd by:
<pre>
/etc/init.d/gpsd start
</pre>
If you get an error about no GPS device in /etc/default/gpsd execute:
<pre>
echo "GPS_DEV=\"/dev/ttySAC1\"" > /etc/default/gpsd
</pre>
Now you must power up the GPS-chip by opening the "Settings" application and setting the GPS entry to "on". Now you can run tangoGPS and wait until it get's a GPS fix. This can take up to a few minutes.

=== [[Debian]] ===

The latest version is available in [[Debian]].

It depends on gpsd which conflicts with frameworkd in fso-frameworkd, but there is a package available that provides
the gpsd interface to clients while using the services of the FSO frameworkd daemon, fso-gpsd. The install.sh script for the Debian distribution on the OpenMoko already installs it. To add tangogps run

# apt-get install tangogps

The gps device will be started automatically upon the invocation of tangogps or another gps application, e.g. like the one in [[Zhone]]. For the records, one can manually turn on the gps device using

# echo 1 >/sys/devices/platform/s3c2440-i2c/i2c-adapter/i2c-0/0-0073/neo1973-pm-gps.0/pwron

The tangoGPS applications may appear as "GPS & Map" on various desktops.

'''Issues:'''
* Both gpsd and the framework publish GPS data through dbus, though with different interfaces.  This suggests a number of possible solutions.
** gpsd or the framework could implement the other's interface (along with their own).
** a translator could read one interface and emulate the other. This is what fso-gpsd does.
** the framework could have an option to read data from gpsd.
** ogpsd/gypsy could be extended to be backwards compatible with the majority of gps applications.

=== FSO Milestone 3 ([[OpenmokoFramework]]) ===

There are two various GPS interfaces -- (1) one provided with default [[gpsd]] and (2) the other provided by [[ogpsd]] (part of the frameworkd). tangoGPS requires the ad 1 and it obtains information from gps from the [[dbus]] interface provided by gpsd.

On FSO milestone 3, there is [[tangoGPS]] pre-installed as well as both gpsd and ogpsd (see <code>/etc/frameworkd.conf</code>, section <code>ogpsd</code>).  As mentioned above, there also exists a fso-gpsd package, that converts from ad 2 to ad 1 (unfortunately fso-gpsd is not in default image and must be installed with <code>opkg install fso-gpsd</code>).

You cannot have both "providers" (ad 1 & ad 2) running, but you can have ad 2 (recommended for FSO) and "convertor" (fso-gpsd) providing the ad 1.  To get usable tangoGPS on FreeRunner, one has to:

# check that <code>/etc/frameworkd.conf</code>, section <code>ogpsd</code> reads GPS data from the right device (<code>/dev/ttySAC1</code>)
# if changes were made to configuration, one should restart the frameworkd -- <code>/etc/init.d/frameworkd stop && /etc/init.d/frameworkd start</code>
# check that gpsd is not running -- <code>/etc/init.d/gpsd stop</code>
# check that fso-gpsd is installed and running -- <code>opkg install fso-gpsd; fso-gpsd</code>
# check that gps chip is online (<code>echo 1 > /sys/devices/platform/s3c2440-i2c/i2c-adapter/i2c-0/0-0073/neo1973-pm-gps.0/pwron</code>) (Om 2009 newer kernels: <code>echo 1 > /sys/class/i2c-adapter/i2c-0/0-0073/pcf50633-regltr.7/neo1973-pm-gps.0/power_on</code>)
# finally start up the tangoGPS and locate the gps signal; it should be up in a few minutes.

Note 1: handy application for testing the gps (and gps signal strength) is <code>openmoko-agpsui</code>, see general gps info at [[Gps]]

Note 2: You can automate the process -- (1) remove the startup script for gpsd (<code>update-rc.d -f gpsd remove</code>) and (2) create a simple startup scipt for fso-gpsd (you can use current script for gpsd as a skeleton)

== Downloading Maps ==
=== pre-load for offline use ===

tangoGPS can bunch-download the map images so you don't need an internet connection while walking around. By default tangoGPS stores downloaded maps to /tmp/. This folder is lost every time you reboot the device. But you can use the "Config" tab within tangoGPS to change the "Cache Dir" location to , for example, /osm/ . So downloaded maps will be kept in the Neos flash, also after reboot. Note that the map files can take up large amounts of space, so you may want to store them on your sd card, e.g. in /media/card/osm or /media/mmcblk0p2/data/maps.

If you find that TangoGPS does not remember configuration changes that you make to it, be sure to run it from the touchscreen, and not an SSH session.  TangoGPS uses gconf to store its settings, and cannot access gconf when run via SSH.

An alternative way to setup the configuration is through the command line. having /media/mmcblk0p2/data/maps as your data directory you could do the follwing:
<pre>
gconftool-2 -s /apps/tangogps/repos \
"[OSM|http://tile.openstreetmap.org/%d/%d/%d.png|/data/maps/OSM|\
0,Topo|maps-for-free|/data/maps/maps4free|\
0,Aerial|openaerial|/data/maps/openaerial|\
0,Opencyclemap|http://a.andy.sandbox.cloudmade.com/tiles/cycle/%d/%d/%d.png|/data/maps/opencyclemap|\
0,Google Sat (testing only)|http://khm1.google.com/kh?v=34&hl=en&x=%d&s=&y=%d&z=%d|/data/maps/googlesat|1]" \
--type list --list-type string
</pre>

 Om2009 unstable 090805 Glenn:
 (gconftool-2:1820): GConf-WARNING **: Client failed to connect to the D-BUS daemon:
dbus-launch failed to autolaunch D-Bus session: Autolaunch error: X11 initialization failed.
 Error setting value: No D-BUS daemon running
 root@om-gta02:~#

Once you have set the location to a non-volatile path, you can connect your Neo to the internet by USB or WiFi at home and start downloading the maps of your area. Tap the map screen and select "map download". Now on-the-road  tangoGPS will be able to show you maps in different zoom levels even though you are not connected to the internet.

=== Downloading Maps via GPRS ===
I think tangoGPS may have started working after I followed the instructions to get GPRS working with GSM multiplexing here: [[Manually_using_GPRS#Option_1:_With_GSM_multiplexing_and_with_a_GUI]]

There are steps included in those instructions to improve GPS performance.  The great thing is that once you get GPRS working, you can roam with TangoGPS running and have it download maps as needed over the GPRS connection!

=== Updating pre-downloaded maps ===
If you have many maps already downloaded, [[Media:updateMaps.txt|updateMaps.pl]] is a perl script to bring you up-to-date. It's made to work for OSM maps only, but can be adapted to work with any map dataset. See also: [[Yaouh!]].

== Using tangoGPS for OpenStreetMap.org ==
=== creating tracks ===
tangoGPS works fine to create track for Openstreetmap. However, it records and stores a track in its native format, use [http://www.tangogps.org/downloads/convert2gpx.pl convert2gpx.pl] (see also: [http://psung.blogspot.com/2008/07/sharing-gps-tracks-from-tangogps-on.html tools])(you can also use [http://minucci.net/file/convert2gpx.py convert2gpx.py]) to convert the track to GPX (i.e to import into JOSM):

perl convert2gpx.pl 20080903_111508.log > 20080903_111508.gpx

==== tangoGPS logging format ====

<lat>,<lon>,<elevation>,<speed>,<course>,<hdop>,<datetime>

=== using OpenStreetBugs ===
[http://wiki.openstreetmap.org/wiki/TangoGPS#Using_together_with_OpenStreetBugs see OSM wiki]


== Importing Tracks into tangoGPS ==

tangoGPS does not support the import of tracks directly. However the following xslt style sheet can be used to convert gpx tracks - e.g from routing software such as maps.cloudmade.com - to tangogps log files, which can then be imported<br>

=== XSLT ===
At present this style sheet will only convert tracks which make use of the 'wpt' (waypoint) tag. Some software uses the 'trkpt' (trackpoint) tag. This will be incorporated into the stylesheet at some point. In the meantime, it can be used on the latter type of gpx file by changing 'wpt' to 'trkpt' on line 6.

<pre>
<nowiki>
<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:g="http://www.topografix.com/GPX/1/1">
<xsl:output method="text" omit-xml-declaration="yes"/>
<xsl:template match="g:gpx" >
<xsl:for-each select="g:wpt">
<xsl:value-of select="@lat"/>,<xsl:value-of select="@lon"/>,11.8,1.1,346.0,1.4,2008-12-30T06:46:0<xsl:if test="position()!=last()"><xsl:text>1</xsl:text></xsl:if><xsl:if test="position()=last()"><xsl:text>2</xsl:text></xsl:if>Z
</xsl:for-each>
</xsl:template>
</xsl:stylesheet>
</nowiki>
</pre>

save this into a file called 'gpx2log.xslt', then run

<pre>
$ xsltproc gpx2log.xslt input_file.gpx > output_file.log
</pre>

move output_file.log to the tangogps traces directory, and use the 'Load...' button on the 'Track' tab to overlay it on the map

Note: this stylesheet was thrown together in a short time, and makes at least one shortcut - namely, the use of 'dummy' variables for various details, such as the altitude, date, etc. Feel free to improve this if required, although it has no bearing on the display of the track

=== python ===

This small python script will convert GPX tracks and routes to tangogps file format.

<pre>
<nowiki>
#!/usr/bin/env python

import sys, re
import xml.etree.cElementTree as ET

tree = ET.parse(sys.argv[1])
root = tree.getroot()
ns = re.match('{(.*)}', root.tag).group(1)

for trkpt in root.findall('.//{%s}trkpt' % ns) + root.findall('.//{%s}rtept' % ns):
    a = trkpt.attrib
    for key, default in (('ele', 555.55), ('speed', 1.0), ('hdop', 1.0), ('course', 0.0), ('time', '2009-05-16T09:35:58Z')):
        a[key] = trkpt.findtext('{%s}%s' % (ns, key)) or default
    print '%(lat)s,%(lon)s,%(ele)s,%(speed)s,%(hdop)s,%(time)s' % a

</nowiki>
</pre>

Testet with GPX files from bikemap.net, gpsies.com, bikeroutetoaster.com, www.vvs.de/radroutenplaner.

Usage:
<pre>
$ ./gpx2tango.py MyTack.gpx > MyTrack.log
</pre>

=== sqlite ===

You may help yourself by using [http://relet.net/frog/archives/68 this tool] to import GPX trackpoints as a series of POIs directly into the sqlite database which tangoGPS uses to store POIs.

== Using the TangoGPS logs == 

You can convert the logfiles from TangoGPS to other formats using gpsbabel and this style-file: 

<pre>
DESCRIPTION TangoGPS 0.92
EXTENSION log
DATATYPE TRACK

FIELD_DELIMITER COMMA
RECORD_DELIMITER NEWLINE

IFIELD LAT_DECIMAL,"","%f"
IFIELD LON_DECIMAL,"","%f"
IFIELD ALT_METERS,"","%f"
IFIELD PATH_SPEED,"","%f"
IFIELD PATH_COURSE,"","%f"
IFIELD GPS_HDOP,"","%f"
IFIELD ISO_TIME,"","%s" 
</pre>

Save this as '''tangogps.style''' and you can use gpsbabel to for instance convert to google-earth files like this: 

 gpsbabel -i xcsv,style=tangogps.style -o kml -f file.log -F file.kml

== Add POI from address ==

You can use [[gtkaddpoi]] for searching the destination address and add it as a POI.

== Add POI from GeoRSS feed ==

If you would like to import GeoRSS feeds from Google maps or elsewhere as points of interest (POI), read this [http://bonedaddy.net/pabs3/log/2009/05/28/georss-tangogps/ blog post]. Hopefully TangoGPS upstream will include the script soon, but until then and if you aren't using Debian, download this [http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=5;filename=georss-to-tangogps-poi.py;att=1;bug=530718 script] from the Debian bug tracker.

== Using Google Maps with tangoGPS ==

Go to Config and create a new repository.

Set the url for '''street-maps''' to:
<pre>http://mt1.google.com/mt?&x=%d&y=%d&z=%d</pre>
for '''satellite-maps''' to:
<pre>http://khm.google.com/kh?&x=%d&y=%d&zoom=%d</pre>
for '''topographic-maps''':
<pre>http://mt.google.com/mt?v=app.81&x=%d&y=%d&zoom=%d</pre>

Check the "Inverted Zoom" box. Press save Repository Configuration and you're ready to go.


'''Since TangoGPS 0.9.5''' the "Inverted Zoom" box is no longer available because Google changed the addressing scheme; instead, select "xyz instead of zxy" and use the following URLs:
<pre>
Maps:                                                                                                                                              
http://mt3.google.com/mt/v=w2.89&hl=en&x=%d&y=%d&z=%d&s=Galileo                                                                                    
                                                                                                                                                   
Sat:                                                                                                                                               
http://khm3.google.com/kh/v=36&hl=en&x=%d&y=%d&z=%d&s=Galileo
</pre>

'''Generalization:''' The above 'Maps' URL isn't the current one anymore, also. Google changes the URL layout sometimes. To find out the current scheme open maps.google.com and view the page source. Search for http:// until you find sth similar to the above URL. This way I found
<pre>
http://mt1.google.com/mt/v=w2.92&amp;hl=en&amp;x=3&amp;y=5&amp;z=4&amp;s=Galile
</pre>

Now you could tweak your configuration unsing the above link (delete the 'amp;' tokens and replace every number with '%d'), for example with
<pre>
gconftool-2 -s /apps/tangogps/repos \
"[OSM|http://tile.openstreetmap.org/%d/%d/%d.png|/media/mmcblk0p2/data/maps/OSM|\
0,Topo|maps-for-free|/media/mmcblk0p2/data/maps/maps4free|\
0,Aerial|openaerial|/media/mmcblk0p2/data/maps/openaerial|\
0,Opencyclemap|http://a.andy.sandbox.cloudmade.com/tiles/cycle/%d/%d/%d.png|/media/mmcblk0p2/data/maps/opencyclemap|\
0,Google Sat (testing only)|http://khm1.google.com/kh?v=34&hl=en&x=%d&s=&y=%d&z=%d|/media/mmcblk0p2/data/maps/googlesat|\
0,Google Maps (testing only)|http://mt1.google.com/mt/v=w2.92&hl=en&x=%d&y=%d&z=%d&s=Galile|/media/mmcblk0p2/data/maps/googlemaps|1]" \
--type list --list-type string
</pre>

[[Category:GPS Applications]]
