{{Languages|FAQ}}
Frequently Asked Questions... with answers included!

==Introduction== 

=== Q: What is Openmoko? What is the Neo 1973? What is the Neo Freerunner? ===
A: Openmoko is a software platform and the world's first completely open mobile phone software stack.  It is based on Linux and  allows users and enthusiasts great freedom to customise their phone.
* The [[Neo 1973]] is the first fully supported Openmoko phone. 
* The FIC [[Neo FreeRunner]] is the second Openmoko phone and is now available for sale!

=== Q: I'm a ____ expert, can I join/help Openmoko? ===

We would love to hear from you.

* If you are interested in joining Openmoko as a software developer, please visit http://www.openmoko.com/contact.html and send us an e-mail.  
* Or register some your project at http://projects.openmoko.org/

=== Q: When and where can I buy a [[Neo 1973]]? ===

A: The Openmoko Neo 1973 is now sold out (11 Feb 2008). You should get the better [[Neo FreeRunner]] instead!

=== Q: Where can I buy a [[Neo FreeRunner]]? ===

A: You can buy a Neo FreeRunner at [http://www.openmoko.com/ openmoko.com]. See [[Getting Openmoko]] for more information on buying the Neo FreeRunner.

=== Q: What are the new features that the Neo FreeRunner has? ===

It retains many good features from the Neo 1973 such as the very high resolution touch screen and integrated GPS unit.

It adds the following features
* WiFi - 802.11 b/g - for high speed internet
* Faster processor operating at 400Mhz (up from 266Mhz) - for faster operation
* * SMedia Glamo3362 Graphics Accelerator - for improved graphical performance
* 2 3D Accelerometers - the phone applications will know which way the phone is oriented
* 256MB Flash - larger memory to run bigger applications
* LED's illuminating the 2 external buttons on the phone

=== Q: How much? === 

A: If you buy directly from the Openmoko webshop you will pay $399 for the Neo FreeRunner, $99 for the debug board on [http://www.openmoko.com/ www.openmoko.com].

=== Q: What can I do with the Neo 1973? ===

A: For long answer see [[Developer preview]]

A: The Neo1973 is a Phase 1 phone and aimed at software developers only. It is not suitable for end users, it will have basic functionality as a touchscreen phone. Little else will work, software development will continue till mass market release.    Here are one developer's thoughts about the possibilities [http://blog.syntaxpolice.org/isaac/technology/linuxPhones.html]

Those interested should:

* Know that there will be a device with faster cpu, gsm system etc in the spring of 2008.
* Have fun hacking devices.
* Be able to find their way through prototype software and hardware without much documentation.
* Share the dream of a device powered by free software.
* Not expect a consumer-level device.
* Come up with new ideas for exploring the age of mobile computing.
* Have $300.

Ideally they also:

* Can spot bugs and submit patches.
* Love to cooperate with a community improving the software.

=== Q: What can I do with the Neo Freerunner? ===

A: The Neo Freerunner is the first phase 2 (mass release) phone from the Openmoko project and is designed for everyday use by end users and continued software development and improvements by the Openmoko team and the Openmoko community.

A: The question is almost what can you NOT do with this phone - eventually there will be a huge range of free software applications allowing both end users and developers to get much more out of this phone than a standard "locked" mobile phone using features like the integrated GPS, bluetooth, wifi and accelerometers.

=== Q: Do I need the debug board? === 

With a Neo 1973 or a Neo FreeRunner and NO debug board you can do:
* Kernel development
* Application development
* Update u-boot (equivalent to PC BIOS). Neo 1973 users should only use a tested image to avoid the possibility of bricking the Neo 1973. Neo FreeRunner users do not have this concern, as a bad u-boot can always be updated using the failsafe u-boot in NOR flash
* Update kernel and/or rootfs using [[Dfu-util]].

With a debug board you can additionally do:
* Use JTAG to debug u-boot, device drivers, or the kernel
* Use the kernel console
* Neo 1973 users can unbrick their device if they flash a wrong or non-working u-boot image.
* Neo FreeRunner users can update u-boot in NOR flash

In summary, it is rare for a Neo FreeRunner user to require a debug board.

To emphasize, the debug board is '''not''' required in order to develop applications, system software, or even kernel or device drivers. The debug board is '''not''' required in order to gain access to the source code or the development tools.

=== Q: I have a shipping related question === 

For Neo1973
* See [[SH1_FAQ|Shipment 1 FAQ]].

For FreeRunner
* See [http://www.openmoko.com/ openmoko.com]

=== Q: What does the [[Neo 1973]] look like? ===

* See the original launch [[Artwork|artwork]]
* Collected images from google [[http://images.google.co.uk/images?q=neo+1973&ie=UTF-8&oe=utf-8&rls=com.ubuntu:en-GB:official&client=firefox-a&um=1&sa=N&tab=wi]]

=== Q: What does the [[Neo FreeRunner]] look like? ===

* From the outside, almost exactly the same as the Neo 1973. The case is all black, and it says "Neo FreeRunner" on the front.

=== Q: What else do I need to know? ===

* Both Neo 1973 and Neo Freerunner are tri-band GSM phones.   
* The Neo Freerunner is as an 850/1800/1900MHz version for North America and an 900/1800/1900MHz version for the rest of the world.      
* The Neo 1973 is only available as an 900/1800/1900Mhz version only and may not work well in some rural parts of North America.

=== Q: What are the benefits of an "open" phone over a "closed" phone ===

A: In a conventional closed phone, the handset maker and the mobile network operator work together to provide a service to you that best suits their business model.    The capabilities of a modern smartphone equipped with GPS, Wifi and bluetooth are amazing and the result is that many features are "locked down" because they do not suit the network operator.    Up until now it has been difficult to buy a phone on which you have freedom to install sofware which is not controlled by the network operators - Openmoko changes that!

A: A list of examples of "closed" behaviour has been started here - [[Problems of typical "closed" phones]]

==Software==


=== Q: Can the software do/connect to/... ===
A: Reviews of the latest "bleeding edge" daily builds of the Openmoko software stack can be seen [[Snapshot_review|here]]

A: At the moment, the answer to many other questions is "no". The phone is at the moment a small linux box with a touchscreen, a working dialer and some prototype apps.  Most do not function in any way that would be suitable for end-users.  If you want to add a feature or application request, then look over the existing [[Applications]] and either add one, or add a feature request to the applications page.

===Q: What software is on the phone?===
At the moment, almost no 'end-user' applications are present and working in a usable state.
It is possible to make and receive calls in some software revisions, this frequently breaks though.

====Q: What software can be installed on the phone?====

=== Q: Is there description and list of Openmoko software? ===

A: See Openmoko and [[OpenmokoFramework]]

=== Q: Is it completely free software/open source? ===

A: User space GPS/[[Gpsd]] will use a binary plugin for [[:Category:Neo1973 Hardware#AGPS|Hammerhead AGPS]] and [[:Category:Neo1973 Hardware#GSM.2FGPRS|GSM modem]] is separate subsystem connected to S3C2410 UART1. 

There are legal reasons why it is not possible to provide Open Source software for GPS and GSM modules.

Otherwise it is completely free software. See [[MokoMakefile]] and [[Development resources]].

=== Q: How do I install and manage software on Openmoko? ===

A: ipkg: http://handhelds.org/moin/moin.cgi/Ipkg

=== Q: How can I compile programs for the Neo 1973 or the Neo FreeRunner? ===

A: See [[Toolchain]].

=== Q: Is there an emulator available for Openmoko? ===

For a lot of testing and development work, you don't actually need emulation as you can run Openmoko on a normal PC too. The emulators also aren't 100% accurate. That being said, there are several emulation options as described in the following.

====QEMU====
QEMU can now emulate the Neo 1973 and the Neo Freerunner. The [[MokoMakefile]] has support for automatically building, flashing, and running [[Openmoko under QEMU|the Neo emulator]].

*Ubuntu users can follow the instructions in [[Automatic_emulation_in_Ubuntu]]

*Users of other Linux distributions can try the following:
:"make qemu‚Äù will build qemu-neo1973, download the latest official openmoko images, flash the images into the virtual NAND flash, and run the emulator.

See [[Qemu]] for more advanced information on running Openmoko in Qemu.

====Xoo====
Another is [http://projects.o-hand.com/xoo Xoo]. Koen says: "Xoo should be enough for most apps people will develop, since most don't need access to the gsm uart directly. If you're hardcore you could use qemu + xoo, but that still doesn't emulate all the hardware quirks (e.g. unaligned access)".

Update: Stefan Schmidt has resized the [[Neo1973]] Mock-up and written a small description for xoo. In his words:

It's not really useable at all, as you need a really high screen resolution to fit the whole picture on your screen. And of course the dpi are wrong. Even no buttons because I can't remember where they are at the case.

http://www.datenfreihafen.org/~stefan/OpenMoko/neo1973-xoo-device.tar.bz2

Start with 'xoo --device /path/to/neo1973.xml'

Some more details [[Getting_Openmoko_working_on_host_with_Xoo|here]].

====Xephyr====
Or use Xephyr directly with locally compiled programs (e.g. matchbox svn + openmoko):
 Xephyr -screen 480x640 -nolisten tcp -ac :1 &
 export DISPLAY=:1
 export LD_LIBRARY_PATH=/usr/local/lib
 matchbox-window-manager -display $DISPLAY -use_titlebar no \
  -use_super_modal yes -use_lowlight yes -use_dialog_mode static \
  -use_cursor yes &
 matchbox-panel --geometry=480x44 --end-applets=clock &
 openmoko-footer &
 openmoko-taskmanager &

=== Q: Where can I find some type of tutorial for a 'Hello, world' on Openmoko? ===

A: This should get you started:
* [[Building_a_hello_world_application]]
* http://www.gtk.org/documentation.html#Tutorials

=== Q: Can PalmOS apps applications be ported to run on Openmoko? ===

A: Making legacy apps written for the "Garnet" OS (n√©e "Palm OS") run on Linux
is decidedly non-trivial.

PalmOS apps are in general very hard to simply 'port'. Particularly well-designed programs may make it possible.

The ACCESS Linux Platform will include Garnet on Host (GHost), a PalmOS emulator that will support M6800 (68k) and ARM PalmOS applications. This part (GarnetVM and the .prc loader) will however be closed-source and likely under a restrictive license (fact confirmed by ACCESS Co. employees), making it rather unusable. In addition GarnetVM depends on Hiker and other packages.

It is possible that POSE, an emulator that simulates a Palm device on a Linux host could be used to allow 68k based applications to run.  This emulator has been around a long time; one expects that it will also run on Openmoko, but this has to be considered a short-term bandaid rather than a long-term solution.

Hopefully emulation will be necessary only for M68000 code (pre-PalmOS 5) while native ARM programs can run natively under Linux, provided a proper set of PalmOS libraries and a .prc executable loader.

=== Q: Does it have Java? ===
A: It will have eventually, if you help us to get it working. Some good places to keep track of would be [http://projects.openmoko.org/projects/java-pkg/ projects.openmoko.org] and [https://phoneme.dev.java.net/ PhoneME].

Project [[https://wiki.evolvis.org/jalimo/index.php/Jalimo Jalimo]] is a project aiming to provide a Java stack on mobile devices. This project supports Openmoko.

=== Q: What are the relevant X11 details? ===

A: See [http://lists.openmoko.org/pipermail/community/2007-January/001353.html xdpyinfo output].

=== Q: Does Openmoko run on any other hardware? ===

You can run it on your [[How_to_run_Openmoko_Apps_on_PC|PC]].  You may be able to run it on other [[Openmoko-supported_hardware | mobile platforms]]



=== Q: Why do you not build on top of the Maemo platform instead? ===

While I can't speak for the Openmoko team, it's worth noting that maemo is fixed resolution only. That will, I've heard, change in the future, but it hasn't yet. Maemo's current layout is also optimized for wide screens, not tall narrow ones. Most third party maemo applications that are out there will need to be modified to work at different sizes. Finally, a number of the software components of the Nokia 770 and N800 are not open source. --gopi

To add up on that, according to Nokia, Maemo is designed to bring the "Desktop" experience to an Internet Tablet. A lot of Desktop paradigms just won't work on a phone. However, we really share a lot of the base-technology (gtk, dbus, eds, gconf, to name a few) with Maemo, so we are definitely not a reinvent-the-wheel team.

=== Q: Will it be possible to use popular VoIP applications such as Skype on the Openmoko platform? ===

A:  Answer for the [[Neo1973]] - Perhaps. Hardware issues mean that it won't work well on the Neo1973. (the typical latency of GPRS is far too high). Also, Skype is a non-free software and binaries are not provided that would be suitable to run on a Neo. Skype's vendor could of course choose to provide binaries for Openmoko phones. However, this would not be desirable by Openmoko since it removes freedoms from the end-user. 

A: Answer for the [[Neo FreeRunner]].   Since it has WiFi the FreeRunner should be a good platform for VOIP use.    

In either case please check for softphone apps ported to the Openmoko distribution at the [http://projects.openmoko.org/  projects] page. We need to focus efforts on free software. Not convincing non-free software companies to release binaries for our Neos.

=== Q: Same question for Instant Messaging applications such as MSN Messenger? ===

A: Very probably. MSN is closed source and will only run where Microsoft wants you to run it. But there are many Open Source IM clients, many of which have a plugin architecture and so support the use of more than one IM protocol, even simultaneously. One example is [http://www.pidgin.im  Pidgin, formerly called GAIM]. GPRS does induce a certain amount of latency but that should not be a problem for simple, text-oriented chat between parties. And the GTA02's WiFi  will make it even better.

==Neo1973 Hardware== 

=== Q: Is there description of [[:Category:Neo1973 Hardware | Neo1973 Hardware]] ? ===

A: See page [[Neo1973_Hardware]] and category [[:Category:Neo1973 Hardware | Neo1973 Hardware]] and [[Disassembling Neo1973]]

=== Q: Does it have a camera? ===

A: No, see [[:Category:Neo1973 Hardware | Neo1973]] for details on what it does include (and [[Wish List - Hardware]] for what some want in the future.) See also [[FAQ#USB]].

=== Q: Does it have Wifi? ===

A:The current model [[Freerunner]] does have wifi. The older model, [[Neo1973]], does not have WiFi. There was no suitable Wifi device available when it was designed. See also [[FAQ#USB]].

=== Q: Does it have bluetooth? ===

A: Yes! Bluetooth 2.0.

=== Q: Does it come with a stylus? ===

A: Yes, but there's no holder for it on the phone.

=== Q: Where are the buttons? ===

[[Neo1973 Power Button|The power button]] is a small circular button, just next to the USB connector. 
[[Neo1973 AUX Button|The Auxiliary button]] is a rectangular button on the top left of the edge of the phone. (on black phones it looks just like an IRDA port).

=== Q: How do I input text? ===

A: Use provided keyboard app.

A: Use Bluetooth keyboard.

A: For more methods and ideas see [[Wishlist:Text_Input]].

=== Q: Can I record calls and/or play audio files in calls? ===

A: Yes, audio path from GSM to/from mic and speakers is completely controllable by user. For example recording calls (both sides) and implementing an [[Answering Machine]] is possible. Also using text->speech should be possible or modifying outgoing voice. Currently there is no software bundled in phone to do this.
There are only 2 A/D inputs and three D/A outputs (one dedicated to the earpiece). This means that stereo audio playback cannot happen at the same time as the [[Answering Machine]] functionality, amongst other things. See the audio page. [[Neo1973_Audio_Subsystem|Neo1973 Audio Subsystem]]

=== Q: What is the battery life? ===

A: There has been no word on this so far, but see [[Neo1973 Power Management#Approximate_power_draw_of_various_subsystems|these estimates]] for a rough idea.  More information about the battery [[Neo1973 Battery|here]].

=== USB ===

==== Q: What can I do with the USB port on the Neo? ====
A: Charge the phone, communicate with it over USB-serial, or USB-networking.

A: Plug external devices, such as wifi, cameras, or mass-storage devices.

==== Q: What can't I do with the USB? ====

The only limitation on current hardware seems to be no usb 2.0 support, which means slower communication with 2.0 devices.

==== Q: Why is only USB 1.1 provided? ====

A: The processor has USB 1.1 built in. One with USB2 built in would have been more expensive, and might not be open.

A: The Freerunner has the same processor as the Neo1973.

==== Q: Can the Neo charge and use devices on a USB hub at the same time? ====

A: 
*When the Neo is connected to a device port on a USB hub, it will start charging. If the hub is a powered hub, then it will charge fast (3h), otherwise around 12h.

*If you plug the Neo into the host port of a USB hub you can use devices on that hub but the Neo will not charge. (Some/many USB hubs will not accept an unpowered host as valid, hence the need for the below cable.)
*This is because the host socket on USB hubs is not powered.

FIC product development is looking into providing something that
conveniently solves this problem.

The USB port on the Neo is not a properly compliant USB host port, all USB host ports must provide 5V - though powered devices or hubs may not draw any current from this, they may refuse to work. (The Belkin Tetrahub is an example of a hub that will not work.)

One solution is a three headed cable.

One end plugs into the Neo. One end plugs into a device port of a powered hub, or the Neo charger. One end plugs into the host port of a hub.

The Charger/USB device plug only has +5V and 0V connected in the simple cable, which are connected to the other ends.

For a more complex cable, when the host socket is not plugged in, the cable acts as a simple USB cable.

==== Q: What are the details of the USB port on the Neo? How does it compare to USB On-The-Go? ====

A: The Neo will have mini-USB-B, and will be able to function as either a host or a device. It will NOT be USB On-The-Go.  OTG is a complex specification, and it comprises way more than just
an AB socket, but also electrical and software components which cannot be provide by the S3C2410.

You will need a special Mini-B to regular-B cable (note that this won't actually comply with the USB standard:  a compliant cable has to have an A or Mini-A plug on one end, and B or Mini-B on the other).

=== Q: Are there any LEDs on the Neo 1973? ===

A: The [[Neo1973]] P1/P2 will have no LEDs besides the screen backlight.

=== Q: Will a JTAG port be made available? ===

A:  Included with purchase of The "Hacker's Lunchbox" (Advanced version).

There are [[Neo1973_Hardware#Changes_from_GTA01Bv3|exposed I2C, SPI and debug board connectors]] inside case in all versions and [[Debug Board|Debug Board v2]] (JTAG and serial console) in Advanced version. [[Connecting Neo1973 with Debug Board v2]] explains how to connect it to the phone.

=== Q: Will the JTAG interface that comes with GTA01 be compatible with GTA02?  ===

A: Yes

=== Q: What can we expect in future versions? ===

A: A faster CPU, faster GSM (EDGE?) perhaps even powered USB port, USB2, wifi, and camera. No details have been released yet. More details of hardware upgrades should be available sometime in May. There will also be 5 more Openmoko devices - some not phones in the traditional sense - announced by FIC in September.

=== Q: Are microSDHC-cards like this[1] supported? ===

[1] http://www.amazon.de/Secure-Digital-Card-microSDHC-8192MB/dp/B0019XICD4/ref=pd_sbs_pc_15

==Networking/Connectivity==

=== Q: What kind of connectivity? ===

A: Tri-band GSM (commonly known as "European tri-band", 900/1800/1900 MHz), GPRS Class12/CS4 2.5G (Not EDGE), Bluetooth 2.0 EDR, USB in all versions. WiFi: Atheros AR6K in [[GTA02#.22Phase_2.22_.28GTA02.2C_.22Mass_Market.22.29|GTA02]]. (No 3G in year 2007 models)

=== Q: Can I bridge to an Ethernet (wired or unwired) network via a suitable Bluetooth enabled router? ===

A: Yes - see [http://gentoo-wiki.com/HOWTO_Configure_a_bluetooth_network_access_point this howto for how to configure a linux computer to act as such a router] and [[Bluetooth Support]].

=== Q: What providers provide the GSM required for Neo1973, or Freerunner? ===

A: See [[Neo1973 compatible cellphone providers]]

=== Q: Will Openmoko "Just Work" with Mac OS X? ===

A: There has been some discussion of this on the mailing list. There is motivation, and there are interested developers. 
Not being a Mac OS X user, I don't know enough
to summarize the discussion to answer this question. Can someone please fill in?

A: For IP over USB cable connectivity, it is planned to improve/adapt the AJZaurusUSB driver, allowing ssh into the Openmoko.

A: It is expected that (Bluetooth/UB) SyncML based interoperation for
contacts and events can easily be achieved by a patch
to the Apple iSync configuration tables.

A: There is an open source implementation of Cocoa (GNUstep) that aims to run MacOS X compatible applications (sort of
PPC/x86/ARM universal binaries) on Openmoko devices: mySTEP.

==Misc==

=== Q: On the lists on lists.openmoko.org, should replies be added above or below the original text? ===

A: Please reply UNDER post.

=== Q: How can I find out if a question or topic has already been discussed on the mailing lists? ===

A: By searching the mailing list archives. For example, using Google searches:

 site:openmoko.org text

For example, to search for accelerometer:

 site:openmoko.org accelerometer

If you only want to read the "official" mails from FIC people or from Openmoko people:

 site:openmoko.org text "at fic.com.tw"
 site:openmoko.org text "at openmoko.org"

For example to search for "release date" from FIC people:

 site:openmoko.org "release date" "at fic.com.tw"

Alternatively you can use the [http://www.google.com/coop/cse?cx=018430699993342716089%3Aszsaurhronw custom Openmoko search engine] that is using [http://www.google.com/coop/ Google Co-op].

=== Q: how many dead pixels may the LCM have before calling it defect? ===

A: the answer for the display used in GTA01 and GTA02 is '2'

=Historical=
The Neo1973 was last available in Febuary 2008. See [Ne

[[Category:Information]]
[[Category:FAQ]]
