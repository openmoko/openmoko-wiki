{{Neo1973}}
See [[GTA02_GPS|Here]] For information about the GPS in the Neo FreeRunner

The smartphones contain an integrated GPS receiver. The devices used are marketed as Assisted GPS ('AGPS'). Performance requirements are defined in GSM/GPRS 3GPP TS 25.171, CDMA 3GPP2 C.S0036-0. There is some [[Hardware:AGPS | discussion]] available as to what significance that "A" might have.

The external antenna for the GPS uses an [http://en.wikipedia.org/wiki/MMCX MMCX] connector.  More information about external antennas on the [[GPS antennas for neo1973|GPS antennas page]]. The connector for the internal GPS antenna also uses an MMCX connector. The external connector is located on the side of Freerunner.

The Neo 1973 used the [[Neo1973 hardware#AGPS|Hmamerhead]].

== Low level access ==

The Neo 1973 uses a separate userland driver to access the Hammerhead GPS. See this article for more information on this driver: [[gllin]]

The gllin driver itself is available here: http://3rdparty.downloads.openmoko.org/gllin/
It can be run from a command line. It outputs the NMEA data stream from the Hammerhead chip on a pseudotty device, so that it can be read as if the data were coming in on a serial port.

Here is email from Michael Shiloh about it. http://lists.openmoko.org/pipermail/community/2007-November/011916.html

There was an effort to write a Free Software program that could be used instead of this binary-only program, but this stalled after the decision to change GPS chips in GTA02.
The Iphone 3G uses the same GPS chip. It's not inconceivable that this might lead to further effort.

See [[Hammerhead/Protocol]] for details and the latest status.

Some scripts for those with the binary are on [[Manually_using_GPS]]

Please see the important information on [[gllin]]!

== Using GPS ==

Aside from accessing the GPS data in applications programs running directly on the smartphone,
you can also access the GPS data stream from another gadget such as a laptop.

Here are a couple ways to do that. You can use a network connection to pull data from the gpsd daemon, or you can make the smartphone appear to be a generic Bluetooth-connected GPS receiver.

Using gpsd requires a program that understands its protocol, such as GPSdrive.
Using Bluetooth would allow using just about any program that understands the NMEA protocol.
 
=== Using gpsd with a network connection ===

This procedure depends upon being able to set up a network connection between your Neo and your laptop. The connection can be over either WiFi or USB cable.

First be sure you have gllin and gpsd installed.

# On host type: '''nc -vvn -l -p 5000 > /tmp/nmeaNP''' (Host starts listening on port 5000 for GPS-signals and sends them to /tmp/nmeaNP)
# On the Neo type:   '''nc 192.168.0.200 5000 < /dev/ttySAC1''' (Signals from device will be send to port 5000 on host.) If your host is connected to the neo via wifi, change the IP address in the command to the one of the host. 
# On the host PC install GPSD, your GPS is attached as /tmp/nmeaNP 
# start gpsd on host with: '''gpsd -p /tmp/nmeaNP'''
# run your application! I used gpsdrive and it works better than my stand-alone GPS. 

Tested with RoadNav. Works great!

If you have an unlimited [[GPRS]] data package you could make your gpsd service accessible over the Internet. This opens up many possibilities. For example, you could implemented AVL (Automatic Vehicle Location) by having a web server somewhere query your gpsd server for your position and write it to a KML file which would then display your location on a Google map.

=== Bluetooth GPS relay ===

Here is how to make your smartphone appear to be a Bluetooth GPS.

#Power up the bluetooth radio
#Run the gllin script
#Run '''sdptool add SP'''
#Run '''rfcomm watch 0 1 sh -c "cat /tmp/nmeaNP >/dev/rfcomm0" &'''

== GPS applications ==
{{main|GPS applications}}

[[Category:GPS]]
[[category:Documentation]]
[[category:Standard]]
