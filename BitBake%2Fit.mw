{{Languages|BitBake}}
{{stub}}

BitBake è uno strumento per la compilazione del codice usato da [[OpenEmbedded]]. [[BitBake recipe]]s sono dei file dichiarativi, semplici da scrivere. Qui vedete un esempio per l'applicazione openmoko-calculator2:

 DESCRIPTION = "A Calculator for Openmoko"
 SECTION = "openmoko/tools"
 DEPENDS = "libmokoui2"
 PV = "0.1.0+svnr${SRCREV}"
 PR = "r0"

 inherit openmoko2

Il manuale utente è disponibile su [http://bitbake.berlios.de/manual/ BitBake berlios page].

[[Category:Application Developer]]

==Set Bitbake building environment==
In pratica, usare bitbake per costruire le proprie immagini è molto semplice.
* scaricare bitbake
* scaricare il tree di OpenEmbedded
* impostare il file di configurazione in locale
* impostare le variabili d'ambiente per la compilazione
Tutto quello di cui avete bisogno sono queste quattro semplici cose. Supponiamo qui che voi stiate usando un account chiamato '''build''', e che lavoriate nella cartella '''moko'''.

===Scaricare bitbake===

 $cd ~/moko  # Enter the directory
 $git clone git://git.openmoko.org/git/bitbake.git bitbake-om  # get the bitbake of openmoko.

Bitbake come for OpenEmbedded, however Openmoko has its own bitbake, named [http://git.openmoko.org/?p=bitbake.git;a=summary bitbake-om]. After cloning the bitbake-om, you have the kitchen comprehensive. You also need recipes to tell you how to cook.

===Scaricare il tree di OpenEmbedded===

 $git clone git://git.openmoko.org/git/openmoko.git openmoko

It will clone an [http://git.openmoko.org/?p=openmoko.git;a=summary OE tree from Openmoko git server]. This is the recipes what tell bitbake how to cook. The cloning process spend little time, get a cup of coffee is a good idea when you are waiting.

===Impostare i file di configurazione===

 $install -d /home/build/moko/local/conf #create the direcotry
 $vim local/conf/local.conf # use your favorite editor

Paste these line into the file
 ALLOW_EMPTY = "1"
 BBFILES := "/home/build/moko/openmoko/packages/*/*.bb"
 BB_GIT_CLONE_FOR_SRCREV = "1"
 BBINCLUDELOGS = "yes"
 BBMASK = ""
 DISTRO = "openmoko"
 DL_DIR := "/home/build/moko/sources"
 EXTENDPE = ""
 GLIBC_GENERATE_LOCALES = "en_US.UTF-8"
 IMAGE_FSTYPES = "jffs2 tar.gz"
 INHERIT += "om-utils"
 MACHINE = "om-gta02"
 PARALLEL_MAKE = "-j 4"
 QA_LOG = "1"
 TMPDIR := "/home/build/moko/build/"

Let me explain the meanings of some variables.
*BBFILES: It tells bitbake where those recipes are.
*DL_DIR: Bitbake fetch source code and put them here.
*MACHINE: I build packages for gta02. If you are going to build for gta01, replace it with "om-gta01"
*PARALLEL_MAKE: Please read the manual of "make" and search the -j option.
*TMPDIR: All of your building result will place here.

===Impostare le variabili d'ambiente===

 $vim build_env  # use your favorite editor

Paste these lines into the file

 export BBPATH="/home/build/moko/local:/home/build/moko/openmoko"
 export PATH=/home/build/moko/bitbake-om/bin:$PATH

==Aggiornare l'ambiente==
bitbake-om non viene cambiato molto spetto. Tuttavia il tree di OE (/home/build/moko/openmoko) cambia quasi ogni giorno. Aggiornarlo è importante se volete avere gli ultimi fix.

 $cd /home/build/moko/bitbake-om
 $git pull
 $cd /home/build/moko/openmoko
 $git pull

==Iniziare con bitbake==
La prima volta che userete bitbake potrebbe richiedere molte ore. Deve prendere tutto il codice sorgente di cui avrete bisogno. Deve costruire l'insieme di strumenti per la compilazione, e molte librerie base come glibc.

 $source /home/build/moko/build_env  #read in the environment variables.
 $bitbake helloworld # build the simplest case.
 Playing video game for 5 hours, Watching movie for 3 hours and Sleeping for 8 hours.

Se volete provare a compilare qualche cosa di più impegnativo come l'immagine di fso, basterà dire a bitbake di cucinare un'altra ricetta:

 $bitbake fso-image

Tutte le ricette si trovano in '''/home/build/moko/openmoko/packages'''. Per esempio, fso-image si trova in '''/home/build/moko/openmoko/packages/images/fso-image.bb'''.

Al termine del processo di compilazione, i file opk si trovano in '''/home/build/moko/build/deploy/glibc/opk''', e le immagini in '''/home/build/moko/build/deploy/images'''.
