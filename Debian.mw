{{Languages|Debian}}

Debian is used on many other embedded devices. Using Debian on the FreeRunner gives access to the Huge army of software packaged in the Debian repositories, already compiled for the arm processors. Moreover, one can build one's own things without having to learn the OpenEmbedded way. For example compiling natively is a snap with Debian, just apt-get gcc&libc-dev.

In the early days, one had to install [[Manual Debian|Debian manually]]. Now there is an installer script. The "official" instructions on how to install [http://wiki.debian.org/DebianOnFreeRunner Debian on FreeRunner] or [http://wiki.debian.org/DebianOnNeo1973 Debian on Neo1973] are hosted on Debian's wiki. This page is about post-install configuration and FreeRunner specific tips. For support or bug reporting please read the section [[Debian#Support|Support]].

= Configuring a base system =
== Password ==

The default root password is blank. You should change that as soon as possible
<pre>
# passwd
</pre>

== Suspend ==

Press the power button or run 'apm -s' to suspend.
To change the time for the display to darken/turn off edit in

<code>/usr/share/python-support/fso-frameworkd/framework/subsystems/odeviced/idlenotifier.py</code>

the section

<code>
        self.timeouts = { \
                        "idle": 10,
                        "idle_dim": 20,
                        "idle_prelock": 12,
                        "lock": 2,
                        "suspend": 20, \
</code>

idle_dim is the time in seconds to dim the display (which adds up to the idle time), idle_prelock is the time to turn it off. After that execute

<code>mv /var/lib/python-support/python2.5/framework/subsystems/odeviced/idlenotifier.pyc /var/lib/python-support/python2.5/framework/subsystems/odeviced/idlenotifier.pyc.old</code>

You can turn off Suspend completely by commenting out the entire section "Idleness Brightness Handling" in

<code>/etc/freesmartphone/oevents/rules.yaml</code>

== Time ==

The default time zone is UTC.  Reconfigure it by running
<pre>
# dpkg-reconfigure tzdata
</pre>
To set the clock manually do something like
<pre>
# date -s 00:33
</pre>
If you have a network connection, do something like
<pre>
# apt-get install ntpdate
# ntpdate-debian
</pre>
If you want to synchronize the internal clock with GPS time you can use a script like
<pre>
#!/usr/bin/env python
#
# Set the gps time
# Be sure your GPS is active before to launch this script

import dbus
import subprocess
import time

proxy = dbus.SystemBus().get_object('org.freesmartphone.frameworkd', '/org/freedesktop/Gypsy') # bus name, object name
interface = dbus.Interface(proxy, 'org.freedesktop.Gypsy.Time');
subprocess.call(['date',time.strftime( '%m%d%H%M%Y.%S', time.localtime(interface.GetTime()))])
</pre>

== Wifi ==
=== Using GUI ===

If you don't want to mess up with configuration files and is looking for an easy gui for wireless configuration, then wifi-radar or wicd is what you are looking for.

<pre>apt-get install wifi-radar
wifi-radar</pre>
or
<pre>apt-get install wicd
wicd-client -n</pre>

If you are looking for more, read on...

=== Using /etc/network/interfaces (simple mode) ===

Make sure the following packages are installed:
<pre>apt-get install wireless-tools wpasupplicant dhcp3-client</pre>

Assuming your wireless router uses WPA security and DHCP,
edit <code>/etc/network/interfaces</code> to include a section like this:
<pre>
auto eth0
iface eth0 inet dhcp
wpa-driver wext
wpa-ssid "MyWirelessName"
wpa-psk "MyWirelessPassword"
</pre>
Where, of course, you're using the name of your wireless network and it's password
instead of ''MyWirelessName'' and ''MyWirelessPassword''.

You can test by running
<pre>
# ifup eth0
</pre>
You can determine your IP address by running
<pre>
# ifconfig eth0
</pre>
Issues:
* only works if in presence of wireless network on boot, or when manually running <code>ifup eth0</code>
* booting away from wireless network is slower because waits for DHCP to time out
* does not reestablish connection when leaving wireless area and then returning
* does not support multiple wireless networks or open hotspots that you may travel between

Once wpa_supplicant has begun managing your wifi interface, you should type "wpa_action eth0 stop" instead of "ifdown eth0".

===Using wpa-supplicant (roaming mode)===

To configure WPA to roam between wireless networks, you will need to create a new configuration file:

<pre>/etc/wpa_supplicant/wpa_supplicant.conf</pre>

a template for this file (and more documentation) is available in:

<pre>/usr/share/doc/wpasupplicant/examples/wpa-roam.conf</pre>

You'll need to add networks to this file.  Examples:

* WEP:
<pre>
network={
       ssid="MySSID"
       key_mgmt=NONE
       wep_key0="abcdefghijklm"
#      wep_key0=6162636465  # <- no quotes, so hex number
       wep_tx_keyidx=0
       id_str="MySSID"
}
</pre>
* No key:
<pre>
network={
       ssid="SomeNetwork"
       key_mgmt=NONE
}
</pre>
* WPA:
<pre>
       network={
       ssid="Example WPA Network"
       psk="mysecretpassphrase"
       id_str="home"
}
</pre>

Next, you'll need to edit /etc/network/interfaces.  This lets you configure your wireless networks to use dhcp, or other appropriate TCP/IP settings:
<pre>
auto eth0
iface eth0 inet manual
wpa-driver wext
wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf

# MySSID comes from an id_str above.
iface MySSID inet dhcp

# default is what's used if there is no id_str setting.
# so the 'SomeNetwork' network will use DHCP.
iface default inet dhcp

iface home inet static
# static interface settings, or whatever...
</pre>

Finally, if you want attempts to access the internet to default to eth0 (and not usb0), then comment out this line under usb0 adapter configuration:

<pre>
gateway 192.168.0.200
</pre>


* Roaming from network to network is not automatic.  Instead, you need to manually run "wpa_action eth0 stop; ifup eth0" to switch networks

For some reason, I had to reboot for the id_str settings to take effect.  However, you should now be able to use "ifup eth0" to associate with the access point and "wpa_action eth0 stop" to down the wifi adapter.

{{todo|Which of the issues that single network configurations suffer from are addressed by WPA roaming mode?  Would ifplugd / guessnet help, or just make things more complicated?}}

=== Further reading ===

To use all the possibilities of <code>wpasupplicant</code> like roaming and automatic connection to different networks,
you should read <code>/usr/share/doc/wpasupplicant/README.Debian.gz</code>

== [[Bluetooth]] ==

The FreeRunner uses the standard Linux bluez stack, installed with
<pre>
# apt-get install bluez-utils
</pre>
There is also a module missing from /etc/modules, which is critical to getting your device recognized. (kudos to johnsu01 on irc.freenode.net:#openmoko-debian for the find)
<pre>
# echo ohci-hcd >> /etc/modules
</pre>
The first time you try this, you can also
<pre>
# modprobe ohci-hcd
</pre>
The only atypical part of using bluetooth on the FreeRunner is turning it on, which can be done with
<pre>
# mdbus -s org.freesmartphone.frameworkd  /org/freesmartphone/Device/PowerControl/Bluetooth SetPower 1
</pre>
Then the device should be visible using
<pre>
# hcitool dev
</pre>
{{todo|Then what to do next?}}

== Packages manager ==
You can install <tt>[http://packages.debian.org/search?keywords=dselect dselect]</tt>(~2.2MB) or <tt>[http://packages.debian.org/search?keywords=aptitude aptitude]</tt>(~12MB) to visually inspect the available debian packages using the desktop's console.<br>
Also the gtk-based package-manager <tt>[http://packages.debian.org/search?keywords=synaptic synaptic]</tt>(~15.7MB) is working 
after installing <tt>[http://packages.debian.org/search?keywords=lsb-release lsb-release]</tt> and <tt>[http://packages.debian.org/search?keywords=hicolor-icon-theme hicolor-icon-theme]</tt>, but it is very slow.<br>
Finally, on constrained systems, just issue the command:
<pre>grep -e Package: -e Description /var/lib/dpkg/available|more</pre>

== Xglamo acceleration ==
By default debian uses fbdev, but we can use Xglamo to get better performance:
<pre>apt-get install xserver-xglamo</pre>
after that edit /etc/X11/xorg.conf and change the line
<pre>Driver          "fbdev"</pre>
to:
<pre>Driver          "Xglamo"</pre>
and if you want to run xserver as normal user:
<pre>chmod u+s /usr/bin/Xglamo</pre>
You may also want to force the X server to 96 dpi to have the same fonts as with fbdev. Add "-dpi 96" to the X_OPTIONS variable in '''/etc/init.d/nodm''':<pre>X_OPTIONS="vt4 -nolisten tcp -dpi 96"</pre>
with that you:
*can use xrandr
*don't have the pointer callibration bug with the rotated mode
*have better performances

Using xglamo you must remember that:
*You can't use on xorg.conf the "Option Rotate" to rotate the screen
*You can't use the tslib patch to simulate right click

== Running X as normal user ==
1. Create a new user
<pre>
# useradd -m -G audio,dialout,floppy,video,staff username
# passwd username
</pre>

2. Edit /etc/init.d/nodm and change USER=root to USER=username in it. Then to make sure changes are not lost on upgrade, run
<pre>
dpkg-divert --add /etc/init.d/nodm
</pre>
This will make new versions of /etc/init.d/nodm be written to /etc/init.d/nodm.distrib

3. Edit <code>/etc/X11/Xwrapper.config</code> and change <code>allowed_users=console</code> to <code>allowed_users=anybody</code> (Or use <code>dpkg-reconfigure x11-common</code>)

4. Copy /root/.xsession into ~username/

5. Note that, if you ran zhone as root first, you may have to change ownership or remove /tmp/zhone.log, as a normal user is not able to write to a file owned by root.

== Sound ==
Make sure to put your user in the audio group ("adduser <username> audio").

If there is no error but no sound, try these state files:
[[Talk:Manual_Debian#Sound]]

== Kernel ==

=== Debian way ===
When Debian is installed, the kernel is provided by the package <code>linux-image-2.6.24-openmoko-gta02</code>. This package can be installed only in POSIX compliant filesystems, so it can not be used if your boot partition is a vfat one. Your kernel will be keep updated like the other packages of the system. You must to use this way if you are unsure and you need an (almost) stable system.

=== Openmoko way ===
Otherwise you can choose to manual install an OM kernel. But only do this if you know what you are doing.
At the moment there is a little problem in the question which kernel to use. Hopefully it will be solved in the near future.

The original openmoko kernel works fine inclusive suspending and supports different really nice usb gadgets (not all working at the moment). :)<br>
download stable: http://downloads.openmoko.org/releases/Om2008.9/<br>
download testing: http://downloads.openmoko.org/daily/

The new FSO4 kernel works fine and suspend/resume is also possible. But this kernel still has no loadable usb gadget modules (10-Nov-2008). :/<br>
download testing: http://downloads.freesmartphone.org/fso-testing/images/<br>
download unstable: http://downloads.freesmartphone.org/fso-unstable/images/
# Download a recent'' kernel'' and ''rootfs'' (tar.gz) from one of the above mentioned sources. It's your decision if you want suspend or usb gadget modules at the moment.
# Backup your running kernel like <code>mv /boot/uImage.bin /boot/uImage.bin.old</code>, then <br>copy the downloaded uImage file to the freerunner as <tt>/boot/uImage.bin</tt>.
# Backup your actual modules like <code>mv /lib/modules/2.6.24 /lib/modules/2.6.24.old</code>, then <br>extract the downloaded rootfs tar.gz to a temporary directory and copy <tt>lib/modules/2.6.24</tt> from the temp directory to <tt>/lib/modules/2.6.24</tt> on the FreeRunner.
# Do a <code>chown -R root.root /lib/modules/2.6.24</code> because the owner from the tar.gz is something else (for me).
# Run a <code>depmod -a</code>.
# This step is only needed for the OM kernel but it doesn't harm the FSO kernel setup. Add "g_ether" Module to /etc/modules like <code>echo g_ether >> /etc/modules</code>. I read in an email, that the module "ohci-hcd" is also needed for some bluetooth functions, but i don't know this for real. I inserted it to my modules file to be on the safe side.
# Reboot and hope everything works as expected. :)

= Desktop enviroments =
== Matchbox with fbpanel ==
It is not really a Desktop enviroment, but using fbpanel with Matchbox you can have a fast, lightweight, gtk2 desktop panel.
[[Image:Debian_fbpanel_zhone.png|right|thumb|300px|Debian with fbpanel, matchbox-window-manager and Zhone running]]
<ol><li>Install fbpanel:
<pre>sudo apt-get install fbpanel</pre></li>
<li>Customize the X startup process:
<pre>~/.xsession</pre>
<pre>
#!/bin/sh
export GTK_MODULES=libgtkstylus.so
zhone &
xsetroot -solid black
matchbox-keyboard-toggle &
matchbox-window-manager -use_titlebar yes &
# -use_titlebar yes to minimize & toggle between apps
# fbpanel's taskbar does not work with matchbox-window-manager
#~/bin/auxlaunch &
while true;
do
fbpanel;
sleep 1;
done;
</pre></li>

<li>Read http://fbpanel.sourceforge.net/docs.html#config
<pre>~/.fbpanel/default</pre>
<pre>
mkdir ~/.fbpanel
cp /etc/fbpanel/default ~/.fbpanel/default
nano ~/.fbpanel/default
</pre>
Remove section with 'taskbar' plugin - it's useless with matchbox-window-manager. You may add plugin 'cpu'
<pre>Plugin {
type = cpu
}</pre>
Also, plugin 'genmon' is useful:
<pre>Plugin {
type = genmon
config {
Command = echo -e $(grep "MemFree" /proc/meminfo | awk '{printf "%0.2f", $2 / 1024}') "|"\
$(cat /proc/loadavg | awk '{print $3}') "|" $(apm | awk '{print $5}')
PollingTime = 60
TextSize = small
TextColor = darkblue
}
}</pre>
After 'killall fbpanel' it will show: free mem in megabytes | loadavg | battery % left.</li>
<li>Default theme is ugly. You can change it and / or make font's bigger:
<pre>~/.gtkrc-2.0</pre>
<pre>sudo apt-cache search gtk2-engines
sudo apt-get install gtk2-engines gtk-theme-switch
DISPLAY=:0 gtk-theme-switch2</pre>
Now choose your theme, font and save it. To see changes do 'killall fbpanel'.</li></ol>

== XFCE ==
The debian installation script installs by default the matchbox window manager. It doesn't feature a desktop environment. '''xfce''' is a small and lightweight desktop environment and so is quite fast for the FreeRunner.

<pre>apt-get install xfce4</pre>

Edit your .xsession to launch xfce4 at X startup :

<pre>#!/bin/sh
xfce4-session</pre>

Edit section [Failsafe Session] of /etc/xdg/xfce4-session/xfce4-session.rc (or ~/.config/xfce4-session/xfce4-session.rc) to handle the auto-started apps. For example:
<pre>[Failsafe Session]
Count=3
Client0_Command=xfce4-panel
Client0_PerScreen=False
Client1_Command=xfdesktop
Client1_PerScreen=False
Client2_Command=zhone
Client2_PerScreen=True</pre>
Start XFCE !

<pre>/etc/init.d/nodm restart</pre>

The desktop takes a while to start but once up was snappy as can be expected.
I've not yet looked at the reason for the seemingly too slow start for the desktop.

zhone is available from the "Office" menu in xfce.
The matchbox keyboard is available in "Accessories".

If you want to display the screen on the long side (ie rotated, 4:3 aspect), add the following to the /etc/X11/xorg.conf in both the Device and InputDevice sections :

<pre>Option          "Rotate"                "CCW"</pre>

and then (re)start xfce.

If you want to be able to shutdown/restart the device, add the following line to ''/etc/sudoers'' (don't forget to replace ''username'' with your actual username):
<pre>username localhost = NOPASSWD: /usr/sbin/xfsm-shutdown-helper</pre>

=== Using matchbox-window-manager with XFCE ===

XFCE's window manager is poorly configured for use with the FreeRunner.  Fortunately, matchbox's window manager is compatible with xfce.  To use the matchbox window manager, modify ~/.xsession as follows:

<pre>#!/bin/sh
exec matchbox-window-manager -use_titlebar no -use_cursor no &
xfce4-session</pre>

== LXDE ==

I you want a really nice desktop enviroment but you think XFCE is too fat, you can try to install [http://en.wikipedia.org/wiki/LXDE LXDE]. It give to you the GTK comfort, but use only a fraction of the ram needed by XFCE.

To install it:
<pre>apt-get install lxde</pre>

to launch it create a <code>/etc/init.d/lxde</code> script in the same way descripted for xfce4, replacing <code>startxfce4</code> accorence with <code>startlxde</code>.

= Additional Software =
== Web Browser ==
[http://lists.openmoko.org/nabble.html#nabble-td781547 Arne Anka suggested] trying the light-weight webkit-based [http://en.wikipedia.org/wiki/Midori_(browser) midori] browser:
<pre>apt-get install midori</pre>

Another light-weight browser is [http://en.wikipedia.org/wiki/Dillo Dillo]. It can be easily installed with:
<pre>apt-get install dillo</pre>

If you think the previous options are quite slow on Freerunner try Links2.
<pre>apt-get install links2</pre>

Run as:
<pre>xlinks2</pre>

== GPS ==
Openmoko Freerunner has integrated a good AGPS chip that can be used to know in every moment the phone position.
The most known free applications to use gps with graphical maps are:

*{{main|TangoGPS}}
*{{main|Navit}} (Attention: Navit is not yet present on Debian repository)

== E-Book reader ==

To read an E-Book you have diffent possibilities:

* [[FBReader]] a good reader that can display txt, fb2, html and various other formats.
* [[Epdfview]] a simple and lightweight PDF viewer, it can be installed from Debian repository.
* [http://en.wikipedia.org/wiki/Evince Evince] the official Gnome viewer, it can display pdf, djvu, cbz, and other formats.
There is also an hack to convert drm protected adobe ebooks to .cbz files readable as mentioned on the mailing list.

= Miscellaneous =
== Making the cursor invisible ==

=== Using matchbox ===

Matchbox has an option, <code>use_cursor</code>, that can be used to control whether to show the cursor.
For the default setup, edit <code>/usr/bin/zhone-session</code> and change the matchbox command to
matchbox-window-manager -use_titlebar no -use_cursor no

=== Using unclutter ===

Unclutter is a program that hides the cursor after a period of inactivity. To use unclutter, install it
#apt-get install unclutter
and choose ''Yes'' to the question <code>Start unclutter automatically?</code>. To change settings edit
<code>/etc/default/unclutter</code>.

=== Changing the cursor ===
To make the cursor invisible create a file called empty.cursor with this content:
<pre>
#define empty.cursor_width 16
#define empty.cursor_height 16
static unsigned char empty.cursor_bits[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
</pre>
Now you can execute:
xsetroot -cursor empty.cursor empty.cursor
and the cursor will be invisible. To make this permanent you have to invent something ;) It must be executed after zhone has finished starting up.

== Running X applications on your desktop in nested X server ==
Sometimes it is helpful to have a big screen, keyboard and mouse. You can run X applications in a nested X server window.
On your desktop install the nested X server application Xephyr (better that Xnest)
apt-get install xserver-xephyr
Run a nested X server as display :1
Xephyr :1 -ac -br -screen 480x640 -reset -terminate &
Now you are able to run apps on your Neo which will display on your desktop PC. Make sure to set the display, for example if "mydesktop" is your desktop hostname
DISPLAY=mydesktop:1 xfce4-session &

== Simulating right click with stylus ==
=== With fbdev driver from xserver-xorg ===
To have the right click with stylus an easy way is to use the Sebastian Ohl's tslib patch: you can find it [http://www.ohli.de/download/xserver-xorg-input-tslib_0.0.5-1+fso1_armel.deb here] until it will not enter in the official Debian package.

You can install it with:
<pre>
wget http://www.ohli.de/download/xserver-xorg-input-tslib_0.0.5-1+fso1_armel.deb
dpkg --install xserver-xorg-input-tslib
</pre>

'''Warning''': this patch is external to Debian repository and is not (yet) supported by Debian comunity.

In this way, to get a right click you can simply tap and hold the stylus and after a while a right click will occurs.

'''Warning''': tslib patch is incompatible with <code>xserver-xglamo</code>. Use <code>libgtkstylus</code> instead (see below).
=== With Xglamo driver from xserver-xglamo ===
# <pre>apt-get install libgtkstylus</pre>
# Insert this line at the beginning of '''~/.xsession''':<pre>export GTK_MODULES=libgtkstylus.so</pre>

== Using the mouse and keyboard from your desktop on the OM device ==
=== Method 1: xsession export (works with a linux host) ===
If you are running Linux (or a similar xorg capable operating system) on your Desktop, you can export your xsession to the openmoko device and use your mouse and keyboard on the Neo screen. A little program called x2x makes it even possible to do this simultaneously on the fly. When activated you just move your mouse to the edge of your monitor and then the mouse cursor continues on the screen of your openmoko device. If you select a window on the OM, the input of your keyboard is automatically entered in that window. You can even use the clipboard to copy data from tour desktop to OM and in the reverse direction.

Configure your desktop computer to export your xsession:
On your desktop (with root permissions):
Make sure that sshd is installed and in /etc/ssh/sshd_config you have set
X11Forwarding yes

In K/Ubuntu sshd is in the package openssh-server.

On your OM device install x2x (with root permissions)
apt-get install xauth x2x
Now open a new X terminal on your desktop computer. You MUST be the same user that is running the xsession on your desktop (i.e. do not su to root or another user in your x terminal!). Use the same username that is running an xsession on your OM device. Assuming that you have a usb networking connection to OM (with standard configuration) on the user prompt of your desktop type:
user@desktop:~$ ssh -X openmoko@192.168.0.202 "/usr/bin/x2x -east -to :0.0"
Hit return and enter your password. The xterm window will be unresponsive after that, but keep it open until you disconnect your OM device.

Now move your mouse cursor across the right edge of your monitor. It should enter the screen of your OM device from the left. Of course you can also use -west, -north or -south, depending on your preference where you place your OM.

If computer says:
sh: /usr/X11R6/bin/xauth: No such file or directory
X11 connection rejected because of wrong authentication.
x2x - error: can not open display localhost:11.0

It means you haven't installed xauth on your OM. So on your OM (with root permissions)
apt-get install xauth

=== Method 2: synergy (works with a windows/linux host) ===
With this method you can have the following functionality:
* Mouse moves from screen edge to the next screen
* Keyboard types on the focused window
* Clipboard is transferred as well
* Connect as many computers and screens you wish
* Connect windows computers too

All devices/computers in question should be able to install [http://synergy2.sourceforge.net synergy].
Windows computers can use an installer exe.
Debian devices have a package ready to be used.
<pre>
apt-get install synergy quicksynergy
</pre>
quick synergy will appear in your XFCE programs menu (Accessories->QuickSynergy).
Run it, switch to the "Use" tab, enter the IP address of the computer with the mouse and keyboard you wish to use, and press Execute.

In the windows host, (or linux) run the synergy after installation,
and configure it to share its keyboard and mouse(server),
configuration is fairly simple, you add all the hostnames of the devices/computers that ever would be joined to the "screens" list, and create 2 links for each connection.

If your desktop's hostname is homepc, and the device's is debian_gta02, and i place the device to the left of the desktop, the links would look like this:
<pre>
homepc is right of debian_gta02
debian_gta02 is left of homepc
</pre>
Now move back to the main screen, and press Start.

That should be it, in windows you should have an icon with a yellow lightning in it when synergy is connected and working.
Synergy supports connection of more then one screen so one could set up a full lab with only one keyboard and mouse :)

= See also=
== Support ==

To have more information about Debian go to [http://www.debian.org Debian homepage].

If you have some problems, you can find support in [http://lists.linuxtogo.org/cgi-bin/mailman/listinfo/smartphones-userland smartphone mailing list]. Report your discovered bugs to this list but remember to put [mailto:nomeata@debian.org Joachim Breitner] in CC.

If you'd like to help the packaging activities, you can join the [http://lists.alioth.debian.org/mailman/listinfo/pkg-fso-maint fso mainteiner list].

== Known Issues ==

'''apt-get segmentation fault''' Whenever you get a segmentation fault while using apt-get or aptitude, clean the database so it will rebuild it
  rm /var/cache/apt/*.bin
