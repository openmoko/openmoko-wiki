{{Application|Navit}}

As described on the [http://navit.sourceforge.net/ Navit home page],

"Navit is a car navigation system with routing engine.

Its modular design is capable of using vector maps of various formats for routing and rendering of the displayed map. It's even possible to use multiple maps at a time.

The GTK+ or SDL user interfaces are designed to work well with touch screen displays. Points of Interest of various formats are displayed on the map.

The current vehicle position is either read from gpsd or directly from NMEA GPS sensors."

Some people say Navit is also a good choice for pedestrian and bicycle navigation.

[[Image:Navit-2241.png|thumb|Navit-r2241]]

== Acknowledgment ==

Thanks to [[User:Alessandro | Alessandro]], stefan_schmidt, cp15 and all Navit developers I have done a small ("not really working") preview of Navit on Neo1973 at [http://www.telemobilityforum.com/eng/ Telemobility Forum 2007]. Thanks to [http://gfoss.it GFoss] guys to invite me.
''[[User:Tyrael | Tyrael]]''

==Setting up Navit==

===Install Navit===
==== FSO (OM2008.x,SHR,...) ====

You can now simply add a feed from there : http://download.navit-project.org/navit/openmoko/svn/

Essentially, to enable this directory as [[Om_2008.8_Installer#How to add a Repository ?|feed]] and install or update navit do:
* Only for the first time:
 echo src navit http://download.navit-project.org/navit/openmoko/svn > /etc/opkg/navit-feed.conf
 opkg update

* Always:
 opkg install navit

Navit will be auto-updated when you run opkg upgrade later

Navit might not be able to use gpsd at startup:
 navit:plugin_load:can't load '/usr/lib/navit/vehicle/
 libvehicle_gpsd.so', Error 'libgps.so.16: cannot open shared object  
 file: No such file or directory'
 navit:vehicle_new:invalid type 'gpsd'

to solve this issue (necessary for SHR):

 opkg install libgps17
 ln -s /usr/lib/libgps.so.17 /usr/lib/libgps.so.16

====Debian====
Navit is now in Debian [http://packages.debian.org/source/testing/navit testing] and [http://packages.debian.org/source/unstable/navit unstable].

Add the following line to <tt>/etc/apt/sources.list</tt> with e.g. editor <tt>vi</tt> or <tt>nano</tt>:

     deb http://ftp.de.debian.org/debian unstable main

Then update with apt-get:

     apt-get update

The up-to-date source package is available through git at '''git://git.debian.org/git/collab-maint/navit.git''' ([http://git.debian.org/?p=collab-maint/navit.git;a=summary browse]).

===Set up the maps you want===

====The Easy Way====
Use [http://maps.navit-project.org/download/ Navit pre-processed OSM maps].  Navigate to the region you want, and click select to select it, select the region you want, then click download

If you just want the entire planet (as of this writing, ~1.8 GB), it's [http://maps.navit-project.org/planet.bin here].

[http://downloads.cloudmade.com/ CloudMade] also has up-to-date maps from OpenStreetMap by country (by state in the US).

====From the command line====
'''OpenStreetMap''' - follow directions at http://wiki.navit-project.org/index.php/OpenStreetMaps
* There are some pre-processed, up-to-date maps that can be grabbed with wget:

<pre>wget -O germany.bin http://maps.navit-project.org/api/map/?bbox=5.185546875,46.845703125,15.46875,55.634765625</pre>

* Here's an example to get the maps for the area around Seattle, WA:
** Find the map coordinates using http://informationfreeway.org/?lat=47.520270037501454&lon=-122.20130713167327&zoom=9&layers=B000F000
** Download 4 regions from OpenStreetMaps ([[Navit#Script_to_download_OSM_maps|see below]] for a script to do this for you automatically for largish areas):

<pre>wget -O map1.osm http://www.openstreetmap.org/api/0.5/map?bbox=-122.2,47.5,-122,47.7
wget -O map2.osm http://www.openstreetmap.org/api/0.5/map?bbox=-122.4,47.5,-122.2,47.7
wget -O map3.osm http://www.openstreetmap.org/api/0.5/map?bbox=-122.4,47.3,-122.2,47.5
wget -O map4.osm http://www.openstreetmap.org/api/0.5/map?bbox=-122.2,47.3,-122,47.5</pre>

* A binary Navit map file needs to be created.  The following uses osm2navit, and it's recommended that this command be used on something more powerful than the Neo:

<pre>cat *.osm | osm2navit --dedupe-ways mymap.bin</pre>

===Copy the map to the NEO===
To copy the map using scp (replace ''/directory'' as is appropriate in the following):
<pre>scp mymap.bin root@neo:/directory</pre>
If you copy the map <tt>germany.bin</tt> to the SD card on the Neo use e.g.
<pre>scp germany.bin root@neo:/media/card</pre>

Once it's somewhere on the NEO, Navit needs to know that it's there.
<pre>mkdir ~/.navit
cp /usr/share/navit/navit.xml ~/.navit/navit.xml
vi ~/.navit/navit.xml</pre>
In the navit.xml file, put the following into a new <mapset> section (and disable the default <mapset> just above - or else it will not work):
<pre><map type="binfile" enabled="yes" data="/directory" /></pre>
For example with a <tt>germany.bin</tt> on the SD-card you use:
 <mapset enabled="yes">
  <map type="binfile" enabled="yes" data="/media/card/germany.bin" />
 </mapset>
or if you store all downloaded maps in the directory <tt>/media/card/maps</tt> then add the following lines to <tt>navit.xml</tt>.
 <mapset enabled="yes">
   <map type="binfile" enabled="yes" data="/media/card/maps/*.bin"/>
 </mapset>
Note that the bin-file and the map set both have to be enabled.

Disable unused mapset sections by setting enabled to <tt>no</tt>, e.g. the pre-installed sample maps at line 370 in <tt>navit.xml</tt>.
 <mapset enabled="no">
    <xi:include href="$NAVIT_SHAREDIR/maps/*.xml"/>
 </mapset>


* Run navit
** Start [[gllin]] (for GTA01)
** Start [[gpsd]] ( gpsd /tmp/nmeaNP )
** Start navit

* The version of osm2navit with which you build the maps should match the version of navit you have. If in doubt, build the maps on the Openmoko.

===Tips and Tricks===
====Center on Vehicle====
Navit supports a "always center on vehicle" option. 

To activate this add
 follow="3"
to the <tt>vehicle</tt> tag in navit.xml. 
   <vehicle name="Local GPS" profilename="car" enabled="yes" active="1" follow="3" 
           source="gpsd://localhost" gpsd_query="w+xj" color="#0000ff">
The "3" causes to give the gui time to do something between the repaints (drag the map or browse the menu). When its set to "1" navit does nothing more than repainting the map continuously.

====Enter Country====
Before you can search for City you have to select a Country. To do that, click on the icon in the left upper corner of the search field (could look like a white square with blue top-left quadrant). The search is still a little buggy.

== News ==

=== Getting the display right ===

If using SHR the keyboard in country/town/street search mode does not fit on the street, make sure your gui configuration is set to the following line:

 <gui type="internal" font_size="350"/>

The example line provided for freerunners hides some important icons. Namely, instead of typing your city name first, you will first have to click the button on the top left, to go into country search mode. Enter your country name, then the city name, in order to enable the search function. This requires your map data to be searchable.

You can start in fullscreen mode with fullscreen="1"

 <gui type="internal" font_size="350" fullscreen="1"/>

If you want to enable "+" and "-" as Zoom-In and Zoom-Out buttons on the bottom of the map enable the button with the following xml-tags:
 <osd enabled="yes" type="button" x="-96" y="-96" command="zoom_in()"  src="zoom_in.xpm"/>
 <osd enabled="yes" type="button" x="0"   y="-96" command="zoom_out()" src="zoom_out.xpm"/>

=== Street names ===
They are now displayed on Openmoko using the CVS version of Navit (20071217).

=== Point selection by pen ===
Easier using the CVS version (20071217).



=== Speech ===
Navit can speak if you install eSpeak + speech-dispatcher and updates your navit.xml file.
For adventurous people, one way to do this (in SHR starting <tt>navit</tt> did not work anymore after this procedure):

* mokoTTS aims to integrate these packages in OM:
http://projects.openmoko.org/projects/mokotts/

install espeak, dotconf, and then speech-dispatcher.
note: running 2008.8 updating from zecke's "testing" repo does not require "dotconf"

* change the speech tag in navit.xml:
<speech type="cmdline" data="spd-say '%s'" />

or "spd-say -l fr '%s'" for using the French voice for example.

'''Note: Package speech-dispatcher broke my audio after suspend with current SHR (2009-04-13, though the problem's not shr, but speech-dispatcher itself).''' A solution is to disable starting of speech-dispatcher with:
 update-rc.d -f speech-dispatcher remove
And then edit /usr/bin/navit, so that it starts speech-dispatcher before navit, and stops it afterwards. See http://lists.openmoko.org/nabble.html#nabble-td1088795

'''Alternatively''', you can make speech-dispatcher restart on resume, see http://trac.shr-project.org/trac/ticket/494

=== Maps ===
==== Downloadable Maps ====
Downloadable OSM maps for most areas of the world are available free in Navit format from Cloudmade at [http://downloads.cloudmade.com/ http://downloads.cloudmade.com/]. Simply navigate to  the country or region you want and download the <code>.navit.bin.zip</code> version of the map. You'll have to exatract the <code>.bin</code> file from the ZIP archive before using it with Navit.
==== Planet extract ====
You can download pre-compiled (ready-to-use) maps using the OpenStreetMap-data from the [http://maps.navit-project.org/download/ the navit planet extractor] ;-)]â„¢ which allows you to select a region of OpenStreetMap to extract. This will give you a binary file that can be used directly by Navit without further processing. The planet extractor's map data is updated daily.

==== Script to download OSM maps ====
[[User:Wurp|Wurp]] wrote a little python script to download all OSM maps within a lat/long rectangle.  Just copy the script to a file called dlOSM.sh, chmod +x it, and run it like
dlOSM.sh <minimum latitude> <maximum latitude> <minimum longitude> <maximum longitude>

It takes a long time for large maps.  I could optimize it some by having it try to get a big section at once, then if it fails, break it into smaller pieces and recurse.  I'm not sure when/if I'll get around to that...

dlOSM.sh:
<pre>
#!/usr/bin/python

import os
import sys
#import math

def doIt(cmd):
  os.system(cmd)

def getOsms(basename, minLat, maxLat, minLon, maxLon):
  '''basename - base name of map, maps are named {basename}{count}.osm
  minLat - latitude of the west side of the map
  maxLat - latitude of the east side of the map
  minLon - longitude of the north side of the map
  maxLon - longitude of the south side of the map'''

  wgetCmdTemplate = 'wget -O %s%s.osm http://api.openstreetmap.org/api/0.6/map?bbox=%s,%s,%s,%s'

  currLat = minLat
  mapCount = 0
  while currLat < maxLat:
    nextLat = min(currLat + 0.1, maxLat)

    currLon = minLon
    while currLon < maxLon:
      nextLon = min(currLon + 0.1, maxLon)

      doIt(wgetCmdTemplate % (basename, mapCount, currLon, currLat, nextLon, nextLat))

      currLon = nextLon
      mapCount = mapCount + 1

    currLat = nextLat

(minLat, maxLat, minLon, maxLon) = map(float, sys.argv[1:])
getOsms('map', minLat, maxLat, minLon, maxLon)
</pre>

=== Improvements of GPS daemon by GSM network profiles  ===
[Cellhunter] is game to map GPS locations to a GSM network cell profile of available GSM network cells the freerunner can connected to. The strength of the signal and the currectly used GSM network cell and its neigbours can be used to improve GPS daemon in areas where no GPS satellites are available (e.g. in building or in narrow road with high buildings or bad weather conditions).

<onlyinclude>
{{ApplicationBox|
Name=[[Navit]]|
Description=Navit is a car navigation system with routing engine.|
Screenshot=Screenshot-3.png|
Homepage=http://navit.sourceforge.net|
TestedOn=|
PackageName=
}}
</onlyinclude>

[[Category:GPS Applications]]
