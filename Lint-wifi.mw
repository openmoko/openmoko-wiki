=Introduction=

==Description==
lint-wifi is a relatively simplistic application written in PyGTK for the Neo FreeRunner.  It aims to create a GUI-based method for associating with wireless networks, and provide various bits of connection-related information and control.  It is designed to work without a stylus, except when entering passwords (which are normally stored).
It is at the moment intended to do ''nothing'' unless a button is pushed.

It will be released ''soon''.

===Installation===

'''Lint-wifi''' has a [http://projects.openmoko.org/projects/lint-wifi2/ project page].
You can download the source tarball or the '''OpenMoko package''' from the [http://projects.openmoko.org/frs/?group_id=304 Files page], or browse the source tree from the [http://projects.openmoko.org/scm/?group_id=304 Subversion page].

You are encouraged to install the program and report any issue via the [http://projects.openmoko.org/tracker/?group_id=304 Tracker page].

====wpa_supplicant.conf====
lint-wifi requires /etc/wpa_supplicant/wpa_supplicant.conf to be present. This works for me (tm)

<code>
<pre>
update_config=1
ctrl_interface=DIR=/var/run/wpa_supplicant
ap_scan=1
</pre>
</code>

The first line is probably not necessary. It would allow lint-wifi to save its configuration back to wpa_supplicant.conf, which I believe it doesn't do ATM. I needed the third one to get scanning to work.

====compiling wpa_lint====
lint-wifi is a python script, you can just copy lint-wifi.py to your phone and make it executable. It relies on wpa_lint however wich is written in C, so you need to compile it.

On Debian/Ubuntu grab openmoko-toolchain_0.20080521-ubuntu6_i386.deb (see [http://andreasdalsgaard.blogspot.com/2008/07/openmoko-development-in-5-minutes.html]). Edit the Makefile for wpa_lint, at the top comment out the line starting with gcc= and add the line 
gcc = arm-angstrom-linux-gnueabi-gcc

Now just do make and copy the resulting wpa_lint to your phone. Don't forget to make it executable. It has to go in /home/root (hardcoded in lint-wifi).

==Requirements==
There are several requirements needed to run lint-wifi:
* PyGTK
* A valid [http://wiki.openmoko.org/wiki/GTA02_WLAN#Sample_wpa_supplicant.conf wpa_supplicant.conf] in /etc/wpa_supplicant/wpa_supplicant.conf

==Known bug==
 
If launching 'lint-wifi.py' fails with ''NameError: name 'init' is not defined'', then
edit the file ''/usr/lib/python2.5/site-packages/gtk-2.0/gtk/__init__.py'', go to line 82 and add an underscore in front of the "init()" so that it reads "_init()". Reference  [http://lists.openmoko.org/nabble.html#nabble-tc1128064%7Ca1128064].

=Tour=

==Layout==
lint-wifi is broken into pages, each page offering various bits of information or control.  Below are the pages, as they exist at version .1A

==AP List==
[[Image:aplist.png]]
(image outdated)

AP List will show APs that can currently be seen.  They will initially be ordered by how wpa_supplicant feels are best.
Columns include:
* essid
* Enc -- Consisting of "WPA", "WEP" and "off"
* Signal
* Chan
* S -- indicating State or Status:
** C: Connected
** K: Known/configured (eg, password is stored) and enabled
** D: Known/configured and disabled
** -: Unknown
* Mode -- At present is unused, will indicate Managed/Infrastructure vs Ad-Hoc

Buttons:
* Scan
* Edit -- Edits the settings of APs configured or visible
* Exit

==Status==
[[Image:status.png]]
(image outdated)

The Status page will primarily indicate the configured status of eth0.

The Renew DHCP button can be used to nudge udhcpc into renewing.
An "Enable All APs" button enables all that APs set to disabled.

==Conn==
[[Image:conn.png]]

The Conn page shows information related to the associated AP.

==Config==
Config is at present empty, but will contain various lint-wifi configuration options, such as support for hiding certain columns in the AP List.


----
A couple other screenshots:
(outdated)

[[Image:aplist_pass.png]]
[[Image:aplist_disc.png]]


[[Category:Wlan software]]
[[Category:Settings Applications]]
