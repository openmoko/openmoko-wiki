==Overview==
<pre>
Bus name: org.gnome.evolution.dataserver.Calendar
Object name: /org/gnome/evolution/dataserver/calendar/file____home_root__evolution_tasks_local_system
  interface org.freedesktop.DBus.Introspectable
    (data:s) Introspect()
  interface org.freedesktop.DBus.Properties
    (value:v) Get(interface:s,propname:s)
    () Set(interface:s,propname:s,value:v)
  interface org.gnome.evolution.dataserver.calendar.Cal
    () setDefaultTimezone(tzid:s)
    (tzid:s) addTimezone(tz:s)
    (object:s) getTimezone(tzid:s)
    (query_path:s) getQuery(sexp:s,address:s,listener_path:s)
    (attachments:as) getAttachmentList(uid:s,rid:s)
    (users:as,calobj:s) sendObjects(calobj:s)
    () receiveObjects(calobj:s)
    () removeObject(uid:s,rid:s,mod:u)
    () modifyObject(calobj:s,mod:u)
    (uid:s) createObject(calobj:s)
    () discardAlarm(uid:s,auid:s)
    (freebusy:as) getFreeBusy(user_list:as,start:u,end:u)
    (additions:as,modifications:as,removals:as) getChanges(change_id:s)
    (objects:as) getObjectList(sexp:s)
    (object:s) getObject(uid:s,rid:s)
    (object:s) getDefaultObject()
    () setMode(mode:u)
    (capabilities:s) getSchedulingInformation()
    (address:s) getLdapAttribute()
    (address:s) getAlarmEmailAddress()
    (address:s) getCalAddress()
    () isReadOnly()
    () remove()
    () close()
    () open(only_if_exists:b,username:s,password:s)
    (str_uri_copy:s) getUri()
    mode(arg1:i)
    readonly(arg1:b)
    backend-error(arg1:s)
    auth-required()
</pre>

==Introspect XML==
<pre>
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.freedesktop.DBus.Introspectable">
    <method name="Introspect">
      <arg name="data" direction="out" type="s"/>
    </method>
  </interface>
  <interface name="org.freedesktop.DBus.Properties">
    <method name="Get">
      <arg name="interface" direction="in" type="s"/>
      <arg name="propname" direction="in" type="s"/>
      <arg name="value" direction="out" type="v"/>
    </method>
    <method name="Set">
      <arg name="interface" direction="in" type="s"/>
      <arg name="propname" direction="in" type="s"/>
      <arg name="value" direction="in" type="v"/>
    </method>
  </interface>
  <interface name="org.gnome.evolution.dataserver.calendar.Cal">
    <method name="setDefaultTimezone">
      <arg name="tzid" type="s" direction="in"/>
    </method>
    <method name="addTimezone">
      <arg name="tz" type="s" direction="in"/>
      <arg name="tzid" type="s" direction="out"/>
    </method>
    <method name="getTimezone">
      <arg name="tzid" type="s" direction="in"/>
      <arg name="object" type="s" direction="out"/>
    </method>
    <method name="getQuery">
      <arg name="sexp" type="s" direction="in"/>
      <arg name="address" type="s" direction="in"/>
      <arg name="listener_path" type="s" direction="in"/>
      <arg name="query_path" type="s" direction="out"/>
    </method>
    <method name="getAttachmentList">
      <arg name="uid" type="s" direction="in"/>
      <arg name="rid" type="s" direction="in"/>
      <arg name="attachments" type="as" direction="out"/>
    </method>
    <method name="sendObjects">
      <arg name="calobj" type="s" direction="in"/>
      <arg name="users" type="as" direction="out"/>
      <arg name="calobj" type="s" direction="out"/>
    </method>
    <method name="receiveObjects">
      <arg name="calobj" type="s" direction="in"/>
    </method>
    <method name="removeObject">
      <arg name="uid" type="s" direction="in"/>
      <arg name="rid" type="s" direction="in"/>
      <arg name="mod" type="u" direction="in"/>
    </method>
    <method name="modifyObject">
      <arg name="calobj" type="s" direction="in"/>
      <arg name="mod" type="u" direction="in"/>
    </method>
    <method name="createObject">
      <arg name="calobj" type="s" direction="in"/>
      <arg name="uid" type="s" direction="out"/>
    </method>
    <method name="discardAlarm">
      <arg name="uid" type="s" direction="in"/>
      <arg name="auid" type="s" direction="in"/>
    </method>
    <method name="getFreeBusy">
      <arg name="user_list" type="as" direction="in"/>
      <arg name="start" type="u" direction="in"/>
      <arg name="end" type="u" direction="in"/>
      <arg name="freebusy" type="as" direction="out"/>
    </method>
    <method name="getChanges">
      <arg name="change_id" type="s" direction="in"/>
      <arg name="additions" type="as" direction="out"/>
      <arg name="modifications" type="as" direction="out"/>
      <arg name="removals" type="as" direction="out"/>
    </method>
    <method name="getObjectList">
      <arg name="sexp" type="s" direction="in"/>
      <arg name="objects" type="as" direction="out"/>
    </method>
    <method name="getObject">
      <arg name="uid" type="s" direction="in"/>
      <arg name="rid" type="s" direction="in"/>
      <arg name="object" type="s" direction="out"/>
    </method>
    <method name="getDefaultObject">
      <arg name="object" type="s" direction="out"/>
    </method>
    <method name="setMode">
      <arg name="mode" type="u" direction="in"/>
    </method>
    <method name="getSchedulingInformation">
      <arg name="capabilities" type="s" direction="out"/>
    </method>
    <method name="getLdapAttribute">
      <arg name="address" type="s" direction="out"/>
    </method>
    <method name="getAlarmEmailAddress">
      <arg name="address" type="s" direction="out"/>
    </method>
    <method name="getCalAddress">
      <arg name="address" type="s" direction="out"/>
    </method>
    <method name="isReadOnly">
    </method>
    <method name="remove">
    </method>
    <method name="close">
    </method>
    <method name="open">
      <arg name="only_if_exists" type="b" direction="in"/>
      <arg name="username" type="s" direction="in"/>
      <arg name="password" type="s" direction="in"/>
    </method>
    <method name="getUri">
      <arg name="str_uri_copy" type="s" direction="out"/>
    </method>
    <signal name="mode">
      <arg type="i"/>
    </signal>
    <signal name="readonly">
      <arg type="b"/>
    </signal>
    <signal name="backend-error">
      <arg type="s"/>
    </signal>
    <signal name="auth-required">
    </signal>
  </interface>
</node>

</pre>
