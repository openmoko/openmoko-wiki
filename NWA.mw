=Introduction=
WiFi on the freerunner has some problems, see [[WiFi Managers]].

So I decided to start a project to concentrate all the ideas about an ideal (but simple) GUI applet to manage WiFi connection.

The project is actually only a ''prealpha prototype'' to discover issues and implementation solutions. When ideas and needs will be clear it may be reimplemented in a more elegant way and with your preferred toolkit, now I'm using wath I know better, C++ and QT with fast and dirty coding style!

It actually manages wpa_supplicant with dbus and swapns udhcpc directly, replicating some Network Manager features. When a solid rock network manager will be available for the freerunner, and will handle the specific device capabilities/issues, NWA may be migrated to use it's api.

=Requirements=
==A supplicant==
The main target is to use wpa_supplicant in a decent way, e.g. as a supplicant! You'll add your preferred networks at home, at works, at your friend house and so on, and it will scan silently for them, will connect when available and show a notification window/sound to alert you.

User has to be able to:
* enable/disable configured networks
* change the network priority
* add new network directly or scanning the area
* configure advanced network properties, WPA enteprise, EAP, etc.

==Static IP vs DHCP==
The user may prefer to use static ip address configuration for some networks. This should be possible.

==System tray applet==
A sys tray applet should be showed changing it's aspect to reflect connection status and signal quality (possible with an historical rapresentation), and raising a window to change settings, brings actions when you click over it. Some special handling is required for Window Manager that does not support sys tray specification (like E17).

==Configuration==
The configuration file should be in xml format, a default one will be provided that scan and connect to any open network, so the user may use it out of the box. When the user changes settings the default file has to be copied in $HOME/.nwa.conf.

The GUI must be complete but simple and should not allow the user to break the configuration with random clicks, all advanced tasks may be achieved editing the configuration file manually:

* dhcp client to use
* custom scripts to launch at iface up/down, ip received
* ...
