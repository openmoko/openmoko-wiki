Хорошее начало разработки - получение rootfs, поскольку большинство из Вас не имеют настоящего оборудования.


== Получение rootfs ==
Используйте [[MokoMakefile|Building OpenMoko using the MokoMakefile]] чтоб получить rootfs, just before make openmoko-devel-image run 
 # sed 's/fic-gta01/x86/' build/conf/local.conf
than just run make openmoko-devel-image. After a while(half of day) you should have in build/tmp/image/ file openmoko-devel-image-x86-$(DATE).rootfs.tar.gz mine is here [http://www.ms.mff.cuni.cz/~kupem6am/openmoko-devel-image-x86-20070227064250.rootfs.tar.gz].

== Установка Xoo на Ваш хост ==
Для пользователей gentoo выполните
 # emerge xoo
для Debian/Ububuntu
 # apt-get install xoo xnest
остальные - найдите способ как это делается для Вашего дистрибутива.

== Создание X соединения ==
* Убедитесь, что iptables не перпятствует Вашему соединеию на порт 6000(x11) к localhost

* Убедитесь, что Ваши X слушают порт 6000(X11) на localhost (netstat поможет)

* Выполните соединение с localhost
 # xhost localhost
== Подготовка rootfs ==
* Распакуйте файлы rootfs в любой каталог и перейдите в него.

* Получите файлы устройств из rootfs
 # sudo mount --bind /dev/ rootfs/dev/

* Chroot to rootfs
 # sudo chroot rootfs /bin/sh
== Getting it up ==
In another term start xoo, good idea is to download [http://www.datenfreihafen.org/~stefan/OpenMoko/neo1973-xoo-device.tar.bz2] and run
 # xoo --device neo1973.xml
In chrooted enviroment export display to connect to started xoo
 # export DISPLAY=localhost:1.0
and start window manager.
 # x-window-manager
By this time you should have matchbox running in Xoo window.
