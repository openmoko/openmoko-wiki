{{Languages|Why_Openmoko}}

Questo articolo discute il perchè dell'esistenza del progetto Openmoko e mostra come Openmoko sia l'alternativa ‘open’ alle varie piattaforme proprietarie in commercio.

Al giorno d'oggi esistono diverse piattaforme mobile sul mercato. La situazione è molto simile all'ambiente dell'informatica desktop, dove ci sono diversi sistemi operativi come GNU/Linux, BSD, Mac OS X, Windows e molti altri. Per la maggior parte degli utenti avanzati e degli sviluppatori, Linux è la scelta migliore. Nel mondo mobile ci sono diversi sistemi operativi come Symbian, Windows Mobile, Blackbarry e Linux. Ma nessuna di queste sono realmente ‘open’. Sorpreso di vedere Linux nell'elenco? Linux nel mondo mobile è presente in diverse forme e misure, non molto compatibili l'una con l'altra. Per esempio, molti terminali LG utilizzano delle versioni di Linux scritte ad hoc da LG. Anche altre aziende fanno lo stesso, per esempio Motorola ecc... Per queste versioni di Linux però, non sono disponibili le sorgenti e le API con le quali gli sviluppatori e gli utenti avanzati possono divertirsi e controllare in tutti gli aspetti il dispositivo. Queste versioni di Linux si comportano esattamente come le altre piattaforme proprietarie.
 
Noi stiamo sviluppando una piattaforma mobile basata su Linux chiamata Openmoko, un progetto che combina l'essenza dell'Opensource con una ricca interfaccia di applicazioni. Openmoko è la reale conversione della versione desktop di Linux nel mondo dei dispositivi mobile. E' stato costruto con uno X-server standard, GTK, ALSA, Dbus e così via. Tecnologie ben note agli utenti e sviluppatori Linux. Il bello del progetto Openmoko è il fatto di possedere anche di un hardware completamente Opensource. Openmoko ha creato una piattaforma per lo sviluppo completo delle tecnolgie mobile. Tutti gli hacker troveranno il loro sogno farsi realtà!

==Cosa non va nelle altre piattaforme ? ==

Ecco perchè crediamo che Openmoko sia la scelta giusta tra le tante oggi disponibili.

===Symbian OS===

Il primo di cui parliamo è Symbian OS, considerato Windows del mondo mobile. Più del 75 % degli smartphones venduti oggi funzionano grazie a Symbian ed è ovviamente il sistema con il maggior numero di applicazioni sviluppate. E' sostenuto da aziende leader come Nokia, Motorola e Sony. Ma ci sono dei difetti ben evidenti in Symbian.

*'''Un sistema proprietario:'''Symbian è un sistema operativo proprietario sviluppato da Symbian Ltd, e la cosa peggiore di ciò è che utilizza programmi Open come GCC, Java, Perl e molti altri nel suo SDK, ma non condivide le migliorie che applica al proprio software con la comunità.

*'''Un ambiente di sviluppo ristretto:''' Symbian supporta solo Windows come ambiente di sviluppo delle proprie applicazioni. Non ci sono SDK ufficiali che permettono di essere usati su Linux o su Mac OS X. L'ironia della sorte è che la maggior parte delle applicazioni Symbian non funzionerebbero senza il supporto di programmi Opensource.

*'''Bassa compatibilità con le versioni precendenti:'' Ciascuna nuova versione presentano cambiamenti voluti nel codice in modo da impedire la recompilazione dei programmi già esistenti. Gli sviluppatori devono così riscrivere ogni volta il software quando esce una nuova versione di Symbian.

*'''Requisiti di sistema a basso tasso di longevità:''' I telefoni Symbian richiedono dei requisiti di sistema molto moderni. Ogni versione successiva richiede molte volte l'aggiornamento o la sostituzione del telefono. Uno smartphone costruito 2 anni fa può essere considerato spazzatura confrontato ai requisiti minimi di Symbian.

*'''Difficile da programmare:''' Anche se offre un ricco set di API, ci sono molte difficoltà nella programmazione Symbian. Potresti dire che Symbian supporta molti linguaggi di programmazione, ma ricorda -se davvero vuoi programmare in Symbian devi sapere che il Symbian C++ è molto differente dagli standard C++, e possiede una curva d'apprendimento molto lunga e difficile.

*'''Interfacce utente confuse:''' Symbian usa due diverse e incompatibili piattaforme per l'interfaccia utente- chiamate, S60 (Series 60) e User Interface Quartz (UIQ). Per gli sviluppatori è un bel rompicapo combinarle e per iniziare a sviluppare devi conoscere i dettegli specifici di ognuna.

*''Basso supporto per gli sviluppatori:''' A partire da Symbian 9, la compagnia ha iniziato a guardare con diffidenza i cosiddetti "third-party developers", gli sviluppatori indipendenti. La maggior parte delle caratteristiche dei telefoni sono disponibili ai soli iscritti al programma Symbian Signed. Se non sei membro del programma Symbian Signed non sarai mai in grado di inserire nelle tua applicazioni alcune caratteristiche core del sistema. 

*'''Blocco versione:''' Symbian non supporta l'upgrade a versioni successive del sistema. Dovrai rimanere con la versione in uso sul tuo dispositivo , anche se sono stati scoperti dei bug pericolosi o dei malfunzionamenti. 

*'''Symbian è solamente un OS mobile:''' Non potrai usare le tue abilità che già conosci per sviluppare in Symbian, in altre parole, non potrai usare quello che imparerai sviluppando Symbian in altre occasioni.

===Windows Mobile===

Considerando i vari difetti di Symbian, possiamo dire che non è proprio come WIndows nel mondo desktop, anche se si avvicina molto. Windows è comunque meglio di Symbian in qualche modo. Possiede un buon supporto per gli sviluppatori e possiede una ricca documentazione. Visual Studio è un'ambiente di sviluppo molto buono. Ma ci sono alcune cose che non ci piacciono riguardo a Windows Mobile. 

*'''Microsoft vendor lock:''' Non c'è niente di peggio di vendor lock. Se acquistiamo un telefono compatibile con Windows Mobile ,ma ha possiede un altro OS, non potremmo comprare una versione da installare.

*'''Software proprietario:''' Non c'è bisogno di stressarvi su di questo, no?

*'''Predominio Microsoft:''' Microsoft sviluppa oltre che Windows, molte altre tecnologie e prodotti. In Windows e in particolare a Windows Mobile si viene obbligati ad utilizzare questi prodotti senza avere una vera scelta. Per esempio, in Windows Mobile 6 sono stati fatti molti miglioramenti al sistema email e calendario, ma erano applicate solo ad Exchange Server 2007. O, per esempio, non puoi usare le DirectX 10 se no hai Windows Vista. Questi sono solo alcuni dei trust di Microsoft, storie che sono state discusse dai vari anti-trust e dalla Commissione Europea.

*'''Scarsa disponibilità delle API:''' Non tutte le API di WIndows sono disponibili agli sviluppatori di terze parti. Potresti dover accettare un NDA con Microsoft prima di vedere una tua applicazione sfruttare l'ultima API di Windows Mobile.

===iPhone===

L'iPhone in questi ultimi tempi sta riscuotendo un successo record. iPhone non è esattamente una piattaforma mobile, ma è un nome commerciale. Ecco qui le pecche del sistema:

*'''Apple total vendor lock:'''Il telefono e il sitema sono bloccati totalmente ad Apple. In più molte compagnie telefoniche impongono anche il SIM Lock rendendolo inutilizzabile con altri operatori.

==Perchè Openmoko è la scelta giusta==

Linux è la via migliore per la programmazione. E infatti Openmoko è basato su Linux. Ed ecco il perchè Openmoko è la scelta giusta:

*'''Opensource:''' E' totalmente opensource, sotto ogni punto di vista. Infatti non solo il software, ma anche l'hardware sono completamente Opensource.

*'''Costruito dall' Opensource:''' Openmoko è basato su solide basi Linux e possiede già un bagaglio di applicazioni Opensource molto popolari sulla quale si sta costruendo lo sviluppo del dispositivo.

*'''Sviluppo multi-piattaforma:''' L'SDK di Openmoko è supportato per Linux ovviamente, ma anche per Windows e Macintosh, permettendoti il massimo di libertà.

*'''Semplice sviluppo di applicazioni:''' Openmoko fa uso di tecnologie Opensource famosissime e utilizzatissime. Tutti i programmatori Linux si troveranno a casa dato che sono implementate tecnologie quali GTK, X server, ALSA e così via.

*'''Bassa richiesta hardware:'''Openmoko richiede dei componenti hardware molto modesti per il suo funzionamento.

*'''Ottimo supporto per sviluppatori:''' Chiunque abbia seguito il progetto fin dai suoi albori può confermare come la comunità offra un grosso supporto sia agli utenti che agli sviluppatori. C'è sempre qualcuno pronto ad aiutarti per risolvere i tuoi problemi.

*'''Un ricco set di API:''' Openmoko possiede  un ricco set di API, di cui alcune scritte esclusivamente per il progetto Openmoko, mentre altre derivate da vari progetti Opensource. Openmoko ti permette quindi di usare le tue abilità Linux per sviluppare quello che sarà la piattaforma mobile del futuro.

==L'architettura Openmoko==

L'architettura Openmoko è molto semplice, ma molto potente. La maggior parte dei componenti è basata su tecnologie Opensource già esistenti. Comunque sono state sviluppate anche tecnologie unicamente per il progetto Openmoko. Openmoko è composto principalmente dai seguenti componenti 
[[Image:Software1.jpg]]

*'''Linux kernel 2.6 e relativi driver:''' Il progetto fa uso del Vanilla kernel 2.6 series, modificato appositamente. Le modifiche includono supporto aggiuntivo per i vari device utilizzati come USB, SD, Touch Screen, Wifi, GSM, GPRS, GPS. Tutti questi driver sono inseriti nel kernel e caricati durante il tempo di boot.
*'''Linux Core services:'''

** '''udev:''' E' il gestore dei componenti e tutti i nodi nel /dev filesystem. udev garantisce uno standard per l'interazione dei vari componenti.
** '''blueZ''' E' lo stack ufficiale per la gestione del Bluetooth in Openmoko. Si basa su LinuxBluetooh. Gestisce tutte le attività bluetooth del dispositivo.
** '''Dbus:''' Garantisce un framework IPC (inter-process communication). In altre parole, Dbus permette alle applicazioni di comunicare l'una con l'altra,
** '''GSM:''' E' composto da GSM (il core per il modulo GSM), GSMd (il demone che gestisce il funzionamento GSM) e libgsm (un API per comunicare con il GSM subsystem).
** '''GPS:''' E' composto da GPS (il core per il modulo GPS) e da GPSd (il demone che gestisce il funzionamento del sistema GPS)

* '''L'interfaccia utente (UI)'''

**'''kdrive:''' E' il server X per le piattaforme mobile ed embedded, è eseguito direttamente su un dispositivo frame-buffer e supporta OpenGL.
**'''matchbox:''' E' un windows menager per piattaforme embedded. Matchbox è diventato molto popolare dopo la sua recente adozione nel progetto Nokia's Linux Tablet e nel progetto One Laptop Per Child.
**'''GTK:''' Un toolkit croos-piattaforma per widget. GTK è utilizzato anche in GNOME.
**'''ALSA:''' Advanced Linux Sound Architecture (ALSA) garantisce le funzionalità audio. ALSA è gia popolare nei sistemi Linux e parte del kernel standard.
**'''Qtopia:''' E' il robusto e a livello commerciale della piattaforma per cellulari e PDA sviluppata da Trolltech.

* '''Il framework per le applicazioni:'''

**'''Core (libmokocore):''' Garantisce le funzionalità del framework, come lo switching fra componeti, scrittura e lettura dati, ecc... Fa uso dei pacchetti Dbus e Gconf.
**'''.Net (libmokonet):''' Garantisce le funzionalità di network del framework. Usa libgsm, bluez-lib e libgps.
**'''UI (libmokoui):''' Garantisce le funzionalità delle UI alla piattaforma ed usa GTK ed ALSA. Lo standard GTK è stato modificato per garantire una ricca esperienza di sviluppo per le applicazioni mobile.
**'''PIM (libmokopim):''' Garantisce il core PIM (Personal Information Management). Usa un'implementazione del server dati Evolution.

==In Breve==

Questa è solo una breve guida alla piattaforma Openmoko. Openmoko è perfetto come banco di lavoro per utenti Linux e programmatori. Non offre quindi ancora le caratteristiche che gli utenti base desiderano (fotocamera, Edge/3g)  e non possiede ancora una stabilità che ne può garantire l'utilizzo in situazioni d'emergenza. Ma questo è l'inizio di una rivoluzione nel mondo mobile. Unisciti a noi nel suo sviluppo e contribuisci alla crescita di Openmoko. Insieme stiamo forgiando il futuro del mondo dei dispositivi mobile.
Potrai trovare altre informazioni utili in questo wiki.
Con il tuo aiuto Openmoko può diventare una realtà importante.
Guarda la sezione [[Distributions]] per vedere le varie distribuzioni realizzate per il progetto Openmoko. Se non sei di Linux, una distribuzione è praticamente come una sistema operativo, solo che nel mondo Linux le basi e le tecnologie sono le stesse (framework, API, ecc...). Cambiano solamente alcune caratteristiche e alcune differenze nella UI.

[[Category:Distributions/it]]
