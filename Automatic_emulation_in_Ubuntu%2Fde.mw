== Installation ==

Du hast sicher gehört, dass es ein geniales Tool gibt um eine Openmoko-Emulation auf einem Ubuntu zu installieren; das MokoMakefile.
Dieses File ist eine Sammlung von wrapper mit diversen Instruktionen, so dass es relativ einfach ist, eine funktonierende Entwicklungsumgebung zu erhalten.
Wenn du das ganze MokoMakefile erstellen willst, brauchst du knapp 12GB Speicherplatz, eine Swap und Arbeitsspeicher mit je 1GB und fast 5 Stunden Zeit. In diesem Tutorial erstellen wir das MokoMakefile nur für Qemu und dazu brauchst du ca. 890MB und 15min Zeit.

Um die Emulation so zu erstellen, musst du dein Ubuntu ein bisschen anpassen (keine Angst, das wird dein System nicht beschädigen, andere Programme und alles funktioniert wie zuvor).

* Öffne dein Terminal (Applications->Accessories->Terminal).
* Gib folgenden Befehl ein und wähle NEIN wenn du gefragt wirst, ob dash als /bin/bash installiert werden soll

   sudo dpkg-reconfigure dash

* Installation der benötigten Programme unter Hardy Heron 8.04 (Das Passwort wird verlangt): 

     sudo apt-get install monotone git-core git-svn git-email \
 git-cvs git-arch gitk python-dev ccache m4 sed bison make cvs gawk \
 libc6-dev g++ subversion sharutils docbook openjade quilt libmpfr-dev \
 libpcre3-dev texinfo texi2html libboost-date-time-dev libboost-filesystem-dev \
 libboost-regex-dev libboost-test-dev libboost-dev zlib1g-dev build-essential \
 dh-make debhelper devscripts gcc-3.4 lynx netpbm libsdl1.2-dev dosfstools \
 help2man python-psyco lynx

* Für ältere Versionen: (git-svn git-email git-cvs git-arch gitk ersetzt durch cogito)
    sudo apt-get install monotone git-core cogito python-dev ccache m4 sed bison \
 make cvs gawk libc6-dev g++ subversion sharutils docbook openjade quilt \
 libmpfr-dev libpcre3-dev texinfo texi2html libboost-date-time-dev \
 libboost-filesystem-dev libboost-regex-dev libboost-test-dev libboost-dev \
 zlib1g-dev build-essential dh-make debhelper devscripts gcc-3.4 netpbm \
 libsdl1.2-dev dosfstools help2man python-psyco lynx

Voila dein System ist ready zum Installieren von openmoko.

Jetzt werden wir Openmoko in ein Verzeichnis mit Hilfe des MokoMakefile installieren und kompilieren.

* Erstelle ein Verzeichnis und wechsle hinein: 

   mkdir openmoko
   cd openmoko
* MokoMakefile herunterladen: 

   wget http://www.rwhitby.net/files/openmoko/Makefile

* Erstelle das MokoMakefile und sag ihm, dass es für qemu installiert wird:

   make qemu

Dieser Befehl lädt die benötigten Files direkt von den neuesten Quellen und erstellt das MokoMakefile. Danach wird gleich der Emulator zum ersten Mal gestartet. Voila du hast nun erfolgreich openmoko auf deinem System installiert.

== Start Openmoko ==

* Öffne dein Terminal (Anwendungen->Zubehör->Terminal).
* Wechsle ins Verzeichnis: 

   cd openmoko

* Start mit dem MokoMakefile 

   make run-qemu

Jetzt lädt der Bootloader. Hier kannst du zwischen verschiedenen Optionen auswählen. Mit ENTER(=aux) kannst du auswählen und mit SPACE(=power) ausführen.

==Installation eines ipk Paketes==
Als erstes brauch man ein xxx.ipk Paket, siehe [[toolchain/de]] Wie man eine Anwendung für einen ARM Prozessor kompiliert und ein Paket erstellt.

Hinweis: Sollte zu diesem Zeitpunkt Openmoko über QEMU laufen, ist es wahrscheinlich eine gute Idee, diese vorher zu beenden.
Dann kann man das xxx.ipk Paket erstellen:

 cd openmoko
 mkdir -p build/tmp/deploy/glibc/ipk/a
 cp xxx.ipk build/tmp/deploy/glibc/ipk/a/xxx_a.ipk
 make qemu-copy-package-xxx

''Hinweis: Aus irgendeinem Grund sucht qemu-copy-package-xxx nach der obigen Quelldatei.
Vielleicht kann dieser Teil verbessert werden oder ein anderer Befehl kann das Problem der Erstellung dieses Verzeichnisses
übernehmen.''

Wenn der obige make-Befehl erfolgreich war, muss beim nächsten Start von Openmoko Qemu die Anwendung noch in der Anwendungsliste
verfügbar gemacht werden. Dafür kann man in Openmoko das Programm Terminal starten. (Das Symbol "+" auswählen, dann Applications
und dann "Terminal").
In den Terminal ein Doppel-Klick, damit man den Befehl eingeben kann:
 opkg install /media/mmcblk0/xxx_a.ipk
 exit
Nach dem exit-Befehl sollte man wieder zurückkommen in die Liste, wo die neu hinzugefügte Anwendung aufgeführt sein sollte,
unter dem Namen der bei der Paketerstellung ausgewählt wurde.

== Update Openmoko ==

* Öffne dein Terminal (Applications->Accessories->Terminal).
* Wechsel ins Verzeichnis: 

   cd openmoko

* Update mit dem MokoMakefile 

   make qemu

== Extras ==

== Probleme ==
Wenn du irgendwelche Probleme hast, kannst du hier Fragen stellen.

[[Category:Emulation]]
