{{Languages|Howto create an OpenWrt image for the FreeRunner}}

== Use pre-built image ==
Ready-to-flash images will be available soon.

== Build custom image ==
=== Fetching OpenWrt trunk ===
First you have to create a svn checkout of the OpenWrt base system

 svn co svn://svn.openwrt.org/openwrt/trunk openwrt

The command will fetch the OpenWrt base system and put it into the openwrt subfolder of your current working directory. From now on this HOWTO assumes that your working direcory will be the newly created openwrt folder. 

 cd openwrt

=== Add packages from extra feeds ===
Although this is sufficient enough to build an image for the freerunner you will not be able to build a lot of packages useful on your phone. Those packages are in extra feeds. To enable those feeds:

 cp feeds.conf.default feeds.conf

Then edit your feeds.conf and enable the efl (for enlightenment) and phone (for fso, paroli, ...) feeds, by removing the '#' at the beginning of these lines, so that it might look like:

 src-svn packages svn://svn.openwrt.org/openwrt/packages
 src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package
 src-svn luci http://svn.luci.subsignal.org/luci/branches/luci-0.8/contrib/package
 src-svn phone svn://svn.openwrt.org/openwrt/feeds/phone
 src-svn efl svn://svn.openwrt.org/openwrt/feeds/efl
 src-svn desktop svn://svn.openwrt.org/openwrt/feeds/desktop
 #src-svn xfce svn://svn.openwrt.org/openwrt/feeds/xfce

Please mind that this config does not define what packages will be compiled - it just defines which package-descriptions (OpenWrt-Makefiles) will be fetched which will be listed within the menuconfig later.

After that update your feeds to download the OpenWrt-Makefiles of these packages and provide (install) them

 scripts/feeds update -a
 scripts/feeds install -a

=== Configure target and packages ===
Now you'll have to select the target platform for the freerunner. Run

 make menuconfig

and select s3c24xx as the Target System. As Target Profile you have to choice between 
* '''Openmoko GTA-02 (full)''': This is the one you probably want since it has enlightenment and paroli preselected.
* '''Openmoko GTA-02 (minimal)''': This profile contains only the basic OpenWrt packages, so you'll only get a shell and some command-line utils.

You now can also select additional packages you want to be installed in your image. Make sure you select as build in [*] else [M] you'll only get the packages but they will not be in the image, but can be installed later on.

You maybe also want to change the IP address under which the freerunner will be reachable. To do so select "[*] Image configuration". In its submenu you can change the images network configuration.

Per default OpenWrt is using the uclibc as libc implementation. You can use another libc (e.g. the glibc) by changing that via "[*] Advanced configuration options (for developers)" -> "---   Toolchain Options" -> "LIBC implementation".

=== Build your OpenWrt image ===
If your done configuring the image you can build it by just running:

 make

'''Warning:''' OpenWrt build system have more or less requirements depends on selected packages. Using GTA-02 full profile, we need: 
* ''subversion'' and git to retrieve some external sources. (On Debian Lenny: ''subversion git-core'')
* full ''autotools'' suite. (On Debian Lenny: ''automake autoconf autotools-dev libtool pkg-config'')
* ''dbus-binding-tool'' to be able to compile "gsm0710muxd". (On Debian Lenny: ''libdbus-glib-1-dev'')
* ''autopoint'' and ''cvs'' is used by enlightenment building process. (On Debian Lenny: ''gettext cvs'')

This will now take some time. Please make sure you have enough free space left (~4 GB for full-profile).
Instead you can use "make V=99" to get debug output to see what's going on / went wrong.

=== Flash Neo FreeRunner ===
When the build process is finished you will find a rootfs (openwrt-s3c24xx-2.6-root.jffs2-128k) and a kernel image (openwrt-s3c24xx-2.6-uImage) in the bin/ subfolder of your OpenWrt installation, which can be installed on your freerunner with the [[Dfu-util|dfu util]] as normal.

=== Try it ! ===
After flashing both images, reboot your phone and depending on what packages were built into the image (which are the packages you've selected) you might be able to initiate and receive phonecalls with your FreeRunner running OpenWrt :)

You can also reach the Freerunner over [[USB_Networking|usb network]] as usual but Freerunner under OpenWrt have 192.168.1.1 IP address as default.
To be able to SSH your phone, you must setup a password using telnet:

 $ telnet 192.168.1.1
 Trying 192.168.1.1...
 Connected to 192.168.1.1.
 Escape character is '^]'.
  === IMPORTANT ============================
   Use 'passwd' to set your login password
   this will disable telnet and enable SSH
  ------------------------------------------
 .
 BusyBox v1.13.4 (2009-07-06 01:59:55 CEST) built-in shell (ash)
 Enter 'help' for a list of built-in commands.
 .
   _______                     ________        __
  |       |.-----.-----.-----.|  |  |  |.----.|  |_
  |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
  |_______||   __|_____|__|__||________||__|  |____|
           |__| W I R E L E S S   F R E E D O M
  KAMIKAZE (bleeding edge, r16703) -------------------
   * 10 oz Vodka       Shake well with ice and strain
   * 10 oz Triple sec  mixture into 10 shot glasses.
   * 10 oz lime juice  Salute!
  ---------------------------------------------------
 root@OpenWrt:/# passwd
 Changing password for root
 New password:
 Retype password:
 Password for root changed by root
 root@OpenWrt:/#

==Congratulations!==

Please help us making this site better! Give feedback on the mailinglist (Openmoko as well as OpenWrt), change this site, file bug-reports or just tell us how much you love OpenWrt ;)

[[Category:Application Developer]]
[[Category:System Developers]]
