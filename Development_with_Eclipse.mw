A graphical Openmoko application is a gnome-based X application. Hence it is usually easy to build, run and debug it as program for the desktop computer, uploading to the mobile phone only for the final stage of debugging. Even from the mobile phone, it is possible execute the program on the phone and still use the screen, mouse and keyboard of the desktop computer to observe its work. This article describes instructions for Debian, but they will likely work with any non broken Linux distribution.

Eclipse recently has the C/C++ development plug-in. You will need the recent Eclipse, this plug-in and you may need to upgrade the GTK development packages. The easiest way to get the simple application running is to create the managed C project and add `pkg-config --cflags --libs gtk+-2.0` both to the compiler options and to linker flags. After that, go to [http://library.gnome.org/devel/gtk-tutorial/stable/ GTK tutorial] and try, using it, to compose a simple application. 

This approach not only shortens development cycle from minutes to seconds, but also allows to use the Eclipse debugger for C development, stepping through the code and watching variables. 

The executable for the mobile phone can usually be produced from the same source files using the Openmoko toolchain. As all surroundings of these files for Eclipse and Openmoko project are not the same, the most straightforward approach is just to set two development environments and put the symbolic links of the source files into the Openmoko project directory. 

After producing the Openmoko executable, it may be reasonable to try it via X, using the keyboard, mouse and screen of the desktop computer. All you need is to use the  -X option in the ssh command when you log in into the connected mobile phone. After that, you should be able to run the application inside the phone but have its X window on a screen of the desktop machine. This way you can check the actual execution speed and have access to the mobile phone devices that are not present on PC.

Eclipse allows to add the custom builder to the project. These builders can be either Ant scripts or the executable shell scripts. These possibilities can be used to force the Openmoko toolchain to produce the phone executable without leaving the Eclipse IDE.

== Set up Freerunner build Config == 

# install [[Toolchain]]
# open 'Properties' for your C or C++ Project
# select 'C/C++ Build'->'Tool Settings'
# click on 'Configuration'->'Manage' and create new configuration eg. Freerunner (copy settings from 'Relase' configuration)
# change GCC C||C++||Assembler Compiler command to '''/usr/local/openmoko/arm/arm-angstrom-linux-gnueabi/bin/gcc||g++||as'''
# change GCC Linker Command to '''/usr/local/openmoko/arm/arm-angstrom-linux-gnueabi/bin/gcc (g++ for C++ project)'''
# go to 'Build Steps' and add ". /usr/local/openmoko/arm/setup-env" to 'Pre-build step'
# click Ok and select 'Freerunner' in 'Active Build Configuration' for your Project

You can copy your binary to Freerunner by adding Post-Build command in 'Build Steps' eg. 

 scp ${project_name} root@neo:/home/root/dev_app/

or you can Run you application on Freerunner by adding Run configuration 

 C/C++ Application: /usr/bin/ssh
 Arguments: root@neo "cd dev_app && DISPLAY=:0 ./${project_name}"

--[[User:PipBoy2000|PipBoy2000]] 22:30, 9 September 2008 (UTC)

[[Category:Application Developer]]
[[Category:Guides]]
