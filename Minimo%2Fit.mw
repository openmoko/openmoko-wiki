= Installazione del web browser Minimo =

[http://www.mozilla.org/projects/minimo/develop.html Minimo] Ã¨ un web browser basato su Mozilla. Ha un supporto integrale al AJAX e possiede altri vantaggi. Attualmente OpenMoko non include Minimo. Qui sono riportate le istruzioni per far funzionare Minimo con Xephyr e come usare altri software di terze parti. 

* [http://bec-systems.com/web/content/view/59/9/ Istruzioni per includere nuovi software OpenEmbedded al tuo progetto]

== Setup build environment ==

Se hai compilato il tuo OpenMoko usando MokoMakefile alcuni di questi steps potrebbero esserti poco familiari.

Assumiamo che la tua directory root di OpenMoko sia ~/workspace/moko

Prima devi definire le variabili d'ambiente:
<pre>
moo@hacker:~/workspace/moko/build$ . ../setup-env 
</pre>

Poi prendi minimo dal repository OpenEmbedded:
<pre>
moo@hacker:~/workspace/moko/build$ bitbake minimo
</pre>

Edita local.conf e aggiungi Minimo per compilare la lista di dipendenze.

<pre>
MACHINE = "qemux86"
DISTRO = "openmoko"
BUILD_ARCH = "i686"
INHERIT += " devshell"
SRCDATE_eds-dbus = "now"
DISTRO_EXTRA_RDEPENDS = "minimo"
</pre>

After local.conf has added new packages, one must refresh bitbake tasks.

<pre>
bitbake task-base -crebuild
</pre>

Now, you should be able to rebuild root fs using MokoMakefile.

<pre>
make openmoko-devel-image
</pre>


The default OpenMoko distribution lacks ''/etc/resolv.conf'' file which is used to configure system DNS look-up. Without this file, failing  domain name look-up prevents web browsing. The easiest way to fix is to copy the host system resolv.conf to the rootfs.

<pre>
moo@hacker:~/workspace/moko$ cp /etc/resolv.conf rootfs/etc/resolv.conf
</pre>

== In chroot'ed environment ==

Following instructions in [[Getting OpenMoko working on host with Xephyr]] to get yourself chroot'ed into OpenMoko environment. 

Start Xephyr. You don't need to start OpenMoko session, minimo can run as is. 

<pre>
/ $ minimo  
</pre>
{{Languages|Minimo}}
