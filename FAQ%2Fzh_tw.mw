{{Languages|FAQ}}

== 開始使用 Neo FreeRunner == <!-- Do not rename section! This section is linked from pages which linked to Getting_Started_FAQ. -->

=== 收到 Neo FreeRunner後，要如何開始使用？===

你可以參考 [[Getting_Started_with_your_Neo_FreeRunner| Neo FreeRunner使用說明]]，開始使用Neo FreeRunner.

=== 遇到操作難題時，有何管道可以取得幫助？ ===

1.首先，請在FAQ頁中尋找答案。 

如果你的問題無法在這裡找到答案，你可以搜尋[http://lists.openmoko.org/mailman/listinfo/community community] or [http://lists.openmoko.org/mailman/listinfo/support 支援] 郵寄清單。

接著，試著使用 Google search。

若您還是無法找到問題的答案，請將問題張貼到適合的郵寄清單，如 [http://lists.openmoko.org/mailman/listinfo/community 社群清單] 或 [http://lists.openmoko.org/mailman/listinfo/support 支援]. 

提供你想要暸解的問題的詳細資訊，並且使用"標題"欄，把你的問題簡略的在當中描述說明。你可以在這個連結中找到適合發問的方式。
[http://www.catb.org/~esr/faqs/smart-questions.html]

若你的問題有"機密性"的需求，你可以與 [mailto:michael@openmoko.org Michael Shiloh] 直接連絡。

你也可以找尋[[Openmoko_Local_Groups|Openmoko 區域使用者]]，在本地即取得支援。區域使用者會較mail往返，來的有效而省時，並可以省掉衍生出的誤解的可能。 (若您無法找到當地使用者，不妨從你開始，加入這個區域團隊!)

=== 我想要使用Openmoko或者是Neo FreeRunner來開發客製化的產品，或者應用程式，我要如何進行？ ===

請寫信給 michael@openmoko.org 或者 steve@openmoko.com，即可直接與Openmoko代表取得連絡。

=== 要到哪裡取得最近的下載？ ===

請連到[[Download|下載]]取得連絡。

==Openmoko==

===Openmoko?===
Openmoko 代表著二層意義：

Openmoko 是一個Linux 的套件，它被設計為一個開放式的計算平算。而這個開放式的平台所代表的，並不僅止於「手機」這項功能。

Openmoko 也是Openmoko Linux 套件背後的開發公司名。Openmoko同時也製造手機，如 Neo FreeRunner。

===這個專案的主要目地是什麼？===

藉由提供完整的開放源碼Linux 套件，並透過開放機構及CAD檔案，Openmoko的目標在於提供創新( 如從個人電腦出發 ) ，連接手持式計算、手機及無所不在的運算裝置。

===我要如何加入開發Openmoko專案的計劃？ ===

請加入一個或以上的郵寄清單( mailing lists )。 加入專案開發最好的開始點，就是 community list。

瀏覽 wiki，加入，並且與我們一起改進它。

從 [http://projects.openmoko.org/ Openmoko project]開始加入。

從加入區域性團體開始。

===我不是開發人員，但我有其它的技術，我可以加入嗎？===

當然，如果你是視覺設技師，你可以幫忙設計圖示，如果你是音樂創作者，你可以創作手機音樂。如果你是行銷人員、業務，傳播人員，你可以加入community mailing list，介紹自己，不久，你就可以在社群中找到適合的位子。

== Neo FreeRunner - 簡介/概觀==

=== [[Neo FreeRunner]]是什麼 ？ === 

[[Neo FreeRunner]]針對Openmoko Linux套件所設計的開放性的手機。「開放」，指的是 (a) 所有選定的晶片組都允許他們的驅動程式是完整的開放源始碼，及(b) 機構及CAD檔案，也可以隨時被下載使用。

關於更詳盡的資訊關於更詳盡的資訊，你可以查看 [[Neo FreeRunner|Neo FreeRunner 規格介紹 ]]

=== Neo FreeRunner可以用來做什麼？ ===

Neo FreeRunner 在Openmoko 團隊及社群持續的更新軟體開發下，將成為可以做為日常生活中可以使用的裝置。

Openmoko軟體目前並無法達到這個目標。

問題在於這支手機做不到什麼 - 相較於一般與GPS、藍芽、WIFI及加速器整合的封閉式的手機，它將會有許多軟體可以提供給一般使用者及開發人員。

=== 相較於封閉式手機，開放式手機的優勢在哪？===

一般封閉式的手機，都與手機網路商相互合作，提供你與他們的商業模式相符的服務。 而智慧型手機裝置了GPS、Wifi、藍芽等功能，但這些功能已被"封鎖"，因為，這些功能無法與他們配合的廠商整合運作。直到目前為止，要購買到一支，你可以自由的安裝軟體，並且不被配合廠商支配 - Openmoko扭轉了這個局面！

在[[Problems of typical "closed" phones|典型的封閉式手機所隱含的問題]]一文中，你可以找到更多相關的內容。

=== 如何將您對下一代 Neo的開發意見告訴我們？ ===

請加入 [http://lists.openmoko.org mailing lists] 加入我們的討論。

=== 採購 / 運送 / 版本 ===

==== 在哪裡可以購買[[Neo FreeRunner]]？多少錢？====

http://www.openmoko.com。

我們透過直營網站及經銷商銷售體系，銷售我們的產品。

若你透過Openmoko 網路商店購買Neo FreeRunner，你可以用 $399 的價格取得[[Neo FreeRunner]]，USD $99 購買debug board。你也可以一次採購 10 組 FreeRunner，則可以 USD $369 的價格取得。若你無法一次購足十支手機，你可以參加[[Group_sales|團購名單]]，購買產品。

==== Neo FreeRunner可以使用的頻率為何？在我所在的地區可以使用嗎？ ====

* Neo FreeRunner是一個三頻的 GSM手機。在北美，它可以使用 850/1800/1900MHz等版本，在其它的國家可以使用 900/1800/1900MHz 等頻率。

==== 我需要用到debug board嗎 ==== 

在擁有 Neo FreeRunner 及沒有 debug board的狀況下，你可以進行：
* Kernel 開發
* 應用程式開發
* 更新u-boot (如同更新 PC 上的 BIOS)。 Neo 1973 使用者可以使用測試的映像檔以避免Neo 1973上的bricking 問題發生。但 FreeRunner 的使用者則沒有這個問題，在NOR 上損壞的 u-boot 可以永久的被更新。

* 使用[[Dfu-util]]更新 kernel 及/或 rootfs。

使用debug board，你可以做些什麼？
* 使用JTAG針對u-boot、裝置驅動程式或Kernel偵錯。
* 使用kernel console
* 在寫入了錯誤的u-boot映像檔時，Neo 1973 使用者可以unbrick 他們的裝置。
* Neo FreeRunner 使用者可以在NOR記憶體中更新u-boot。

即使用 Neo FreeRunner 的使用者較少會需要用到debug board。

再次強調，在開發程式、kernel 或者是裝置驅動程式時，並 '''不''' 需要使用debug board。debug board 並不是用來存取原始碼或者，它是一個開發工具。

==== 我可以在何處找到運送有關的相關資訊? ==== 

請參訪 [http://www.openmoko.com/ openmoko.com]。

=== 我要如何找到你所使用的硬體版本資訊？ ===

:cat /proc/cpuinfo

請找到"Revision"這段文字，會有一個四位數字以 "0350"型態表示，'5'為硬體版本。

== Neo FreeRunner 已知的問題==

=== 軟體議題，套件類 ===

目前套件與軟體有關的問題，你可以查看 - [[Distributions|套件]]頁取得資訊。

=== 韌體及硬體議題 ===

與韌體與硬體有關的內容，請參考 [[Neo_FreeRunner_Hardware_Issues|Neo FreeRunner硬體議題]]。

請注意，有些議題可能涵蓋了軟體及硬體等問題。

=== 篩選過的一般常見議題 ===

某些透過mailing lists篩選過的已知議題，描述如下：
==== 我的FreeRunner 不會進行手機網路登入的工作，我要如何處理？ ====

請參考 [[Neo_FreeRunner_Hardware_Issues#Some_SIMs_Don.27t_Work|SIM卡無法有效執行]]頁取得資訊。

==== SIM 卡相容性：sim卡無法使用時，要如何進行診斷？ ====

你可以查看 [[Manually_using_GSM|手段處理GSM使用]]頁，直到你取得 OK 訊息。 

關於更詳細的問題，你可以參考 [[FreeRunner_unable_to_work_with_3G_SIM_cards|FreeRunner無法與3G Sim卡交互使用]]及[[Carriers|手機系統商]]等內容取得資訊。

==== 是否有地方可以下載韌體修復GSM問題？====

GSM 韌體更新只適用Neo 1973，在更新中所用到的修復功能，目前都內含在 Neo FreeRunner中。

==== FreeRunner無法在連上充電器時使用？ ====

請參考[[Neo_FreeRunner_Hardware_Issues#Can.27t_boot_with_discharged_or_missing_battery|無法在非充電模式或未放置電池下使用FreeRunner]].

==== 更新 (dfu-util) -- dfu-util 找不到手機裝置 ====

簡單的說，在dfu-util可以使用前，你必須自NAND或者是NOR u-boot 選單中選取適當的模式。dfu-util 使用 USB DFU (Universal Serial Bus Device Firmware Upgrade) 協定，這個協定只允許在u-boot選單下執行，而不是透過完全啟動之後的乙太網路或者是USB執行。


Tip: 如果你只是認著使用不同的套件，你並不需要使用 dfu-util燒錄它們，你只要把新的套件放進 microSD 卡，並且從記憶卡啟動即可。請參考[[Booting from SD|自SD上啟動]]取得更多資訊。

要進入u-boot 選單：
# 按下 AUX 按鈕 
# 按下Power 按鈕，直到啟動電源並且出現開機選單
# 鬆開二個按鈕Release both buttons 
# 按下及放開　AUX 選取選單項目，如此選單就不會 time out ，並且開啟手機。 

你也可以參考下面的內容：
* [[Booting the Neo FreeRunner]]
* [[Bootloader#Device Firmware Upgrade]]
* [[Flashing the Neo FreeRunner]]
* [[Dfu-util]]

==== 為什麼音質很差或者是在打電話時出現嗡嗡的聲音？====
請參考 [http://wiki.openmoko.org/wiki/Neo_FreeRunner_Hardware_Issues#Poor_Audio_Quality this issue on the FreeRunner Hardware Issues page]。

====Suspend/resume 會破壞 SD 卡的分割表====

參考[[Neo_FreeRunner_Hardware_Issues#Suspend.2Fresume_corrupts_SD_card.27s_partition_table|FreeRunner硬體議題]]頁取得資訊。參考 [https://docs.openmoko.org/trac/ticket/1802 #1802]。
<math>Insert formula here</math>

==硬體及使用性相關問題==

=== 啟動 ===

==== 我要如何進入 U-boot? 如何選擇 NAND 或NOR FLASH? ====

請參考 [[Booting_the_Neo_FreeRunner|這裡]]

=== 電池及電池充電===

==== 預計的電池使用時間為多久？ ====
請參考 [[Neo FreeRunner (GTA02) Battery#Notes_about_expected_battery_life]] 及 [[Neo_FreeRunner_(GTA02)_Battery]]中與電池有關的相關資訊。

==== 我要如何使用隨機附贈的充電器啟用快速充電模式? ====
請參考 [[Forcing fast charge mode|快速充電模式]]。

==== Can the Neo FreeRunner charge when turned off? When suspended? ====

The Neo FreeRunner can '''not''' charge when turned off.

The Neo FreeRunner '''can''' charge when suspended.

==== Can the Neo charge and use devices on a USB hub at the same time? ====

See [[USB_host#Providing_power_to_run_and_charge_the_Neo_while_in_host_mode|here]]

===Wireless Connectivity===

====What kind of wireless connectivity does the FreeRunner have? ====

The FreeRunner has the following connectivity options:
* Tri-band GSM (850/1800/1900 MHz in North America, and 900/1800/1900 MHz, commonly referred to as "European tri-band", for other parts of the world). For a list of compatible service providers, see [[Neo1973 compatible cellphone providers]].
* GPRS Class12/CS4 2.5G (Not EDGE)
* Bluetooth 2.0 EDR
* WiFi: Atheros AR6K in [[GTA02#.22Phase_2.22_.28GTA02.2C_.22Mass_Market.22.29|GTA02]]. (No 3G in year 2007 models)


==== GSM/GPRS information ====

The following pages contain very useful information:

* [[Gsmd|GSM Daemon]]

* [[GSM|General GSM page]]

* [[Hardware:AT_Commands|AT commands]]

* [http://freeyourphone.de/portal_v1/viewtopic.php?f=21&t=295#p2956 Useful script for GPRS]

==== How do I get the WLAN working? ====

See [[GTA02 WLAN]]

==== How do I get the GPS working? ====

See [[GTA02 GPS]]

==== It takes a long time (10min+) before the FreeRunner gets the first GPS data/readings ====

See [[GPS Problems]].

==== How do I get Bluetooth working manually? ====

See [[Manually_using_Bluetooth]]

==== How do I use an external Bluetooth keyboard with the FreeRunner ? ====
..TBA..

====Can I bridge to an Ethernet (wired or unwired) network via a suitable Bluetooth enabled router? ====

Yes - see [http://gentoo-wiki.com/HOWTO_Configure_a_bluetooth_network_access_point this howto for how to configure a linux computer to act as such a router] and [[Bluetooth Support]].


=== USB ===

==== How do I connect a USB memory-stick etc? ====

This requires an adapter Mini-B 5-pole => Type A jack or an adapter jack => jack. See [[Host Mode]] for more information.

====Once I have such an adapter, can I use it to connect 2 Neos to each other?====

This question is equivalent to '''How to connect two [Unix/Linux] computers via USB cable and what sort of special cable is needed?''' -> http://www.linuxquestions.org/questions/linux-general-1/connecting-two-computers-with-a-usb-cable-data-cable-411073

It should work if one Neo is set to Host mode and the other one set to Device mode. One Neo could give power to the USB-port it the other Neo's battery is low. ''(I have to verify this)''

==== How do I use an external USB keyboard with the FreeRunner ? ====

Run:
 echo "host" > /sys/devices/platform/s3c2410-ohci/usb_mode
 echo "1" > /sys/devices/platform/neo1973-pm-host.0/hostmode

These commands will put the FreeRunner into powered USB host mode. After this, just plug in the keyboard and it'll work. Personally, I've made a .desktop file to switch into and out of host mode. 

To switch back to unpowered device mode just run:

 echo "device" > /sys/devices/platform/s3c2410-ohci/usb_mode
 echo "0" > /sys/devices/platform/neo1973-pm-host.0/hostmode

Finally you will need a 
USB Type A Female to Female adapter. For more details see
[[Specialized_USB_cables#Attaching_the_Neo_.28acting_as_a_USB_host.29_to_a_USB_device|here]]

=== Display ===

==== Can the phone play VGA video? ====

No, it can do about 20 fps QVGA with software, and something beetween QVGA and VGA playing MPEG-4 using hardware (at resonable fps). Scaling is also done with GPU hardware.

==== How to change the background picture of the root window? ====

{{Note|This probably differs for each distribution? Need to insert, or link to, relevant info for each. --[[User:Eddsouza|eddsouza]] 09:29, 7 September 2008 (UTC)}}

Look at [[Today/2007.2#Adjust_UI_components_at_runtime]].

=== Storage ===

==== What microSDHC-cards are supported? ====

See [[Supported_microSD_cards|here]]

===System-level information===

==== What hardware signals are available?====

To simplify extending the hardware, various signals of interest are brought out via the JTAG connector and can be easily accessed with the debug board:

(TBA: List of signals)

Some additional signals that did not fit on the JTAG connector are brought out to solder pads:

(TBA: List of signals)

==== Is the JTAG interface that comes with GTA01 compatible with GTA02?====

Yes

==== How do I get low-level hardware-related functions, like power up device, dump register? ====

See [[GTA02_sysfs]]

=== Inputs ===

==== How can I type a '/' in the software keyboard? ====

See [[Switching Keyboards]]

==== How do I get a QWERTY layout software keyboard?====

See [[Switching Keyboards]]

=== Miscellaneous ===

====Will Openmoko "Just Work" with Mac OS X? ====

There has been some discussion of this on the mailing list. There is motivation, and there are interested developers. 
Not being a Mac OS X user, I don't know enough
to summarize the discussion to answer this question. Can someone please fill in?

For IP over USB cable connectivity, it is planned to improve/adapt the AJZaurusUSB driver, allowing ssh into the Openmoko.

It is expected that (Bluetooth/UB) SyncML based interoperation for
contacts and events can easily be achieved by a patch
to the Apple iSync configuration tables.

There is an open source implementation of Cocoa (GNUstep) that aims to run MacOS X compatible applications (sort of
PPC/x86/ARM universal binaries) on Openmoko devices: mySTEP.

==Software==

===General Questions===

====Is it completely free software/open source? ====

Yes. All software that runs on the main CPU and can be updated by the user is available in source.

Firmware in "black box" hardware modules that can not be modified by users is not available in source form. Effectively, these modules are "hardware only".

This allows, for example, that the driver for the GSM module be completely open sourced without violating any FCC rules.

====Can the software do/connect to/... ====

Reviews of the latest "bleeding edge" daily builds of the Openmoko software stack can be seen [[Snapshot_review|here]]

At the moment, the answer to many other questions is "no". The phone is at the moment a small Linux box with a touchscreen, a working dialer and some prototype apps.  Most do not function in any way that would be suitable for end-users.  If you want to add a feature or application request, then look over the existing [[Applications]] and either add one, or add a feature request to the applications page.

==== Does Openmoko run on any other hardware? ====

You can run it on your [[How_to_run_Openmoko_Apps_on_PC|PC]].  You may be able to run it on other [[Openmoko-supported_hardware | mobile platforms]]

==== Can Java applications from other mobile phones run on the FreeRunner? ====

I think a lot of work must still be done, but [[Java|this]] wiki page has some information

===Distributions===

====What is the stock distribution image that comes on the Neo FreeRunner?====

The 2007.2 distribution - see [[Distributions#2007.2| 2007.2 factory default software image]]

=====Are there any known issues with the factory-installed 2007.2 image on the Neo FreeRunner?=====

Yes, see [[Om_2007.2#Known_Issues|2007.2 Known Issues]]

===== Where can I download and reinstall the factory default image? =====

See [[Flashing_the_Neo_FreeRunner|Flashing the Neo FreeRunner]]

====What alternate distributions are available for the Neo FreeRunner?====

See [[Distributions|Distributions]]

==== How do I find out what image versions are in use on the phone? ====

You can run the commands given below on the phone (in an SSH session from your host PC, or in the Terminal application on the phone itself)
{| border="1" cellspacing="0" cellpadding="5" align="left"
! To find out
! Run
|- 
| Kernel version that is currently running
| 
  uname -a
|-
| The version of the root filesystem that you are currently using
| 
  cat /etc/version 
or 
  cat /etc/om-version
|-
| The versions of u-boot on the phone (The FreeRunner has one u-boot image in NOR memory, and one in NAND - see [[Booting the Neo FreeRunner]] for more information)
| 
  grep  Bootloader /dev/mtdblock0  (yields the NOR u-boot version)
or
  grep  Bootloader /dev/mtdblock1  (yields the NAND u-boot version)
|}

&nbsp;

====Where do I get the latest version of the official Openmoko image, 2008.8 (also known as ASU)?====

See [[Download#Om_2008.8_images_.28ASU.29| download Om 2008.8 images]]

===== Why are the buttons in TangoGPS too large? The zoom out is missing! =====

There is no GTK engine or theme installed with the ASU build.  Fortunately, this is easy to fix!

At a terminal:
:<tt># opkg install moko-gtk-theme moko-gtk-engine</tt>
:<tt># ln -s /usr/share/themes/Moko/gtk-2.0/gtkrc /home/root/.gtkrc-2.0</tt>

Now you have pretty colors and widgets, but the font is too big.  Edit <tt>/usr/share/themes/Moko/gtk-2.0/gtkrc</tt> in your favorite text editor and add the following line:
:<tt>gtk-font-name = "Sans 4"</tt>

To use the openmoko icon theme, install it with:
:<tt># opkg install openmoko-icon-theme-standard2</tt>

and enable it editing the <tt>/usr/share/themes/Moko/gtk-2.0/gtkrc</tt> adding the line:
:<tt>gtk-icon-theme-name="openmoko-standard"</tt>

You shouldn't even need to restart the device, although you will need to restart any GTK-based programs.


====Can the Neo FreeRunner dual boot? Multiple boot?====

Since the Neo FreeRunner can boot from the micro SD card, you can install and boot from as many distributions as will fit on your card. See [[Boot_from_sd_card|Booting from SD]].


====How do I install Debian on the Neo FreeRunner?====

See [[Debian#Installation|Debian Installation]]

=====Are there any known issues with Debian on the Neo FreeRunner?=====

See [[Debian#Known_Issues|Debian Known Issues]]

=====How do I replace the matchbox window manager with the xfce window manager?=====

Replace the matchbox-wm line in zhone-session with xfwm4 to start the xfce-wm.

Here's my (Fox Mulder) /usr/bin/zhone-session file which works with xfwm and matchbox keyboard popup:

 #!/bin/sh
 
 #zhone &
 exec startxfce4 &
 matchbox-keyboard-toggle &
 #exec matchbox-window-manager -use_titlebar yes
 exec xfwm4



=== Applications ===


====What software is on the phone?====

At the moment, almost no 'end-user' applications are present and working in a usable state.
It is possible to make and receive calls in some software revisions, this frequently breaks though.

====What software can be installed on the phone?====

Pretty much any that can be cross-compiled for the ARM architecture.

====Will it be possible to use popular VoIP applications such as Skype on the Openmoko platform? ====

Since it has WiFi the FreeRunner should be a good platform for VOIP use.    

In either case please check for softphone apps ported to the Openmoko distribution at the [http://projects.openmoko.org/  projects] page. We need to focus efforts on free software. Not convincing non-free software companies to release binaries for our Neos.

====Will it be possible to use popular Instant Messaging applications such as MSN Messenger? ====

Very probably. MSN is closed source and will only run where Microsoft wants you to run it. But there are many Open Source IM clients, many of which have a plugin architecture and so support the use of more than one IM protocol, even simultaneously. One example is [[Pidgin]], formerly called GAIM. GPRS does induce a certain amount of latency but that should not be a problem for simple, text-oriented chat between parties. And the GTA02's WiFi  will make it even better.

==== Does it support Flash so can I watch YouTube? ====
You don't really need Flash to watch YouTube videos, for example, if you want to watch www.youtube.com/watch?v=k9QLdK6pFCI just install mplayer and use this command: 
 mplayer http://ytpocket.com/getflv.php?id=k9QLdK6pFCI
or use this small script with the video URL as the first parametre:
 #!/bin/sh
 vid=`echo "$1" | sed 's/.*\?.*=\(.*\)/\1/'`
 mplayer http://ytpocket.com/getflv.php?id=$vid

=== Package Management===

==== How do I install and manage software on Openmoko? ====

See [http://handhelds.org/moin/moin.cgi/Ipkg here]

==== What about opkg? ====

See [[Opkg|here]]

==== What is the meaning of the error codes from ipkg? ====

See [[Opkg#Error_Codes|here]]

===Development===

====How can I compile programs for the Neo FreeRunner? ====

See [[Toolchain]].

====Is there an emulator available for Openmoko? ====

For a lot of testing and development work you can simply run Openmoko directly on your PC.

=====QEMU=====

QEMU can emulate the Neo 1973 and the Neo FreeRunner. The [[MokoMakefile]] has support for automatically building, flashing, and running [[Openmoko under QEMU|the Neo emulator]].

*Ubuntu users can follow the instructions in [[Automatic_emulation_in_Ubuntu]]

*Users of other Linux distributions can try the following:
:"make qemu” will build qemu-neo1973, download the latest official openmoko images, flash the images into the virtual NAND flash, and run the emulator.

See [[Qemu]] for more advanced information on running Openmoko in Qemu.

=====Xoo=====

[http://projects.o-hand.com/xoo Xoo]. Koen says: "Xoo should be enough for most applications people will develop, since most don't need access to the GSM uart directly. If you're hardcore you could use qemu + xoo, but that still doesn't emulate all the hardware quirks (e.g. unaligned access)".

Update: Stefan Schmidt has resized the [[Neo1973]] Mock-up and written a small description for xoo. In his words:

It's not really usable at all, as you need a really high screen resolution to fit the whole picture on your screen. And of course the dpi are wrong. Even no buttons because I can't remember where they are at the case.

http://www.datenfreihafen.org/~stefan/OpenMoko/neo1973-xoo-device.tar.bz2

Start with 'xoo --device /path/to/neo1973.xml'

Some more details [[Getting_Openmoko_working_on_host_with_Xoo|here]].

=====Xephyr=====

Or use Xephyr directly with locally compiled programs (e.g. matchbox svn + openmoko):
 Xephyr -screen 480x640 -nolisten tcp -ac :1 &
 export DISPLAY=:1
 export LD_LIBRARY_PATH=/usr/local/lib
 matchbox-window-manager -display $DISPLAY -use_titlebar no \
  -use_super_modal yes -use_lowlight yes -use_dialog_mode static \
  -use_cursor yes &
 matchbox-panel --geometry=480x44 --end-applets=clock &
 openmoko-footer &
 openmoko-taskmanager &

====Where can I find some type of tutorial for a 'Hello, world' on Openmoko? ====

This should get you started:
* [[Building_a_hello_world_application]]
* http://www.gtk.org/documentation.html#Tutorials

====Can PalmOS apps applications be ported to run on Openmoko? ====

Making legacy apps written for the "Garnet" OS (née "Palm OS") run on Linux
is decidedly non-trivial.

PalmOS apps are in general very hard to simply 'port'. Particularly well-designed programs may make it possible.

The ACCESS Linux Platform will include Garnet on Host (GHost), a PalmOS emulator that will support M6800 (68k) and ARM PalmOS applications. This part (GarnetVM and the .prc loader) will however be closed-source and likely under a restrictive license (fact confirmed by ACCESS Co. employees), making it rather unusable. In addition GarnetVM depends on Hiker and other packages.

It is possible that POSE, an emulator that simulates a Palm device on a Linux host could be used to allow 68k based applications to run.  This emulator has been around a long time; one expects that it will also run on Openmoko, but this has to be considered a short-term bandaid rather than a long-term solution.

Hopefully emulation will be necessary only for M68000 code (pre-PalmOS 5) while native ARM programs can run natively under Linux, provided a proper set of PalmOS libraries and a .prc executable loader.

==== Does it support Java? ====
It will have eventually, if you help us to get it working. Some good places to keep track of would be [http://projects.openmoko.org/projects/java-pkg/ projects.openmoko.org] and [https://phoneme.dev.java.net/ PhoneME].

Project [[https://wiki.evolvis.org/jalimo/index.php/Jalimo Jalimo]] is a project aiming to provide a Java stack on mobile devices. There is a [https://wiki.evolvis.org/jalimo/index.php/Openmoko port of Jalimo] for Openmoko.
The [[Debian]] distribution supports CacaoVM and JamVM through apt-get. See [[Java]] for more infos.

==== Does it support Ruby? ====

For Ruby 1.9, please refer to http://blog.sparkymat.net/2008/08/10/ruby-19-on-openmoko/

For Ruby 1.8.6, please refer to http://blog.wolfman.com/articles/2008/08/10/ruby-1-8-6-on-openmoko-freerunner

==== Does it support Python? ====

Yes, with some caveats. See [[Python]] for more information.


====How do I dump details about X11 configuration and extensions? ====

Run the command xdpyinfo. Generally, you would do this via an SSH session to the phone, so you may need to first 

 export DISPLAY=":0.0"

and then run

 xdpyinfo

For an example invocation, see [http://lists.openmoko.org/pipermail/community/2007-January/001353.html xdpyinfo output].

== Distribution Customization ==

{{Note| Suggestion: this should be split off into a separate page, since many of the questions below aren't really overview-level but specialized; a question like "How do I customize a distribution?" could be added to the Software - Distributions part, linking to the new page. --[[User:Eddsouza|eddsouza]] 07:35, 7 September 2008 (UTC)}}

=== Compilation & packaging ===
==== What is the 'overlay' approach to bitbake development? ====
:You can create a local overlay for the bitbake build chain and develop in the overlay as described in [[Application_Development_Crash_Course| Application Development Crash Course]].

==== Which .bb files are related with the Openmoko? ====
==== Are there any configuration files for Openmoko? ====
==== How can I port an application written with autotools to Openmoko? ====
After you source the [[Toolchain|Openmoko toolchain]] variables, the Openmoko processor compiler becomes the default compiler. You can compile any GNU - like project just typing ''./configure --host i686'' and then ''make'' - it will produce libraries and executables as expected. Just these executables will not run on your i686 host - they will run on Openmoko ARM processor. Use scp to upload the executables to your phone.

==== How can I add an application written with autotools to the openmoko tree? ====

==== How can I make changes in the openmoko applications? ====
==== How can I submit my changes? ====
==== Can I use the mokomakefile in the development process? How? ====

:Yes, [[MokoMakefile]] can be used in the development process.  See [[MokoMakefile#Developing_with_MokoMakefile| Developing with MokoMakefile]].

==== What's the way to include/exclude a newly added package to/from the final rootfs? ====
==== Where do the final ipk & binary files reside? ====
:ipk files are in 
 ./build/tmp/deploy/glibc/ipk/
:binary images are in
 ./build/tmp/deploy/glibc/images/fic-gta01/

==== How can I add an application to the applications list? ====
==== How can I assign an image to my new application to be seen in the applications list? ====
The Openmoko project tree contains the folder 'data' where you can put any 128*128 icon. You need to mention the icon in two places in this folder: 
* Makefile.am must contain the line dist_appicon_DATA = <icon_name>.png
* The <application_name>.desktop file that must be in this folder should contain the Icon=<icon_name> (without file type).



==Misc==

===On the lists on lists.openmoko.org, should replies be added above or below the original text? ===

Please reply UNDER post.

===How can I find out if a question or topic has already been discussed on the mailing lists? ===

By searching the mailing list archives. For example, using Google searches:

 site:openmoko.org text

For example, to search for accelerometer:

 site:openmoko.org accelerometer

If you only want to read the "official" mails from FIC people or from Openmoko people:

 site:openmoko.org text "at fic.com.tw"
 site:openmoko.org text "at openmoko.org"

For example to search for "release date" from FIC people:

 site:openmoko.org "release date" "at fic.com.tw"

Alternatively you can use the [http://www.google.com/coop/cse?cx=018430699993342716089%3Aszsaurhronw custom Openmoko search engine] that is using [http://www.google.com/coop/ Google Co-op].

===how many dead pixels may the LCM have before calling it defect? ===

The answer for the display used in GTA01 and GTA02 is '2'

=== how many visits does this wiki have? ===
See this [[Wiki_statistic_numbers|wiki's statistics]] page.

=Historical=
The Neo1973 was last available in Febuary 2008. 

==Neo1973 Hardware== 

===What are the hardware specifications of Neo 1973 ? ===

See page [[Neo1973_Hardware]] and category [[:Category:Neo1973 Hardware | Neo1973 Hardware]] and [[Disassembling Neo1973]]

===How do I input text? ===

Use provided keyboard app.

Use Bluetooth keyboard.

For more methods and ideas see [[Wishlist:Text_Input]].

===Can I record calls and/or play audio files in calls? ===

Yes, audio path from GSM to/from mic and speakers is completely controllable by user. For example recording calls (both sides) and implementing an [[Answering Machine]] is possible. Also using text->speech should be possible or modifying outgoing voice. Currently there is no software bundled in phone to do this.
There are only 2 A/D inputs and three D/A outputs (one dedicated to the earpiece). This means that stereo audio playback cannot happen at the same time as the [[Answering Machine]] functionality, amongst other things. See the audio page. [[Neo1973_Audio_Subsystem|Neo1973 Audio Subsystem]]

===What is the battery life? ===

There has been no word on this so far, but see [[Neo1973 Power Management#Approximate_power_draw_of_various_subsystems|these estimates]] for a rough idea.  More information about the battery [[Neo1973 Battery|here]].

=== USB ===

====What can I do with the USB port on the Neo? ====
Charge the phone, communicate with it over USB-serial, or USB-networking.

Plug external devices, such as wifi, cameras, or mass-storage devices.

====What can't I do with the USB? ====

The only limitation on current hardware seems to be no usb 2.0 support, which means slower communication with 2.0 devices.

====Why is only USB 1.1 provided? ====

The processor has USB 1.1 built in. One with USB2 built in would have been more expensive, and might not be open.

The FreeRunner has the same processor as the Neo1973.

====What are the details of the USB port on the Neo? How does it compare to USB On-The-Go? ====

The Neo will have mini-USB-B, and will be able to function as either a host or a device. It will NOT be USB On-The-Go.  OTG is a complex specification, and it comprises way more than just
an AB socket, but also electrical and software components which cannot be provide by the S3C2410.

You will need a special Mini-B to regular-B cable (note that this won't actually comply with the USB standard:  a compliant cable has to have an A or Mini-A plug on one end, and B or Mini-B on the other).



[[Category:Application Developer]]
[[Category:Basic End User]]
[[Category:FAQ]]
